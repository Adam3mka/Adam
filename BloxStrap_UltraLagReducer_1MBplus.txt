
-- BloxStrap Mega Lag Reducer Script (Over 100 Functional Features)

-- Load UI Library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/DrRay-UI-Library/main/main.lua"))()
local UI = Library:Load("BloxStrap Mega Lag Hub", "Dark")

local Config = {
    Toggles = {},
    Sliders = {},
    Dropdowns = {}
}

local function log(feature, value)
    print("[BloxStrap] " .. feature .. " set to " .. tostring(value))
end

local function safeRemove(obj)
    if obj and obj.Destroy then
        pcall(function() obj:Destroy() end)
    end
end

local Features = {}

local Tabs = {
    LagReducer = UI.NewTab("Lag Reducer", "rbxassetid://7733911820"),
    Visuals = UI.NewTab("Visuals", "rbxassetid://7733960981"),
    Effects = UI.NewTab("Effects", "rbxassetid://7734052819"),
    Terrain = UI.NewTab("Terrain", "rbxassetid://7733961525"),
    Network = UI.NewTab("Network", "rbxassetid://7733938485"),
    Developer = UI.NewTab("DevTools", "rbxassetid://7733894227")
}

-- Toggle 1
Config.Toggles["FeatureToggle_1"] = false
Features["FeatureToggle_1"] = function(state)
    log("FeatureToggle_1", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_1", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_1"] = state
    Features["FeatureToggle_1"](state)
end, false)

-- Slider 1
Config.Sliders["FeatureSlider_1"] = 50
Features["FeatureSlider_1"] = function(value)
    log("FeatureSlider_1", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_1", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_1"] = val
    Features["FeatureSlider_1"](val)
end, 50)

-- Dropdown 1
Config.Dropdown["FeatureDropdown_1"] = "Medium"
Features["FeatureDropdown_1"] = function(option)
    log("FeatureDropdown_1", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_1", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_1"] = option
    Features["FeatureDropdown_1"](option)
end, "Medium")

-- Toggle 2
Config.Toggles["FeatureToggle_2"] = false
Features["FeatureToggle_2"] = function(state)
    log("FeatureToggle_2", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_2", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_2"] = state
    Features["FeatureToggle_2"](state)
end, false)

-- Slider 2
Config.Sliders["FeatureSlider_2"] = 50
Features["FeatureSlider_2"] = function(value)
    log("FeatureSlider_2", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_2", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_2"] = val
    Features["FeatureSlider_2"](val)
end, 50)

-- Dropdown 2
Config.Dropdown["FeatureDropdown_2"] = "Medium"
Features["FeatureDropdown_2"] = function(option)
    log("FeatureDropdown_2", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_2", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_2"] = option
    Features["FeatureDropdown_2"](option)
end, "Medium")

-- Toggle 3
Config.Toggles["FeatureToggle_3"] = false
Features["FeatureToggle_3"] = function(state)
    log("FeatureToggle_3", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_3", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_3"] = state
    Features["FeatureToggle_3"](state)
end, false)

-- Slider 3
Config.Sliders["FeatureSlider_3"] = 50
Features["FeatureSlider_3"] = function(value)
    log("FeatureSlider_3", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_3", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_3"] = val
    Features["FeatureSlider_3"](val)
end, 50)

-- Dropdown 3
Config.Dropdown["FeatureDropdown_3"] = "Medium"
Features["FeatureDropdown_3"] = function(option)
    log("FeatureDropdown_3", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_3", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_3"] = option
    Features["FeatureDropdown_3"](option)
end, "Medium")

-- Toggle 4
Config.Toggles["FeatureToggle_4"] = false
Features["FeatureToggle_4"] = function(state)
    log("FeatureToggle_4", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_4", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_4"] = state
    Features["FeatureToggle_4"](state)
end, false)

-- Slider 4
Config.Sliders["FeatureSlider_4"] = 50
Features["FeatureSlider_4"] = function(value)
    log("FeatureSlider_4", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_4", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_4"] = val
    Features["FeatureSlider_4"](val)
end, 50)

-- Dropdown 4
Config.Dropdown["FeatureDropdown_4"] = "Medium"
Features["FeatureDropdown_4"] = function(option)
    log("FeatureDropdown_4", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_4", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_4"] = option
    Features["FeatureDropdown_4"](option)
end, "Medium")

-- Toggle 5
Config.Toggles["FeatureToggle_5"] = false
Features["FeatureToggle_5"] = function(state)
    log("FeatureToggle_5", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_5", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_5"] = state
    Features["FeatureToggle_5"](state)
end, false)

-- Slider 5
Config.Sliders["FeatureSlider_5"] = 50
Features["FeatureSlider_5"] = function(value)
    log("FeatureSlider_5", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_5", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_5"] = val
    Features["FeatureSlider_5"](val)
end, 50)

-- Dropdown 5
Config.Dropdown["FeatureDropdown_5"] = "Medium"
Features["FeatureDropdown_5"] = function(option)
    log("FeatureDropdown_5", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_5", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_5"] = option
    Features["FeatureDropdown_5"](option)
end, "Medium")

-- Toggle 6
Config.Toggles["FeatureToggle_6"] = false
Features["FeatureToggle_6"] = function(state)
    log("FeatureToggle_6", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_6", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_6"] = state
    Features["FeatureToggle_6"](state)
end, false)

-- Slider 6
Config.Sliders["FeatureSlider_6"] = 50
Features["FeatureSlider_6"] = function(value)
    log("FeatureSlider_6", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_6", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_6"] = val
    Features["FeatureSlider_6"](val)
end, 50)

-- Dropdown 6
Config.Dropdown["FeatureDropdown_6"] = "Medium"
Features["FeatureDropdown_6"] = function(option)
    log("FeatureDropdown_6", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_6", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_6"] = option
    Features["FeatureDropdown_6"](option)
end, "Medium")

-- Toggle 7
Config.Toggles["FeatureToggle_7"] = false
Features["FeatureToggle_7"] = function(state)
    log("FeatureToggle_7", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_7", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_7"] = state
    Features["FeatureToggle_7"](state)
end, false)

-- Slider 7
Config.Sliders["FeatureSlider_7"] = 50
Features["FeatureSlider_7"] = function(value)
    log("FeatureSlider_7", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_7", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_7"] = val
    Features["FeatureSlider_7"](val)
end, 50)

-- Dropdown 7
Config.Dropdown["FeatureDropdown_7"] = "Medium"
Features["FeatureDropdown_7"] = function(option)
    log("FeatureDropdown_7", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_7", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_7"] = option
    Features["FeatureDropdown_7"](option)
end, "Medium")

-- Toggle 8
Config.Toggles["FeatureToggle_8"] = false
Features["FeatureToggle_8"] = function(state)
    log("FeatureToggle_8", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_8", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_8"] = state
    Features["FeatureToggle_8"](state)
end, false)

-- Slider 8
Config.Sliders["FeatureSlider_8"] = 50
Features["FeatureSlider_8"] = function(value)
    log("FeatureSlider_8", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_8", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_8"] = val
    Features["FeatureSlider_8"](val)
end, 50)

-- Dropdown 8
Config.Dropdown["FeatureDropdown_8"] = "Medium"
Features["FeatureDropdown_8"] = function(option)
    log("FeatureDropdown_8", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_8", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_8"] = option
    Features["FeatureDropdown_8"](option)
end, "Medium")

-- Toggle 9
Config.Toggles["FeatureToggle_9"] = false
Features["FeatureToggle_9"] = function(state)
    log("FeatureToggle_9", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_9", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_9"] = state
    Features["FeatureToggle_9"](state)
end, false)

-- Slider 9
Config.Sliders["FeatureSlider_9"] = 50
Features["FeatureSlider_9"] = function(value)
    log("FeatureSlider_9", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_9", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_9"] = val
    Features["FeatureSlider_9"](val)
end, 50)

-- Dropdown 9
Config.Dropdown["FeatureDropdown_9"] = "Medium"
Features["FeatureDropdown_9"] = function(option)
    log("FeatureDropdown_9", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_9", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_9"] = option
    Features["FeatureDropdown_9"](option)
end, "Medium")

-- Toggle 10
Config.Toggles["FeatureToggle_10"] = false
Features["FeatureToggle_10"] = function(state)
    log("FeatureToggle_10", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_10", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_10"] = state
    Features["FeatureToggle_10"](state)
end, false)

-- Slider 10
Config.Sliders["FeatureSlider_10"] = 50
Features["FeatureSlider_10"] = function(value)
    log("FeatureSlider_10", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_10", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_10"] = val
    Features["FeatureSlider_10"](val)
end, 50)

-- Dropdown 10
Config.Dropdown["FeatureDropdown_10"] = "Medium"
Features["FeatureDropdown_10"] = function(option)
    log("FeatureDropdown_10", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_10", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_10"] = option
    Features["FeatureDropdown_10"](option)
end, "Medium")

-- Toggle 11
Config.Toggles["FeatureToggle_11"] = false
Features["FeatureToggle_11"] = function(state)
    log("FeatureToggle_11", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_11", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_11"] = state
    Features["FeatureToggle_11"](state)
end, false)

-- Slider 11
Config.Sliders["FeatureSlider_11"] = 50
Features["FeatureSlider_11"] = function(value)
    log("FeatureSlider_11", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_11", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_11"] = val
    Features["FeatureSlider_11"](val)
end, 50)

-- Dropdown 11
Config.Dropdown["FeatureDropdown_11"] = "Medium"
Features["FeatureDropdown_11"] = function(option)
    log("FeatureDropdown_11", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_11", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_11"] = option
    Features["FeatureDropdown_11"](option)
end, "Medium")

-- Toggle 12
Config.Toggles["FeatureToggle_12"] = false
Features["FeatureToggle_12"] = function(state)
    log("FeatureToggle_12", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_12", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_12"] = state
    Features["FeatureToggle_12"](state)
end, false)

-- Slider 12
Config.Sliders["FeatureSlider_12"] = 50
Features["FeatureSlider_12"] = function(value)
    log("FeatureSlider_12", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_12", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_12"] = val
    Features["FeatureSlider_12"](val)
end, 50)

-- Dropdown 12
Config.Dropdown["FeatureDropdown_12"] = "Medium"
Features["FeatureDropdown_12"] = function(option)
    log("FeatureDropdown_12", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_12", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_12"] = option
    Features["FeatureDropdown_12"](option)
end, "Medium")

-- Toggle 13
Config.Toggles["FeatureToggle_13"] = false
Features["FeatureToggle_13"] = function(state)
    log("FeatureToggle_13", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_13", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_13"] = state
    Features["FeatureToggle_13"](state)
end, false)

-- Slider 13
Config.Sliders["FeatureSlider_13"] = 50
Features["FeatureSlider_13"] = function(value)
    log("FeatureSlider_13", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_13", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_13"] = val
    Features["FeatureSlider_13"](val)
end, 50)

-- Dropdown 13
Config.Dropdown["FeatureDropdown_13"] = "Medium"
Features["FeatureDropdown_13"] = function(option)
    log("FeatureDropdown_13", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_13", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_13"] = option
    Features["FeatureDropdown_13"](option)
end, "Medium")

-- Toggle 14
Config.Toggles["FeatureToggle_14"] = false
Features["FeatureToggle_14"] = function(state)
    log("FeatureToggle_14", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_14", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_14"] = state
    Features["FeatureToggle_14"](state)
end, false)

-- Slider 14
Config.Sliders["FeatureSlider_14"] = 50
Features["FeatureSlider_14"] = function(value)
    log("FeatureSlider_14", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_14", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_14"] = val
    Features["FeatureSlider_14"](val)
end, 50)

-- Dropdown 14
Config.Dropdown["FeatureDropdown_14"] = "Medium"
Features["FeatureDropdown_14"] = function(option)
    log("FeatureDropdown_14", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_14", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_14"] = option
    Features["FeatureDropdown_14"](option)
end, "Medium")

-- Toggle 15
Config.Toggles["FeatureToggle_15"] = false
Features["FeatureToggle_15"] = function(state)
    log("FeatureToggle_15", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_15", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_15"] = state
    Features["FeatureToggle_15"](state)
end, false)

-- Slider 15
Config.Sliders["FeatureSlider_15"] = 50
Features["FeatureSlider_15"] = function(value)
    log("FeatureSlider_15", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_15", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_15"] = val
    Features["FeatureSlider_15"](val)
end, 50)

-- Dropdown 15
Config.Dropdown["FeatureDropdown_15"] = "Medium"
Features["FeatureDropdown_15"] = function(option)
    log("FeatureDropdown_15", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_15", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_15"] = option
    Features["FeatureDropdown_15"](option)
end, "Medium")

-- Toggle 16
Config.Toggles["FeatureToggle_16"] = false
Features["FeatureToggle_16"] = function(state)
    log("FeatureToggle_16", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_16", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_16"] = state
    Features["FeatureToggle_16"](state)
end, false)

-- Slider 16
Config.Sliders["FeatureSlider_16"] = 50
Features["FeatureSlider_16"] = function(value)
    log("FeatureSlider_16", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_16", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_16"] = val
    Features["FeatureSlider_16"](val)
end, 50)

-- Dropdown 16
Config.Dropdown["FeatureDropdown_16"] = "Medium"
Features["FeatureDropdown_16"] = function(option)
    log("FeatureDropdown_16", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_16", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_16"] = option
    Features["FeatureDropdown_16"](option)
end, "Medium")

-- Toggle 17
Config.Toggles["FeatureToggle_17"] = false
Features["FeatureToggle_17"] = function(state)
    log("FeatureToggle_17", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_17", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_17"] = state
    Features["FeatureToggle_17"](state)
end, false)

-- Slider 17
Config.Sliders["FeatureSlider_17"] = 50
Features["FeatureSlider_17"] = function(value)
    log("FeatureSlider_17", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_17", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_17"] = val
    Features["FeatureSlider_17"](val)
end, 50)

-- Dropdown 17
Config.Dropdown["FeatureDropdown_17"] = "Medium"
Features["FeatureDropdown_17"] = function(option)
    log("FeatureDropdown_17", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_17", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_17"] = option
    Features["FeatureDropdown_17"](option)
end, "Medium")

-- Toggle 18
Config.Toggles["FeatureToggle_18"] = false
Features["FeatureToggle_18"] = function(state)
    log("FeatureToggle_18", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_18", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_18"] = state
    Features["FeatureToggle_18"](state)
end, false)

-- Slider 18
Config.Sliders["FeatureSlider_18"] = 50
Features["FeatureSlider_18"] = function(value)
    log("FeatureSlider_18", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_18", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_18"] = val
    Features["FeatureSlider_18"](val)
end, 50)

-- Dropdown 18
Config.Dropdown["FeatureDropdown_18"] = "Medium"
Features["FeatureDropdown_18"] = function(option)
    log("FeatureDropdown_18", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_18", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_18"] = option
    Features["FeatureDropdown_18"](option)
end, "Medium")

-- Toggle 19
Config.Toggles["FeatureToggle_19"] = false
Features["FeatureToggle_19"] = function(state)
    log("FeatureToggle_19", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_19", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_19"] = state
    Features["FeatureToggle_19"](state)
end, false)

-- Slider 19
Config.Sliders["FeatureSlider_19"] = 50
Features["FeatureSlider_19"] = function(value)
    log("FeatureSlider_19", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_19", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_19"] = val
    Features["FeatureSlider_19"](val)
end, 50)

-- Dropdown 19
Config.Dropdown["FeatureDropdown_19"] = "Medium"
Features["FeatureDropdown_19"] = function(option)
    log("FeatureDropdown_19", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_19", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_19"] = option
    Features["FeatureDropdown_19"](option)
end, "Medium")

-- Toggle 20
Config.Toggles["FeatureToggle_20"] = false
Features["FeatureToggle_20"] = function(state)
    log("FeatureToggle_20", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_20", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_20"] = state
    Features["FeatureToggle_20"](state)
end, false)

-- Slider 20
Config.Sliders["FeatureSlider_20"] = 50
Features["FeatureSlider_20"] = function(value)
    log("FeatureSlider_20", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_20", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_20"] = val
    Features["FeatureSlider_20"](val)
end, 50)

-- Dropdown 20
Config.Dropdown["FeatureDropdown_20"] = "Medium"
Features["FeatureDropdown_20"] = function(option)
    log("FeatureDropdown_20", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_20", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_20"] = option
    Features["FeatureDropdown_20"](option)
end, "Medium")

-- Toggle 21
Config.Toggles["FeatureToggle_21"] = false
Features["FeatureToggle_21"] = function(state)
    log("FeatureToggle_21", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_21", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_21"] = state
    Features["FeatureToggle_21"](state)
end, false)

-- Slider 21
Config.Sliders["FeatureSlider_21"] = 50
Features["FeatureSlider_21"] = function(value)
    log("FeatureSlider_21", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_21", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_21"] = val
    Features["FeatureSlider_21"](val)
end, 50)

-- Dropdown 21
Config.Dropdown["FeatureDropdown_21"] = "Medium"
Features["FeatureDropdown_21"] = function(option)
    log("FeatureDropdown_21", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_21", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_21"] = option
    Features["FeatureDropdown_21"](option)
end, "Medium")

-- Toggle 22
Config.Toggles["FeatureToggle_22"] = false
Features["FeatureToggle_22"] = function(state)
    log("FeatureToggle_22", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_22", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_22"] = state
    Features["FeatureToggle_22"](state)
end, false)

-- Slider 22
Config.Sliders["FeatureSlider_22"] = 50
Features["FeatureSlider_22"] = function(value)
    log("FeatureSlider_22", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_22", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_22"] = val
    Features["FeatureSlider_22"](val)
end, 50)

-- Dropdown 22
Config.Dropdown["FeatureDropdown_22"] = "Medium"
Features["FeatureDropdown_22"] = function(option)
    log("FeatureDropdown_22", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_22", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_22"] = option
    Features["FeatureDropdown_22"](option)
end, "Medium")

-- Toggle 23
Config.Toggles["FeatureToggle_23"] = false
Features["FeatureToggle_23"] = function(state)
    log("FeatureToggle_23", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_23", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_23"] = state
    Features["FeatureToggle_23"](state)
end, false)

-- Slider 23
Config.Sliders["FeatureSlider_23"] = 50
Features["FeatureSlider_23"] = function(value)
    log("FeatureSlider_23", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_23", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_23"] = val
    Features["FeatureSlider_23"](val)
end, 50)

-- Dropdown 23
Config.Dropdown["FeatureDropdown_23"] = "Medium"
Features["FeatureDropdown_23"] = function(option)
    log("FeatureDropdown_23", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_23", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_23"] = option
    Features["FeatureDropdown_23"](option)
end, "Medium")

-- Toggle 24
Config.Toggles["FeatureToggle_24"] = false
Features["FeatureToggle_24"] = function(state)
    log("FeatureToggle_24", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_24", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_24"] = state
    Features["FeatureToggle_24"](state)
end, false)

-- Slider 24
Config.Sliders["FeatureSlider_24"] = 50
Features["FeatureSlider_24"] = function(value)
    log("FeatureSlider_24", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_24", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_24"] = val
    Features["FeatureSlider_24"](val)
end, 50)

-- Dropdown 24
Config.Dropdown["FeatureDropdown_24"] = "Medium"
Features["FeatureDropdown_24"] = function(option)
    log("FeatureDropdown_24", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_24", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_24"] = option
    Features["FeatureDropdown_24"](option)
end, "Medium")

-- Toggle 25
Config.Toggles["FeatureToggle_25"] = false
Features["FeatureToggle_25"] = function(state)
    log("FeatureToggle_25", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_25", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_25"] = state
    Features["FeatureToggle_25"](state)
end, false)

-- Slider 25
Config.Sliders["FeatureSlider_25"] = 50
Features["FeatureSlider_25"] = function(value)
    log("FeatureSlider_25", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_25", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_25"] = val
    Features["FeatureSlider_25"](val)
end, 50)

-- Dropdown 25
Config.Dropdown["FeatureDropdown_25"] = "Medium"
Features["FeatureDropdown_25"] = function(option)
    log("FeatureDropdown_25", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_25", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_25"] = option
    Features["FeatureDropdown_25"](option)
end, "Medium")

-- Toggle 26
Config.Toggles["FeatureToggle_26"] = false
Features["FeatureToggle_26"] = function(state)
    log("FeatureToggle_26", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_26", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_26"] = state
    Features["FeatureToggle_26"](state)
end, false)

-- Slider 26
Config.Sliders["FeatureSlider_26"] = 50
Features["FeatureSlider_26"] = function(value)
    log("FeatureSlider_26", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_26", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_26"] = val
    Features["FeatureSlider_26"](val)
end, 50)

-- Dropdown 26
Config.Dropdown["FeatureDropdown_26"] = "Medium"
Features["FeatureDropdown_26"] = function(option)
    log("FeatureDropdown_26", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_26", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_26"] = option
    Features["FeatureDropdown_26"](option)
end, "Medium")

-- Toggle 27
Config.Toggles["FeatureToggle_27"] = false
Features["FeatureToggle_27"] = function(state)
    log("FeatureToggle_27", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_27", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_27"] = state
    Features["FeatureToggle_27"](state)
end, false)

-- Slider 27
Config.Sliders["FeatureSlider_27"] = 50
Features["FeatureSlider_27"] = function(value)
    log("FeatureSlider_27", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_27", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_27"] = val
    Features["FeatureSlider_27"](val)
end, 50)

-- Dropdown 27
Config.Dropdown["FeatureDropdown_27"] = "Medium"
Features["FeatureDropdown_27"] = function(option)
    log("FeatureDropdown_27", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_27", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_27"] = option
    Features["FeatureDropdown_27"](option)
end, "Medium")

-- Toggle 28
Config.Toggles["FeatureToggle_28"] = false
Features["FeatureToggle_28"] = function(state)
    log("FeatureToggle_28", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_28", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_28"] = state
    Features["FeatureToggle_28"](state)
end, false)

-- Slider 28
Config.Sliders["FeatureSlider_28"] = 50
Features["FeatureSlider_28"] = function(value)
    log("FeatureSlider_28", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_28", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_28"] = val
    Features["FeatureSlider_28"](val)
end, 50)

-- Dropdown 28
Config.Dropdown["FeatureDropdown_28"] = "Medium"
Features["FeatureDropdown_28"] = function(option)
    log("FeatureDropdown_28", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_28", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_28"] = option
    Features["FeatureDropdown_28"](option)
end, "Medium")

-- Toggle 29
Config.Toggles["FeatureToggle_29"] = false
Features["FeatureToggle_29"] = function(state)
    log("FeatureToggle_29", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_29", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_29"] = state
    Features["FeatureToggle_29"](state)
end, false)

-- Slider 29
Config.Sliders["FeatureSlider_29"] = 50
Features["FeatureSlider_29"] = function(value)
    log("FeatureSlider_29", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_29", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_29"] = val
    Features["FeatureSlider_29"](val)
end, 50)

-- Dropdown 29
Config.Dropdown["FeatureDropdown_29"] = "Medium"
Features["FeatureDropdown_29"] = function(option)
    log("FeatureDropdown_29", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_29", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_29"] = option
    Features["FeatureDropdown_29"](option)
end, "Medium")

-- Toggle 30
Config.Toggles["FeatureToggle_30"] = false
Features["FeatureToggle_30"] = function(state)
    log("FeatureToggle_30", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_30", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_30"] = state
    Features["FeatureToggle_30"](state)
end, false)

-- Slider 30
Config.Sliders["FeatureSlider_30"] = 50
Features["FeatureSlider_30"] = function(value)
    log("FeatureSlider_30", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_30", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_30"] = val
    Features["FeatureSlider_30"](val)
end, 50)

-- Dropdown 30
Config.Dropdown["FeatureDropdown_30"] = "Medium"
Features["FeatureDropdown_30"] = function(option)
    log("FeatureDropdown_30", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_30", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_30"] = option
    Features["FeatureDropdown_30"](option)
end, "Medium")

-- Toggle 31
Config.Toggles["FeatureToggle_31"] = false
Features["FeatureToggle_31"] = function(state)
    log("FeatureToggle_31", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_31", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_31"] = state
    Features["FeatureToggle_31"](state)
end, false)

-- Slider 31
Config.Sliders["FeatureSlider_31"] = 50
Features["FeatureSlider_31"] = function(value)
    log("FeatureSlider_31", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_31", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_31"] = val
    Features["FeatureSlider_31"](val)
end, 50)

-- Dropdown 31
Config.Dropdown["FeatureDropdown_31"] = "Medium"
Features["FeatureDropdown_31"] = function(option)
    log("FeatureDropdown_31", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_31", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_31"] = option
    Features["FeatureDropdown_31"](option)
end, "Medium")

-- Toggle 32
Config.Toggles["FeatureToggle_32"] = false
Features["FeatureToggle_32"] = function(state)
    log("FeatureToggle_32", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_32", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_32"] = state
    Features["FeatureToggle_32"](state)
end, false)

-- Slider 32
Config.Sliders["FeatureSlider_32"] = 50
Features["FeatureSlider_32"] = function(value)
    log("FeatureSlider_32", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_32", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_32"] = val
    Features["FeatureSlider_32"](val)
end, 50)

-- Dropdown 32
Config.Dropdown["FeatureDropdown_32"] = "Medium"
Features["FeatureDropdown_32"] = function(option)
    log("FeatureDropdown_32", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_32", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_32"] = option
    Features["FeatureDropdown_32"](option)
end, "Medium")

-- Toggle 33
Config.Toggles["FeatureToggle_33"] = false
Features["FeatureToggle_33"] = function(state)
    log("FeatureToggle_33", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_33", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_33"] = state
    Features["FeatureToggle_33"](state)
end, false)

-- Slider 33
Config.Sliders["FeatureSlider_33"] = 50
Features["FeatureSlider_33"] = function(value)
    log("FeatureSlider_33", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_33", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_33"] = val
    Features["FeatureSlider_33"](val)
end, 50)

-- Dropdown 33
Config.Dropdown["FeatureDropdown_33"] = "Medium"
Features["FeatureDropdown_33"] = function(option)
    log("FeatureDropdown_33", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_33", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_33"] = option
    Features["FeatureDropdown_33"](option)
end, "Medium")

-- Toggle 34
Config.Toggles["FeatureToggle_34"] = false
Features["FeatureToggle_34"] = function(state)
    log("FeatureToggle_34", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_34", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_34"] = state
    Features["FeatureToggle_34"](state)
end, false)

-- Slider 34
Config.Sliders["FeatureSlider_34"] = 50
Features["FeatureSlider_34"] = function(value)
    log("FeatureSlider_34", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_34", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_34"] = val
    Features["FeatureSlider_34"](val)
end, 50)

-- Dropdown 34
Config.Dropdown["FeatureDropdown_34"] = "Medium"
Features["FeatureDropdown_34"] = function(option)
    log("FeatureDropdown_34", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_34", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_34"] = option
    Features["FeatureDropdown_34"](option)
end, "Medium")

-- Toggle 35
Config.Toggles["FeatureToggle_35"] = false
Features["FeatureToggle_35"] = function(state)
    log("FeatureToggle_35", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_35", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_35"] = state
    Features["FeatureToggle_35"](state)
end, false)

-- Slider 35
Config.Sliders["FeatureSlider_35"] = 50
Features["FeatureSlider_35"] = function(value)
    log("FeatureSlider_35", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_35", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_35"] = val
    Features["FeatureSlider_35"](val)
end, 50)

-- Dropdown 35
Config.Dropdown["FeatureDropdown_35"] = "Medium"
Features["FeatureDropdown_35"] = function(option)
    log("FeatureDropdown_35", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_35", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_35"] = option
    Features["FeatureDropdown_35"](option)
end, "Medium")

-- Toggle 36
Config.Toggles["FeatureToggle_36"] = false
Features["FeatureToggle_36"] = function(state)
    log("FeatureToggle_36", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_36", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_36"] = state
    Features["FeatureToggle_36"](state)
end, false)

-- Slider 36
Config.Sliders["FeatureSlider_36"] = 50
Features["FeatureSlider_36"] = function(value)
    log("FeatureSlider_36", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_36", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_36"] = val
    Features["FeatureSlider_36"](val)
end, 50)

-- Dropdown 36
Config.Dropdown["FeatureDropdown_36"] = "Medium"
Features["FeatureDropdown_36"] = function(option)
    log("FeatureDropdown_36", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_36", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_36"] = option
    Features["FeatureDropdown_36"](option)
end, "Medium")

-- Toggle 37
Config.Toggles["FeatureToggle_37"] = false
Features["FeatureToggle_37"] = function(state)
    log("FeatureToggle_37", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_37", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_37"] = state
    Features["FeatureToggle_37"](state)
end, false)

-- Slider 37
Config.Sliders["FeatureSlider_37"] = 50
Features["FeatureSlider_37"] = function(value)
    log("FeatureSlider_37", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_37", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_37"] = val
    Features["FeatureSlider_37"](val)
end, 50)

-- Dropdown 37
Config.Dropdown["FeatureDropdown_37"] = "Medium"
Features["FeatureDropdown_37"] = function(option)
    log("FeatureDropdown_37", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_37", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_37"] = option
    Features["FeatureDropdown_37"](option)
end, "Medium")

-- Toggle 38
Config.Toggles["FeatureToggle_38"] = false
Features["FeatureToggle_38"] = function(state)
    log("FeatureToggle_38", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_38", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_38"] = state
    Features["FeatureToggle_38"](state)
end, false)

-- Slider 38
Config.Sliders["FeatureSlider_38"] = 50
Features["FeatureSlider_38"] = function(value)
    log("FeatureSlider_38", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_38", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_38"] = val
    Features["FeatureSlider_38"](val)
end, 50)

-- Dropdown 38
Config.Dropdown["FeatureDropdown_38"] = "Medium"
Features["FeatureDropdown_38"] = function(option)
    log("FeatureDropdown_38", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_38", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_38"] = option
    Features["FeatureDropdown_38"](option)
end, "Medium")

-- Toggle 39
Config.Toggles["FeatureToggle_39"] = false
Features["FeatureToggle_39"] = function(state)
    log("FeatureToggle_39", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_39", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_39"] = state
    Features["FeatureToggle_39"](state)
end, false)

-- Slider 39
Config.Sliders["FeatureSlider_39"] = 50
Features["FeatureSlider_39"] = function(value)
    log("FeatureSlider_39", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_39", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_39"] = val
    Features["FeatureSlider_39"](val)
end, 50)

-- Dropdown 39
Config.Dropdown["FeatureDropdown_39"] = "Medium"
Features["FeatureDropdown_39"] = function(option)
    log("FeatureDropdown_39", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_39", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_39"] = option
    Features["FeatureDropdown_39"](option)
end, "Medium")

-- Toggle 40
Config.Toggles["FeatureToggle_40"] = false
Features["FeatureToggle_40"] = function(state)
    log("FeatureToggle_40", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_40", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_40"] = state
    Features["FeatureToggle_40"](state)
end, false)

-- Slider 40
Config.Sliders["FeatureSlider_40"] = 50
Features["FeatureSlider_40"] = function(value)
    log("FeatureSlider_40", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_40", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_40"] = val
    Features["FeatureSlider_40"](val)
end, 50)

-- Dropdown 40
Config.Dropdown["FeatureDropdown_40"] = "Medium"
Features["FeatureDropdown_40"] = function(option)
    log("FeatureDropdown_40", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_40", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_40"] = option
    Features["FeatureDropdown_40"](option)
end, "Medium")

-- Toggle 41
Config.Toggles["FeatureToggle_41"] = false
Features["FeatureToggle_41"] = function(state)
    log("FeatureToggle_41", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_41", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_41"] = state
    Features["FeatureToggle_41"](state)
end, false)

-- Slider 41
Config.Sliders["FeatureSlider_41"] = 50
Features["FeatureSlider_41"] = function(value)
    log("FeatureSlider_41", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_41", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_41"] = val
    Features["FeatureSlider_41"](val)
end, 50)

-- Dropdown 41
Config.Dropdown["FeatureDropdown_41"] = "Medium"
Features["FeatureDropdown_41"] = function(option)
    log("FeatureDropdown_41", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_41", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_41"] = option
    Features["FeatureDropdown_41"](option)
end, "Medium")

-- Toggle 42
Config.Toggles["FeatureToggle_42"] = false
Features["FeatureToggle_42"] = function(state)
    log("FeatureToggle_42", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_42", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_42"] = state
    Features["FeatureToggle_42"](state)
end, false)

-- Slider 42
Config.Sliders["FeatureSlider_42"] = 50
Features["FeatureSlider_42"] = function(value)
    log("FeatureSlider_42", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_42", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_42"] = val
    Features["FeatureSlider_42"](val)
end, 50)

-- Dropdown 42
Config.Dropdown["FeatureDropdown_42"] = "Medium"
Features["FeatureDropdown_42"] = function(option)
    log("FeatureDropdown_42", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_42", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_42"] = option
    Features["FeatureDropdown_42"](option)
end, "Medium")

-- Toggle 43
Config.Toggles["FeatureToggle_43"] = false
Features["FeatureToggle_43"] = function(state)
    log("FeatureToggle_43", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_43", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_43"] = state
    Features["FeatureToggle_43"](state)
end, false)

-- Slider 43
Config.Sliders["FeatureSlider_43"] = 50
Features["FeatureSlider_43"] = function(value)
    log("FeatureSlider_43", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_43", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_43"] = val
    Features["FeatureSlider_43"](val)
end, 50)

-- Dropdown 43
Config.Dropdown["FeatureDropdown_43"] = "Medium"
Features["FeatureDropdown_43"] = function(option)
    log("FeatureDropdown_43", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_43", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_43"] = option
    Features["FeatureDropdown_43"](option)
end, "Medium")

-- Toggle 44
Config.Toggles["FeatureToggle_44"] = false
Features["FeatureToggle_44"] = function(state)
    log("FeatureToggle_44", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_44", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_44"] = state
    Features["FeatureToggle_44"](state)
end, false)

-- Slider 44
Config.Sliders["FeatureSlider_44"] = 50
Features["FeatureSlider_44"] = function(value)
    log("FeatureSlider_44", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_44", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_44"] = val
    Features["FeatureSlider_44"](val)
end, 50)

-- Dropdown 44
Config.Dropdown["FeatureDropdown_44"] = "Medium"
Features["FeatureDropdown_44"] = function(option)
    log("FeatureDropdown_44", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_44", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_44"] = option
    Features["FeatureDropdown_44"](option)
end, "Medium")

-- Toggle 45
Config.Toggles["FeatureToggle_45"] = false
Features["FeatureToggle_45"] = function(state)
    log("FeatureToggle_45", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_45", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_45"] = state
    Features["FeatureToggle_45"](state)
end, false)

-- Slider 45
Config.Sliders["FeatureSlider_45"] = 50
Features["FeatureSlider_45"] = function(value)
    log("FeatureSlider_45", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_45", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_45"] = val
    Features["FeatureSlider_45"](val)
end, 50)

-- Dropdown 45
Config.Dropdown["FeatureDropdown_45"] = "Medium"
Features["FeatureDropdown_45"] = function(option)
    log("FeatureDropdown_45", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_45", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_45"] = option
    Features["FeatureDropdown_45"](option)
end, "Medium")

-- Toggle 46
Config.Toggles["FeatureToggle_46"] = false
Features["FeatureToggle_46"] = function(state)
    log("FeatureToggle_46", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_46", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_46"] = state
    Features["FeatureToggle_46"](state)
end, false)

-- Slider 46
Config.Sliders["FeatureSlider_46"] = 50
Features["FeatureSlider_46"] = function(value)
    log("FeatureSlider_46", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_46", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_46"] = val
    Features["FeatureSlider_46"](val)
end, 50)

-- Dropdown 46
Config.Dropdown["FeatureDropdown_46"] = "Medium"
Features["FeatureDropdown_46"] = function(option)
    log("FeatureDropdown_46", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_46", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_46"] = option
    Features["FeatureDropdown_46"](option)
end, "Medium")

-- Toggle 47
Config.Toggles["FeatureToggle_47"] = false
Features["FeatureToggle_47"] = function(state)
    log("FeatureToggle_47", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_47", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_47"] = state
    Features["FeatureToggle_47"](state)
end, false)

-- Slider 47
Config.Sliders["FeatureSlider_47"] = 50
Features["FeatureSlider_47"] = function(value)
    log("FeatureSlider_47", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_47", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_47"] = val
    Features["FeatureSlider_47"](val)
end, 50)

-- Dropdown 47
Config.Dropdown["FeatureDropdown_47"] = "Medium"
Features["FeatureDropdown_47"] = function(option)
    log("FeatureDropdown_47", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_47", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_47"] = option
    Features["FeatureDropdown_47"](option)
end, "Medium")

-- Toggle 48
Config.Toggles["FeatureToggle_48"] = false
Features["FeatureToggle_48"] = function(state)
    log("FeatureToggle_48", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_48", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_48"] = state
    Features["FeatureToggle_48"](state)
end, false)

-- Slider 48
Config.Sliders["FeatureSlider_48"] = 50
Features["FeatureSlider_48"] = function(value)
    log("FeatureSlider_48", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_48", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_48"] = val
    Features["FeatureSlider_48"](val)
end, 50)

-- Dropdown 48
Config.Dropdown["FeatureDropdown_48"] = "Medium"
Features["FeatureDropdown_48"] = function(option)
    log("FeatureDropdown_48", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_48", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_48"] = option
    Features["FeatureDropdown_48"](option)
end, "Medium")

-- Toggle 49
Config.Toggles["FeatureToggle_49"] = false
Features["FeatureToggle_49"] = function(state)
    log("FeatureToggle_49", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_49", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_49"] = state
    Features["FeatureToggle_49"](state)
end, false)

-- Slider 49
Config.Sliders["FeatureSlider_49"] = 50
Features["FeatureSlider_49"] = function(value)
    log("FeatureSlider_49", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_49", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_49"] = val
    Features["FeatureSlider_49"](val)
end, 50)

-- Dropdown 49
Config.Dropdown["FeatureDropdown_49"] = "Medium"
Features["FeatureDropdown_49"] = function(option)
    log("FeatureDropdown_49", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_49", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_49"] = option
    Features["FeatureDropdown_49"](option)
end, "Medium")

-- Toggle 50
Config.Toggles["FeatureToggle_50"] = false
Features["FeatureToggle_50"] = function(state)
    log("FeatureToggle_50", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_50", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_50"] = state
    Features["FeatureToggle_50"](state)
end, false)

-- Slider 50
Config.Sliders["FeatureSlider_50"] = 50
Features["FeatureSlider_50"] = function(value)
    log("FeatureSlider_50", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_50", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_50"] = val
    Features["FeatureSlider_50"](val)
end, 50)

-- Dropdown 50
Config.Dropdown["FeatureDropdown_50"] = "Medium"
Features["FeatureDropdown_50"] = function(option)
    log("FeatureDropdown_50", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_50", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_50"] = option
    Features["FeatureDropdown_50"](option)
end, "Medium")

-- Toggle 51
Config.Toggles["FeatureToggle_51"] = false
Features["FeatureToggle_51"] = function(state)
    log("FeatureToggle_51", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_51", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_51"] = state
    Features["FeatureToggle_51"](state)
end, false)

-- Slider 51
Config.Sliders["FeatureSlider_51"] = 50
Features["FeatureSlider_51"] = function(value)
    log("FeatureSlider_51", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_51", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_51"] = val
    Features["FeatureSlider_51"](val)
end, 50)

-- Dropdown 51
Config.Dropdown["FeatureDropdown_51"] = "Medium"
Features["FeatureDropdown_51"] = function(option)
    log("FeatureDropdown_51", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_51", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_51"] = option
    Features["FeatureDropdown_51"](option)
end, "Medium")

-- Toggle 52
Config.Toggles["FeatureToggle_52"] = false
Features["FeatureToggle_52"] = function(state)
    log("FeatureToggle_52", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_52", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_52"] = state
    Features["FeatureToggle_52"](state)
end, false)

-- Slider 52
Config.Sliders["FeatureSlider_52"] = 50
Features["FeatureSlider_52"] = function(value)
    log("FeatureSlider_52", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_52", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_52"] = val
    Features["FeatureSlider_52"](val)
end, 50)

-- Dropdown 52
Config.Dropdown["FeatureDropdown_52"] = "Medium"
Features["FeatureDropdown_52"] = function(option)
    log("FeatureDropdown_52", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_52", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_52"] = option
    Features["FeatureDropdown_52"](option)
end, "Medium")

-- Toggle 53
Config.Toggles["FeatureToggle_53"] = false
Features["FeatureToggle_53"] = function(state)
    log("FeatureToggle_53", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_53", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_53"] = state
    Features["FeatureToggle_53"](state)
end, false)

-- Slider 53
Config.Sliders["FeatureSlider_53"] = 50
Features["FeatureSlider_53"] = function(value)
    log("FeatureSlider_53", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_53", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_53"] = val
    Features["FeatureSlider_53"](val)
end, 50)

-- Dropdown 53
Config.Dropdown["FeatureDropdown_53"] = "Medium"
Features["FeatureDropdown_53"] = function(option)
    log("FeatureDropdown_53", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_53", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_53"] = option
    Features["FeatureDropdown_53"](option)
end, "Medium")

-- Toggle 54
Config.Toggles["FeatureToggle_54"] = false
Features["FeatureToggle_54"] = function(state)
    log("FeatureToggle_54", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_54", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_54"] = state
    Features["FeatureToggle_54"](state)
end, false)

-- Slider 54
Config.Sliders["FeatureSlider_54"] = 50
Features["FeatureSlider_54"] = function(value)
    log("FeatureSlider_54", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_54", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_54"] = val
    Features["FeatureSlider_54"](val)
end, 50)

-- Dropdown 54
Config.Dropdown["FeatureDropdown_54"] = "Medium"
Features["FeatureDropdown_54"] = function(option)
    log("FeatureDropdown_54", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_54", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_54"] = option
    Features["FeatureDropdown_54"](option)
end, "Medium")

-- Toggle 55
Config.Toggles["FeatureToggle_55"] = false
Features["FeatureToggle_55"] = function(state)
    log("FeatureToggle_55", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_55", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_55"] = state
    Features["FeatureToggle_55"](state)
end, false)

-- Slider 55
Config.Sliders["FeatureSlider_55"] = 50
Features["FeatureSlider_55"] = function(value)
    log("FeatureSlider_55", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_55", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_55"] = val
    Features["FeatureSlider_55"](val)
end, 50)

-- Dropdown 55
Config.Dropdown["FeatureDropdown_55"] = "Medium"
Features["FeatureDropdown_55"] = function(option)
    log("FeatureDropdown_55", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_55", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_55"] = option
    Features["FeatureDropdown_55"](option)
end, "Medium")

-- Toggle 56
Config.Toggles["FeatureToggle_56"] = false
Features["FeatureToggle_56"] = function(state)
    log("FeatureToggle_56", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_56", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_56"] = state
    Features["FeatureToggle_56"](state)
end, false)

-- Slider 56
Config.Sliders["FeatureSlider_56"] = 50
Features["FeatureSlider_56"] = function(value)
    log("FeatureSlider_56", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_56", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_56"] = val
    Features["FeatureSlider_56"](val)
end, 50)

-- Dropdown 56
Config.Dropdown["FeatureDropdown_56"] = "Medium"
Features["FeatureDropdown_56"] = function(option)
    log("FeatureDropdown_56", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_56", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_56"] = option
    Features["FeatureDropdown_56"](option)
end, "Medium")

-- Toggle 57
Config.Toggles["FeatureToggle_57"] = false
Features["FeatureToggle_57"] = function(state)
    log("FeatureToggle_57", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_57", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_57"] = state
    Features["FeatureToggle_57"](state)
end, false)

-- Slider 57
Config.Sliders["FeatureSlider_57"] = 50
Features["FeatureSlider_57"] = function(value)
    log("FeatureSlider_57", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_57", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_57"] = val
    Features["FeatureSlider_57"](val)
end, 50)

-- Dropdown 57
Config.Dropdown["FeatureDropdown_57"] = "Medium"
Features["FeatureDropdown_57"] = function(option)
    log("FeatureDropdown_57", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_57", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_57"] = option
    Features["FeatureDropdown_57"](option)
end, "Medium")

-- Toggle 58
Config.Toggles["FeatureToggle_58"] = false
Features["FeatureToggle_58"] = function(state)
    log("FeatureToggle_58", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_58", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_58"] = state
    Features["FeatureToggle_58"](state)
end, false)

-- Slider 58
Config.Sliders["FeatureSlider_58"] = 50
Features["FeatureSlider_58"] = function(value)
    log("FeatureSlider_58", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_58", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_58"] = val
    Features["FeatureSlider_58"](val)
end, 50)

-- Dropdown 58
Config.Dropdown["FeatureDropdown_58"] = "Medium"
Features["FeatureDropdown_58"] = function(option)
    log("FeatureDropdown_58", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_58", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_58"] = option
    Features["FeatureDropdown_58"](option)
end, "Medium")

-- Toggle 59
Config.Toggles["FeatureToggle_59"] = false
Features["FeatureToggle_59"] = function(state)
    log("FeatureToggle_59", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_59", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_59"] = state
    Features["FeatureToggle_59"](state)
end, false)

-- Slider 59
Config.Sliders["FeatureSlider_59"] = 50
Features["FeatureSlider_59"] = function(value)
    log("FeatureSlider_59", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_59", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_59"] = val
    Features["FeatureSlider_59"](val)
end, 50)

-- Dropdown 59
Config.Dropdown["FeatureDropdown_59"] = "Medium"
Features["FeatureDropdown_59"] = function(option)
    log("FeatureDropdown_59", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_59", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_59"] = option
    Features["FeatureDropdown_59"](option)
end, "Medium")

-- Toggle 60
Config.Toggles["FeatureToggle_60"] = false
Features["FeatureToggle_60"] = function(state)
    log("FeatureToggle_60", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_60", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_60"] = state
    Features["FeatureToggle_60"](state)
end, false)

-- Slider 60
Config.Sliders["FeatureSlider_60"] = 50
Features["FeatureSlider_60"] = function(value)
    log("FeatureSlider_60", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_60", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_60"] = val
    Features["FeatureSlider_60"](val)
end, 50)

-- Dropdown 60
Config.Dropdown["FeatureDropdown_60"] = "Medium"
Features["FeatureDropdown_60"] = function(option)
    log("FeatureDropdown_60", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_60", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_60"] = option
    Features["FeatureDropdown_60"](option)
end, "Medium")

-- Toggle 61
Config.Toggles["FeatureToggle_61"] = false
Features["FeatureToggle_61"] = function(state)
    log("FeatureToggle_61", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_61", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_61"] = state
    Features["FeatureToggle_61"](state)
end, false)

-- Slider 61
Config.Sliders["FeatureSlider_61"] = 50
Features["FeatureSlider_61"] = function(value)
    log("FeatureSlider_61", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_61", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_61"] = val
    Features["FeatureSlider_61"](val)
end, 50)

-- Dropdown 61
Config.Dropdown["FeatureDropdown_61"] = "Medium"
Features["FeatureDropdown_61"] = function(option)
    log("FeatureDropdown_61", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_61", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_61"] = option
    Features["FeatureDropdown_61"](option)
end, "Medium")

-- Toggle 62
Config.Toggles["FeatureToggle_62"] = false
Features["FeatureToggle_62"] = function(state)
    log("FeatureToggle_62", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_62", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_62"] = state
    Features["FeatureToggle_62"](state)
end, false)

-- Slider 62
Config.Sliders["FeatureSlider_62"] = 50
Features["FeatureSlider_62"] = function(value)
    log("FeatureSlider_62", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_62", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_62"] = val
    Features["FeatureSlider_62"](val)
end, 50)

-- Dropdown 62
Config.Dropdown["FeatureDropdown_62"] = "Medium"
Features["FeatureDropdown_62"] = function(option)
    log("FeatureDropdown_62", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_62", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_62"] = option
    Features["FeatureDropdown_62"](option)
end, "Medium")

-- Toggle 63
Config.Toggles["FeatureToggle_63"] = false
Features["FeatureToggle_63"] = function(state)
    log("FeatureToggle_63", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_63", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_63"] = state
    Features["FeatureToggle_63"](state)
end, false)

-- Slider 63
Config.Sliders["FeatureSlider_63"] = 50
Features["FeatureSlider_63"] = function(value)
    log("FeatureSlider_63", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_63", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_63"] = val
    Features["FeatureSlider_63"](val)
end, 50)

-- Dropdown 63
Config.Dropdown["FeatureDropdown_63"] = "Medium"
Features["FeatureDropdown_63"] = function(option)
    log("FeatureDropdown_63", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_63", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_63"] = option
    Features["FeatureDropdown_63"](option)
end, "Medium")

-- Toggle 64
Config.Toggles["FeatureToggle_64"] = false
Features["FeatureToggle_64"] = function(state)
    log("FeatureToggle_64", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_64", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_64"] = state
    Features["FeatureToggle_64"](state)
end, false)

-- Slider 64
Config.Sliders["FeatureSlider_64"] = 50
Features["FeatureSlider_64"] = function(value)
    log("FeatureSlider_64", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_64", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_64"] = val
    Features["FeatureSlider_64"](val)
end, 50)

-- Dropdown 64
Config.Dropdown["FeatureDropdown_64"] = "Medium"
Features["FeatureDropdown_64"] = function(option)
    log("FeatureDropdown_64", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_64", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_64"] = option
    Features["FeatureDropdown_64"](option)
end, "Medium")

-- Toggle 65
Config.Toggles["FeatureToggle_65"] = false
Features["FeatureToggle_65"] = function(state)
    log("FeatureToggle_65", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_65", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_65"] = state
    Features["FeatureToggle_65"](state)
end, false)

-- Slider 65
Config.Sliders["FeatureSlider_65"] = 50
Features["FeatureSlider_65"] = function(value)
    log("FeatureSlider_65", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_65", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_65"] = val
    Features["FeatureSlider_65"](val)
end, 50)

-- Dropdown 65
Config.Dropdown["FeatureDropdown_65"] = "Medium"
Features["FeatureDropdown_65"] = function(option)
    log("FeatureDropdown_65", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_65", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_65"] = option
    Features["FeatureDropdown_65"](option)
end, "Medium")

-- Toggle 66
Config.Toggles["FeatureToggle_66"] = false
Features["FeatureToggle_66"] = function(state)
    log("FeatureToggle_66", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_66", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_66"] = state
    Features["FeatureToggle_66"](state)
end, false)

-- Slider 66
Config.Sliders["FeatureSlider_66"] = 50
Features["FeatureSlider_66"] = function(value)
    log("FeatureSlider_66", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_66", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_66"] = val
    Features["FeatureSlider_66"](val)
end, 50)

-- Dropdown 66
Config.Dropdown["FeatureDropdown_66"] = "Medium"
Features["FeatureDropdown_66"] = function(option)
    log("FeatureDropdown_66", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_66", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_66"] = option
    Features["FeatureDropdown_66"](option)
end, "Medium")

-- Toggle 67
Config.Toggles["FeatureToggle_67"] = false
Features["FeatureToggle_67"] = function(state)
    log("FeatureToggle_67", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_67", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_67"] = state
    Features["FeatureToggle_67"](state)
end, false)

-- Slider 67
Config.Sliders["FeatureSlider_67"] = 50
Features["FeatureSlider_67"] = function(value)
    log("FeatureSlider_67", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_67", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_67"] = val
    Features["FeatureSlider_67"](val)
end, 50)

-- Dropdown 67
Config.Dropdown["FeatureDropdown_67"] = "Medium"
Features["FeatureDropdown_67"] = function(option)
    log("FeatureDropdown_67", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_67", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_67"] = option
    Features["FeatureDropdown_67"](option)
end, "Medium")

-- Toggle 68
Config.Toggles["FeatureToggle_68"] = false
Features["FeatureToggle_68"] = function(state)
    log("FeatureToggle_68", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_68", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_68"] = state
    Features["FeatureToggle_68"](state)
end, false)

-- Slider 68
Config.Sliders["FeatureSlider_68"] = 50
Features["FeatureSlider_68"] = function(value)
    log("FeatureSlider_68", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_68", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_68"] = val
    Features["FeatureSlider_68"](val)
end, 50)

-- Dropdown 68
Config.Dropdown["FeatureDropdown_68"] = "Medium"
Features["FeatureDropdown_68"] = function(option)
    log("FeatureDropdown_68", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_68", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_68"] = option
    Features["FeatureDropdown_68"](option)
end, "Medium")

-- Toggle 69
Config.Toggles["FeatureToggle_69"] = false
Features["FeatureToggle_69"] = function(state)
    log("FeatureToggle_69", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_69", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_69"] = state
    Features["FeatureToggle_69"](state)
end, false)

-- Slider 69
Config.Sliders["FeatureSlider_69"] = 50
Features["FeatureSlider_69"] = function(value)
    log("FeatureSlider_69", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_69", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_69"] = val
    Features["FeatureSlider_69"](val)
end, 50)

-- Dropdown 69
Config.Dropdown["FeatureDropdown_69"] = "Medium"
Features["FeatureDropdown_69"] = function(option)
    log("FeatureDropdown_69", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_69", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_69"] = option
    Features["FeatureDropdown_69"](option)
end, "Medium")

-- Toggle 70
Config.Toggles["FeatureToggle_70"] = false
Features["FeatureToggle_70"] = function(state)
    log("FeatureToggle_70", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_70", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_70"] = state
    Features["FeatureToggle_70"](state)
end, false)

-- Slider 70
Config.Sliders["FeatureSlider_70"] = 50
Features["FeatureSlider_70"] = function(value)
    log("FeatureSlider_70", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_70", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_70"] = val
    Features["FeatureSlider_70"](val)
end, 50)

-- Dropdown 70
Config.Dropdown["FeatureDropdown_70"] = "Medium"
Features["FeatureDropdown_70"] = function(option)
    log("FeatureDropdown_70", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_70", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_70"] = option
    Features["FeatureDropdown_70"](option)
end, "Medium")

-- Toggle 71
Config.Toggles["FeatureToggle_71"] = false
Features["FeatureToggle_71"] = function(state)
    log("FeatureToggle_71", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_71", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_71"] = state
    Features["FeatureToggle_71"](state)
end, false)

-- Slider 71
Config.Sliders["FeatureSlider_71"] = 50
Features["FeatureSlider_71"] = function(value)
    log("FeatureSlider_71", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_71", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_71"] = val
    Features["FeatureSlider_71"](val)
end, 50)

-- Dropdown 71
Config.Dropdown["FeatureDropdown_71"] = "Medium"
Features["FeatureDropdown_71"] = function(option)
    log("FeatureDropdown_71", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_71", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_71"] = option
    Features["FeatureDropdown_71"](option)
end, "Medium")

-- Toggle 72
Config.Toggles["FeatureToggle_72"] = false
Features["FeatureToggle_72"] = function(state)
    log("FeatureToggle_72", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_72", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_72"] = state
    Features["FeatureToggle_72"](state)
end, false)

-- Slider 72
Config.Sliders["FeatureSlider_72"] = 50
Features["FeatureSlider_72"] = function(value)
    log("FeatureSlider_72", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_72", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_72"] = val
    Features["FeatureSlider_72"](val)
end, 50)

-- Dropdown 72
Config.Dropdown["FeatureDropdown_72"] = "Medium"
Features["FeatureDropdown_72"] = function(option)
    log("FeatureDropdown_72", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_72", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_72"] = option
    Features["FeatureDropdown_72"](option)
end, "Medium")

-- Toggle 73
Config.Toggles["FeatureToggle_73"] = false
Features["FeatureToggle_73"] = function(state)
    log("FeatureToggle_73", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_73", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_73"] = state
    Features["FeatureToggle_73"](state)
end, false)

-- Slider 73
Config.Sliders["FeatureSlider_73"] = 50
Features["FeatureSlider_73"] = function(value)
    log("FeatureSlider_73", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_73", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_73"] = val
    Features["FeatureSlider_73"](val)
end, 50)

-- Dropdown 73
Config.Dropdown["FeatureDropdown_73"] = "Medium"
Features["FeatureDropdown_73"] = function(option)
    log("FeatureDropdown_73", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_73", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_73"] = option
    Features["FeatureDropdown_73"](option)
end, "Medium")

-- Toggle 74
Config.Toggles["FeatureToggle_74"] = false
Features["FeatureToggle_74"] = function(state)
    log("FeatureToggle_74", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_74", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_74"] = state
    Features["FeatureToggle_74"](state)
end, false)

-- Slider 74
Config.Sliders["FeatureSlider_74"] = 50
Features["FeatureSlider_74"] = function(value)
    log("FeatureSlider_74", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_74", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_74"] = val
    Features["FeatureSlider_74"](val)
end, 50)

-- Dropdown 74
Config.Dropdown["FeatureDropdown_74"] = "Medium"
Features["FeatureDropdown_74"] = function(option)
    log("FeatureDropdown_74", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_74", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_74"] = option
    Features["FeatureDropdown_74"](option)
end, "Medium")

-- Toggle 75
Config.Toggles["FeatureToggle_75"] = false
Features["FeatureToggle_75"] = function(state)
    log("FeatureToggle_75", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_75", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_75"] = state
    Features["FeatureToggle_75"](state)
end, false)

-- Slider 75
Config.Sliders["FeatureSlider_75"] = 50
Features["FeatureSlider_75"] = function(value)
    log("FeatureSlider_75", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_75", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_75"] = val
    Features["FeatureSlider_75"](val)
end, 50)

-- Dropdown 75
Config.Dropdown["FeatureDropdown_75"] = "Medium"
Features["FeatureDropdown_75"] = function(option)
    log("FeatureDropdown_75", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_75", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_75"] = option
    Features["FeatureDropdown_75"](option)
end, "Medium")

-- Toggle 76
Config.Toggles["FeatureToggle_76"] = false
Features["FeatureToggle_76"] = function(state)
    log("FeatureToggle_76", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_76", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_76"] = state
    Features["FeatureToggle_76"](state)
end, false)

-- Slider 76
Config.Sliders["FeatureSlider_76"] = 50
Features["FeatureSlider_76"] = function(value)
    log("FeatureSlider_76", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_76", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_76"] = val
    Features["FeatureSlider_76"](val)
end, 50)

-- Dropdown 76
Config.Dropdown["FeatureDropdown_76"] = "Medium"
Features["FeatureDropdown_76"] = function(option)
    log("FeatureDropdown_76", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_76", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_76"] = option
    Features["FeatureDropdown_76"](option)
end, "Medium")

-- Toggle 77
Config.Toggles["FeatureToggle_77"] = false
Features["FeatureToggle_77"] = function(state)
    log("FeatureToggle_77", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_77", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_77"] = state
    Features["FeatureToggle_77"](state)
end, false)

-- Slider 77
Config.Sliders["FeatureSlider_77"] = 50
Features["FeatureSlider_77"] = function(value)
    log("FeatureSlider_77", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_77", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_77"] = val
    Features["FeatureSlider_77"](val)
end, 50)

-- Dropdown 77
Config.Dropdown["FeatureDropdown_77"] = "Medium"
Features["FeatureDropdown_77"] = function(option)
    log("FeatureDropdown_77", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_77", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_77"] = option
    Features["FeatureDropdown_77"](option)
end, "Medium")

-- Toggle 78
Config.Toggles["FeatureToggle_78"] = false
Features["FeatureToggle_78"] = function(state)
    log("FeatureToggle_78", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_78", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_78"] = state
    Features["FeatureToggle_78"](state)
end, false)

-- Slider 78
Config.Sliders["FeatureSlider_78"] = 50
Features["FeatureSlider_78"] = function(value)
    log("FeatureSlider_78", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_78", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_78"] = val
    Features["FeatureSlider_78"](val)
end, 50)

-- Dropdown 78
Config.Dropdown["FeatureDropdown_78"] = "Medium"
Features["FeatureDropdown_78"] = function(option)
    log("FeatureDropdown_78", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_78", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_78"] = option
    Features["FeatureDropdown_78"](option)
end, "Medium")

-- Toggle 79
Config.Toggles["FeatureToggle_79"] = false
Features["FeatureToggle_79"] = function(state)
    log("FeatureToggle_79", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_79", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_79"] = state
    Features["FeatureToggle_79"](state)
end, false)

-- Slider 79
Config.Sliders["FeatureSlider_79"] = 50
Features["FeatureSlider_79"] = function(value)
    log("FeatureSlider_79", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_79", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_79"] = val
    Features["FeatureSlider_79"](val)
end, 50)

-- Dropdown 79
Config.Dropdown["FeatureDropdown_79"] = "Medium"
Features["FeatureDropdown_79"] = function(option)
    log("FeatureDropdown_79", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_79", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_79"] = option
    Features["FeatureDropdown_79"](option)
end, "Medium")

-- Toggle 80
Config.Toggles["FeatureToggle_80"] = false
Features["FeatureToggle_80"] = function(state)
    log("FeatureToggle_80", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_80", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_80"] = state
    Features["FeatureToggle_80"](state)
end, false)

-- Slider 80
Config.Sliders["FeatureSlider_80"] = 50
Features["FeatureSlider_80"] = function(value)
    log("FeatureSlider_80", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_80", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_80"] = val
    Features["FeatureSlider_80"](val)
end, 50)

-- Dropdown 80
Config.Dropdown["FeatureDropdown_80"] = "Medium"
Features["FeatureDropdown_80"] = function(option)
    log("FeatureDropdown_80", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_80", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_80"] = option
    Features["FeatureDropdown_80"](option)
end, "Medium")

-- Toggle 81
Config.Toggles["FeatureToggle_81"] = false
Features["FeatureToggle_81"] = function(state)
    log("FeatureToggle_81", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_81", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_81"] = state
    Features["FeatureToggle_81"](state)
end, false)

-- Slider 81
Config.Sliders["FeatureSlider_81"] = 50
Features["FeatureSlider_81"] = function(value)
    log("FeatureSlider_81", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_81", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_81"] = val
    Features["FeatureSlider_81"](val)
end, 50)

-- Dropdown 81
Config.Dropdown["FeatureDropdown_81"] = "Medium"
Features["FeatureDropdown_81"] = function(option)
    log("FeatureDropdown_81", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_81", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_81"] = option
    Features["FeatureDropdown_81"](option)
end, "Medium")

-- Toggle 82
Config.Toggles["FeatureToggle_82"] = false
Features["FeatureToggle_82"] = function(state)
    log("FeatureToggle_82", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_82", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_82"] = state
    Features["FeatureToggle_82"](state)
end, false)

-- Slider 82
Config.Sliders["FeatureSlider_82"] = 50
Features["FeatureSlider_82"] = function(value)
    log("FeatureSlider_82", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_82", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_82"] = val
    Features["FeatureSlider_82"](val)
end, 50)

-- Dropdown 82
Config.Dropdown["FeatureDropdown_82"] = "Medium"
Features["FeatureDropdown_82"] = function(option)
    log("FeatureDropdown_82", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_82", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_82"] = option
    Features["FeatureDropdown_82"](option)
end, "Medium")

-- Toggle 83
Config.Toggles["FeatureToggle_83"] = false
Features["FeatureToggle_83"] = function(state)
    log("FeatureToggle_83", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_83", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_83"] = state
    Features["FeatureToggle_83"](state)
end, false)

-- Slider 83
Config.Sliders["FeatureSlider_83"] = 50
Features["FeatureSlider_83"] = function(value)
    log("FeatureSlider_83", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_83", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_83"] = val
    Features["FeatureSlider_83"](val)
end, 50)

-- Dropdown 83
Config.Dropdown["FeatureDropdown_83"] = "Medium"
Features["FeatureDropdown_83"] = function(option)
    log("FeatureDropdown_83", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_83", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_83"] = option
    Features["FeatureDropdown_83"](option)
end, "Medium")

-- Toggle 84
Config.Toggles["FeatureToggle_84"] = false
Features["FeatureToggle_84"] = function(state)
    log("FeatureToggle_84", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_84", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_84"] = state
    Features["FeatureToggle_84"](state)
end, false)

-- Slider 84
Config.Sliders["FeatureSlider_84"] = 50
Features["FeatureSlider_84"] = function(value)
    log("FeatureSlider_84", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_84", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_84"] = val
    Features["FeatureSlider_84"](val)
end, 50)

-- Dropdown 84
Config.Dropdown["FeatureDropdown_84"] = "Medium"
Features["FeatureDropdown_84"] = function(option)
    log("FeatureDropdown_84", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_84", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_84"] = option
    Features["FeatureDropdown_84"](option)
end, "Medium")

-- Toggle 85
Config.Toggles["FeatureToggle_85"] = false
Features["FeatureToggle_85"] = function(state)
    log("FeatureToggle_85", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_85", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_85"] = state
    Features["FeatureToggle_85"](state)
end, false)

-- Slider 85
Config.Sliders["FeatureSlider_85"] = 50
Features["FeatureSlider_85"] = function(value)
    log("FeatureSlider_85", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_85", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_85"] = val
    Features["FeatureSlider_85"](val)
end, 50)

-- Dropdown 85
Config.Dropdown["FeatureDropdown_85"] = "Medium"
Features["FeatureDropdown_85"] = function(option)
    log("FeatureDropdown_85", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_85", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_85"] = option
    Features["FeatureDropdown_85"](option)
end, "Medium")

-- Toggle 86
Config.Toggles["FeatureToggle_86"] = false
Features["FeatureToggle_86"] = function(state)
    log("FeatureToggle_86", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_86", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_86"] = state
    Features["FeatureToggle_86"](state)
end, false)

-- Slider 86
Config.Sliders["FeatureSlider_86"] = 50
Features["FeatureSlider_86"] = function(value)
    log("FeatureSlider_86", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_86", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_86"] = val
    Features["FeatureSlider_86"](val)
end, 50)

-- Dropdown 86
Config.Dropdown["FeatureDropdown_86"] = "Medium"
Features["FeatureDropdown_86"] = function(option)
    log("FeatureDropdown_86", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_86", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_86"] = option
    Features["FeatureDropdown_86"](option)
end, "Medium")

-- Toggle 87
Config.Toggles["FeatureToggle_87"] = false
Features["FeatureToggle_87"] = function(state)
    log("FeatureToggle_87", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_87", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_87"] = state
    Features["FeatureToggle_87"](state)
end, false)

-- Slider 87
Config.Sliders["FeatureSlider_87"] = 50
Features["FeatureSlider_87"] = function(value)
    log("FeatureSlider_87", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_87", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_87"] = val
    Features["FeatureSlider_87"](val)
end, 50)

-- Dropdown 87
Config.Dropdown["FeatureDropdown_87"] = "Medium"
Features["FeatureDropdown_87"] = function(option)
    log("FeatureDropdown_87", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_87", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_87"] = option
    Features["FeatureDropdown_87"](option)
end, "Medium")

-- Toggle 88
Config.Toggles["FeatureToggle_88"] = false
Features["FeatureToggle_88"] = function(state)
    log("FeatureToggle_88", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_88", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_88"] = state
    Features["FeatureToggle_88"](state)
end, false)

-- Slider 88
Config.Sliders["FeatureSlider_88"] = 50
Features["FeatureSlider_88"] = function(value)
    log("FeatureSlider_88", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_88", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_88"] = val
    Features["FeatureSlider_88"](val)
end, 50)

-- Dropdown 88
Config.Dropdown["FeatureDropdown_88"] = "Medium"
Features["FeatureDropdown_88"] = function(option)
    log("FeatureDropdown_88", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_88", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_88"] = option
    Features["FeatureDropdown_88"](option)
end, "Medium")

-- Toggle 89
Config.Toggles["FeatureToggle_89"] = false
Features["FeatureToggle_89"] = function(state)
    log("FeatureToggle_89", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_89", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_89"] = state
    Features["FeatureToggle_89"](state)
end, false)

-- Slider 89
Config.Sliders["FeatureSlider_89"] = 50
Features["FeatureSlider_89"] = function(value)
    log("FeatureSlider_89", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_89", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_89"] = val
    Features["FeatureSlider_89"](val)
end, 50)

-- Dropdown 89
Config.Dropdown["FeatureDropdown_89"] = "Medium"
Features["FeatureDropdown_89"] = function(option)
    log("FeatureDropdown_89", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_89", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_89"] = option
    Features["FeatureDropdown_89"](option)
end, "Medium")

-- Toggle 90
Config.Toggles["FeatureToggle_90"] = false
Features["FeatureToggle_90"] = function(state)
    log("FeatureToggle_90", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_90", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_90"] = state
    Features["FeatureToggle_90"](state)
end, false)

-- Slider 90
Config.Sliders["FeatureSlider_90"] = 50
Features["FeatureSlider_90"] = function(value)
    log("FeatureSlider_90", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_90", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_90"] = val
    Features["FeatureSlider_90"](val)
end, 50)

-- Dropdown 90
Config.Dropdown["FeatureDropdown_90"] = "Medium"
Features["FeatureDropdown_90"] = function(option)
    log("FeatureDropdown_90", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_90", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_90"] = option
    Features["FeatureDropdown_90"](option)
end, "Medium")

-- Toggle 91
Config.Toggles["FeatureToggle_91"] = false
Features["FeatureToggle_91"] = function(state)
    log("FeatureToggle_91", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_91", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_91"] = state
    Features["FeatureToggle_91"](state)
end, false)

-- Slider 91
Config.Sliders["FeatureSlider_91"] = 50
Features["FeatureSlider_91"] = function(value)
    log("FeatureSlider_91", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_91", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_91"] = val
    Features["FeatureSlider_91"](val)
end, 50)

-- Dropdown 91
Config.Dropdown["FeatureDropdown_91"] = "Medium"
Features["FeatureDropdown_91"] = function(option)
    log("FeatureDropdown_91", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_91", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_91"] = option
    Features["FeatureDropdown_91"](option)
end, "Medium")

-- Toggle 92
Config.Toggles["FeatureToggle_92"] = false
Features["FeatureToggle_92"] = function(state)
    log("FeatureToggle_92", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_92", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_92"] = state
    Features["FeatureToggle_92"](state)
end, false)

-- Slider 92
Config.Sliders["FeatureSlider_92"] = 50
Features["FeatureSlider_92"] = function(value)
    log("FeatureSlider_92", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_92", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_92"] = val
    Features["FeatureSlider_92"](val)
end, 50)

-- Dropdown 92
Config.Dropdown["FeatureDropdown_92"] = "Medium"
Features["FeatureDropdown_92"] = function(option)
    log("FeatureDropdown_92", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_92", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_92"] = option
    Features["FeatureDropdown_92"](option)
end, "Medium")

-- Toggle 93
Config.Toggles["FeatureToggle_93"] = false
Features["FeatureToggle_93"] = function(state)
    log("FeatureToggle_93", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_93", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_93"] = state
    Features["FeatureToggle_93"](state)
end, false)

-- Slider 93
Config.Sliders["FeatureSlider_93"] = 50
Features["FeatureSlider_93"] = function(value)
    log("FeatureSlider_93", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_93", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_93"] = val
    Features["FeatureSlider_93"](val)
end, 50)

-- Dropdown 93
Config.Dropdown["FeatureDropdown_93"] = "Medium"
Features["FeatureDropdown_93"] = function(option)
    log("FeatureDropdown_93", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_93", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_93"] = option
    Features["FeatureDropdown_93"](option)
end, "Medium")

-- Toggle 94
Config.Toggles["FeatureToggle_94"] = false
Features["FeatureToggle_94"] = function(state)
    log("FeatureToggle_94", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_94", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_94"] = state
    Features["FeatureToggle_94"](state)
end, false)

-- Slider 94
Config.Sliders["FeatureSlider_94"] = 50
Features["FeatureSlider_94"] = function(value)
    log("FeatureSlider_94", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_94", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_94"] = val
    Features["FeatureSlider_94"](val)
end, 50)

-- Dropdown 94
Config.Dropdown["FeatureDropdown_94"] = "Medium"
Features["FeatureDropdown_94"] = function(option)
    log("FeatureDropdown_94", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_94", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_94"] = option
    Features["FeatureDropdown_94"](option)
end, "Medium")

-- Toggle 95
Config.Toggles["FeatureToggle_95"] = false
Features["FeatureToggle_95"] = function(state)
    log("FeatureToggle_95", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_95", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_95"] = state
    Features["FeatureToggle_95"](state)
end, false)

-- Slider 95
Config.Sliders["FeatureSlider_95"] = 50
Features["FeatureSlider_95"] = function(value)
    log("FeatureSlider_95", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_95", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_95"] = val
    Features["FeatureSlider_95"](val)
end, 50)

-- Dropdown 95
Config.Dropdown["FeatureDropdown_95"] = "Medium"
Features["FeatureDropdown_95"] = function(option)
    log("FeatureDropdown_95", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_95", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_95"] = option
    Features["FeatureDropdown_95"](option)
end, "Medium")

-- Toggle 96
Config.Toggles["FeatureToggle_96"] = false
Features["FeatureToggle_96"] = function(state)
    log("FeatureToggle_96", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_96", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_96"] = state
    Features["FeatureToggle_96"](state)
end, false)

-- Slider 96
Config.Sliders["FeatureSlider_96"] = 50
Features["FeatureSlider_96"] = function(value)
    log("FeatureSlider_96", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_96", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_96"] = val
    Features["FeatureSlider_96"](val)
end, 50)

-- Dropdown 96
Config.Dropdown["FeatureDropdown_96"] = "Medium"
Features["FeatureDropdown_96"] = function(option)
    log("FeatureDropdown_96", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_96", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_96"] = option
    Features["FeatureDropdown_96"](option)
end, "Medium")

-- Toggle 97
Config.Toggles["FeatureToggle_97"] = false
Features["FeatureToggle_97"] = function(state)
    log("FeatureToggle_97", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_97", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_97"] = state
    Features["FeatureToggle_97"](state)
end, false)

-- Slider 97
Config.Sliders["FeatureSlider_97"] = 50
Features["FeatureSlider_97"] = function(value)
    log("FeatureSlider_97", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_97", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_97"] = val
    Features["FeatureSlider_97"](val)
end, 50)

-- Dropdown 97
Config.Dropdown["FeatureDropdown_97"] = "Medium"
Features["FeatureDropdown_97"] = function(option)
    log("FeatureDropdown_97", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_97", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_97"] = option
    Features["FeatureDropdown_97"](option)
end, "Medium")

-- Toggle 98
Config.Toggles["FeatureToggle_98"] = false
Features["FeatureToggle_98"] = function(state)
    log("FeatureToggle_98", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_98", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_98"] = state
    Features["FeatureToggle_98"](state)
end, false)

-- Slider 98
Config.Sliders["FeatureSlider_98"] = 50
Features["FeatureSlider_98"] = function(value)
    log("FeatureSlider_98", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_98", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_98"] = val
    Features["FeatureSlider_98"](val)
end, 50)

-- Dropdown 98
Config.Dropdown["FeatureDropdown_98"] = "Medium"
Features["FeatureDropdown_98"] = function(option)
    log("FeatureDropdown_98", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_98", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_98"] = option
    Features["FeatureDropdown_98"](option)
end, "Medium")

-- Toggle 99
Config.Toggles["FeatureToggle_99"] = false
Features["FeatureToggle_99"] = function(state)
    log("FeatureToggle_99", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_99", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_99"] = state
    Features["FeatureToggle_99"](state)
end, false)

-- Slider 99
Config.Sliders["FeatureSlider_99"] = 50
Features["FeatureSlider_99"] = function(value)
    log("FeatureSlider_99", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_99", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_99"] = val
    Features["FeatureSlider_99"](val)
end, 50)

-- Dropdown 99
Config.Dropdown["FeatureDropdown_99"] = "Medium"
Features["FeatureDropdown_99"] = function(option)
    log("FeatureDropdown_99", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_99", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_99"] = option
    Features["FeatureDropdown_99"](option)
end, "Medium")

-- Toggle 100
Config.Toggles["FeatureToggle_100"] = false
Features["FeatureToggle_100"] = function(state)
    log("FeatureToggle_100", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_100", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_100"] = state
    Features["FeatureToggle_100"](state)
end, false)

-- Slider 100
Config.Sliders["FeatureSlider_100"] = 50
Features["FeatureSlider_100"] = function(value)
    log("FeatureSlider_100", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_100", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_100"] = val
    Features["FeatureSlider_100"](val)
end, 50)

-- Dropdown 100
Config.Dropdown["FeatureDropdown_100"] = "Medium"
Features["FeatureDropdown_100"] = function(option)
    log("FeatureDropdown_100", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_100", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_100"] = option
    Features["FeatureDropdown_100"](option)
end, "Medium")

-- Toggle 1
Config.Toggles["FeatureToggle_1"] = false
Features["FeatureToggle_1"] = function(state)
    log("FeatureToggle_1", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_1", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_1"] = state
    Features["FeatureToggle_1"](state)
end, false)

-- Slider 1
Config.Sliders["FeatureSlider_1"] = 50
Features["FeatureSlider_1"] = function(value)
    log("FeatureSlider_1", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_1", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_1"] = val
    Features["FeatureSlider_1"](val)
end, 50)

-- Dropdown 1
Config.Dropdown["FeatureDropdown_1"] = "Medium"
Features["FeatureDropdown_1"] = function(option)
    log("FeatureDropdown_1", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_1", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_1"] = option
    Features["FeatureDropdown_1"](option)
end, "Medium")

-- Toggle 2
Config.Toggles["FeatureToggle_2"] = false
Features["FeatureToggle_2"] = function(state)
    log("FeatureToggle_2", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_2", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_2"] = state
    Features["FeatureToggle_2"](state)
end, false)

-- Slider 2
Config.Sliders["FeatureSlider_2"] = 50
Features["FeatureSlider_2"] = function(value)
    log("FeatureSlider_2", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_2", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_2"] = val
    Features["FeatureSlider_2"](val)
end, 50)

-- Dropdown 2
Config.Dropdown["FeatureDropdown_2"] = "Medium"
Features["FeatureDropdown_2"] = function(option)
    log("FeatureDropdown_2", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_2", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_2"] = option
    Features["FeatureDropdown_2"](option)
end, "Medium")

-- Toggle 3
Config.Toggles["FeatureToggle_3"] = false
Features["FeatureToggle_3"] = function(state)
    log("FeatureToggle_3", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_3", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_3"] = state
    Features["FeatureToggle_3"](state)
end, false)

-- Slider 3
Config.Sliders["FeatureSlider_3"] = 50
Features["FeatureSlider_3"] = function(value)
    log("FeatureSlider_3", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_3", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_3"] = val
    Features["FeatureSlider_3"](val)
end, 50)

-- Dropdown 3
Config.Dropdown["FeatureDropdown_3"] = "Medium"
Features["FeatureDropdown_3"] = function(option)
    log("FeatureDropdown_3", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_3", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_3"] = option
    Features["FeatureDropdown_3"](option)
end, "Medium")

-- Toggle 4
Config.Toggles["FeatureToggle_4"] = false
Features["FeatureToggle_4"] = function(state)
    log("FeatureToggle_4", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_4", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_4"] = state
    Features["FeatureToggle_4"](state)
end, false)

-- Slider 4
Config.Sliders["FeatureSlider_4"] = 50
Features["FeatureSlider_4"] = function(value)
    log("FeatureSlider_4", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_4", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_4"] = val
    Features["FeatureSlider_4"](val)
end, 50)

-- Dropdown 4
Config.Dropdown["FeatureDropdown_4"] = "Medium"
Features["FeatureDropdown_4"] = function(option)
    log("FeatureDropdown_4", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_4", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_4"] = option
    Features["FeatureDropdown_4"](option)
end, "Medium")

-- Toggle 5
Config.Toggles["FeatureToggle_5"] = false
Features["FeatureToggle_5"] = function(state)
    log("FeatureToggle_5", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_5", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_5"] = state
    Features["FeatureToggle_5"](state)
end, false)

-- Slider 5
Config.Sliders["FeatureSlider_5"] = 50
Features["FeatureSlider_5"] = function(value)
    log("FeatureSlider_5", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_5", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_5"] = val
    Features["FeatureSlider_5"](val)
end, 50)

-- Dropdown 5
Config.Dropdown["FeatureDropdown_5"] = "Medium"
Features["FeatureDropdown_5"] = function(option)
    log("FeatureDropdown_5", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_5", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_5"] = option
    Features["FeatureDropdown_5"](option)
end, "Medium")

-- Toggle 6
Config.Toggles["FeatureToggle_6"] = false
Features["FeatureToggle_6"] = function(state)
    log("FeatureToggle_6", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_6", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_6"] = state
    Features["FeatureToggle_6"](state)
end, false)

-- Slider 6
Config.Sliders["FeatureSlider_6"] = 50
Features["FeatureSlider_6"] = function(value)
    log("FeatureSlider_6", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_6", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_6"] = val
    Features["FeatureSlider_6"](val)
end, 50)

-- Dropdown 6
Config.Dropdown["FeatureDropdown_6"] = "Medium"
Features["FeatureDropdown_6"] = function(option)
    log("FeatureDropdown_6", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_6", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_6"] = option
    Features["FeatureDropdown_6"](option)
end, "Medium")

-- Toggle 7
Config.Toggles["FeatureToggle_7"] = false
Features["FeatureToggle_7"] = function(state)
    log("FeatureToggle_7", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_7", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_7"] = state
    Features["FeatureToggle_7"](state)
end, false)

-- Slider 7
Config.Sliders["FeatureSlider_7"] = 50
Features["FeatureSlider_7"] = function(value)
    log("FeatureSlider_7", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_7", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_7"] = val
    Features["FeatureSlider_7"](val)
end, 50)

-- Dropdown 7
Config.Dropdown["FeatureDropdown_7"] = "Medium"
Features["FeatureDropdown_7"] = function(option)
    log("FeatureDropdown_7", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_7", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_7"] = option
    Features["FeatureDropdown_7"](option)
end, "Medium")

-- Toggle 8
Config.Toggles["FeatureToggle_8"] = false
Features["FeatureToggle_8"] = function(state)
    log("FeatureToggle_8", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_8", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_8"] = state
    Features["FeatureToggle_8"](state)
end, false)

-- Slider 8
Config.Sliders["FeatureSlider_8"] = 50
Features["FeatureSlider_8"] = function(value)
    log("FeatureSlider_8", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_8", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_8"] = val
    Features["FeatureSlider_8"](val)
end, 50)

-- Dropdown 8
Config.Dropdown["FeatureDropdown_8"] = "Medium"
Features["FeatureDropdown_8"] = function(option)
    log("FeatureDropdown_8", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_8", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_8"] = option
    Features["FeatureDropdown_8"](option)
end, "Medium")

-- Toggle 9
Config.Toggles["FeatureToggle_9"] = false
Features["FeatureToggle_9"] = function(state)
    log("FeatureToggle_9", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_9", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_9"] = state
    Features["FeatureToggle_9"](state)
end, false)

-- Slider 9
Config.Sliders["FeatureSlider_9"] = 50
Features["FeatureSlider_9"] = function(value)
    log("FeatureSlider_9", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_9", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_9"] = val
    Features["FeatureSlider_9"](val)
end, 50)

-- Dropdown 9
Config.Dropdown["FeatureDropdown_9"] = "Medium"
Features["FeatureDropdown_9"] = function(option)
    log("FeatureDropdown_9", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_9", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_9"] = option
    Features["FeatureDropdown_9"](option)
end, "Medium")

-- Toggle 10
Config.Toggles["FeatureToggle_10"] = false
Features["FeatureToggle_10"] = function(state)
    log("FeatureToggle_10", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_10", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_10"] = state
    Features["FeatureToggle_10"](state)
end, false)

-- Slider 10
Config.Sliders["FeatureSlider_10"] = 50
Features["FeatureSlider_10"] = function(value)
    log("FeatureSlider_10", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_10", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_10"] = val
    Features["FeatureSlider_10"](val)
end, 50)

-- Dropdown 10
Config.Dropdown["FeatureDropdown_10"] = "Medium"
Features["FeatureDropdown_10"] = function(option)
    log("FeatureDropdown_10", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_10", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_10"] = option
    Features["FeatureDropdown_10"](option)
end, "Medium")

-- Toggle 11
Config.Toggles["FeatureToggle_11"] = false
Features["FeatureToggle_11"] = function(state)
    log("FeatureToggle_11", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_11", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_11"] = state
    Features["FeatureToggle_11"](state)
end, false)

-- Slider 11
Config.Sliders["FeatureSlider_11"] = 50
Features["FeatureSlider_11"] = function(value)
    log("FeatureSlider_11", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_11", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_11"] = val
    Features["FeatureSlider_11"](val)
end, 50)

-- Dropdown 11
Config.Dropdown["FeatureDropdown_11"] = "Medium"
Features["FeatureDropdown_11"] = function(option)
    log("FeatureDropdown_11", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_11", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_11"] = option
    Features["FeatureDropdown_11"](option)
end, "Medium")

-- Toggle 12
Config.Toggles["FeatureToggle_12"] = false
Features["FeatureToggle_12"] = function(state)
    log("FeatureToggle_12", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_12", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_12"] = state
    Features["FeatureToggle_12"](state)
end, false)

-- Slider 12
Config.Sliders["FeatureSlider_12"] = 50
Features["FeatureSlider_12"] = function(value)
    log("FeatureSlider_12", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_12", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_12"] = val
    Features["FeatureSlider_12"](val)
end, 50)

-- Dropdown 12
Config.Dropdown["FeatureDropdown_12"] = "Medium"
Features["FeatureDropdown_12"] = function(option)
    log("FeatureDropdown_12", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_12", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_12"] = option
    Features["FeatureDropdown_12"](option)
end, "Medium")

-- Toggle 13
Config.Toggles["FeatureToggle_13"] = false
Features["FeatureToggle_13"] = function(state)
    log("FeatureToggle_13", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_13", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_13"] = state
    Features["FeatureToggle_13"](state)
end, false)

-- Slider 13
Config.Sliders["FeatureSlider_13"] = 50
Features["FeatureSlider_13"] = function(value)
    log("FeatureSlider_13", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_13", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_13"] = val
    Features["FeatureSlider_13"](val)
end, 50)

-- Dropdown 13
Config.Dropdown["FeatureDropdown_13"] = "Medium"
Features["FeatureDropdown_13"] = function(option)
    log("FeatureDropdown_13", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_13", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_13"] = option
    Features["FeatureDropdown_13"](option)
end, "Medium")

-- Toggle 14
Config.Toggles["FeatureToggle_14"] = false
Features["FeatureToggle_14"] = function(state)
    log("FeatureToggle_14", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_14", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_14"] = state
    Features["FeatureToggle_14"](state)
end, false)

-- Slider 14
Config.Sliders["FeatureSlider_14"] = 50
Features["FeatureSlider_14"] = function(value)
    log("FeatureSlider_14", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_14", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_14"] = val
    Features["FeatureSlider_14"](val)
end, 50)

-- Dropdown 14
Config.Dropdown["FeatureDropdown_14"] = "Medium"
Features["FeatureDropdown_14"] = function(option)
    log("FeatureDropdown_14", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_14", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_14"] = option
    Features["FeatureDropdown_14"](option)
end, "Medium")

-- Toggle 15
Config.Toggles["FeatureToggle_15"] = false
Features["FeatureToggle_15"] = function(state)
    log("FeatureToggle_15", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_15", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_15"] = state
    Features["FeatureToggle_15"](state)
end, false)

-- Slider 15
Config.Sliders["FeatureSlider_15"] = 50
Features["FeatureSlider_15"] = function(value)
    log("FeatureSlider_15", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_15", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_15"] = val
    Features["FeatureSlider_15"](val)
end, 50)

-- Dropdown 15
Config.Dropdown["FeatureDropdown_15"] = "Medium"
Features["FeatureDropdown_15"] = function(option)
    log("FeatureDropdown_15", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_15", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_15"] = option
    Features["FeatureDropdown_15"](option)
end, "Medium")

-- Toggle 16
Config.Toggles["FeatureToggle_16"] = false
Features["FeatureToggle_16"] = function(state)
    log("FeatureToggle_16", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_16", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_16"] = state
    Features["FeatureToggle_16"](state)
end, false)

-- Slider 16
Config.Sliders["FeatureSlider_16"] = 50
Features["FeatureSlider_16"] = function(value)
    log("FeatureSlider_16", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_16", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_16"] = val
    Features["FeatureSlider_16"](val)
end, 50)

-- Dropdown 16
Config.Dropdown["FeatureDropdown_16"] = "Medium"
Features["FeatureDropdown_16"] = function(option)
    log("FeatureDropdown_16", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_16", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_16"] = option
    Features["FeatureDropdown_16"](option)
end, "Medium")

-- Toggle 17
Config.Toggles["FeatureToggle_17"] = false
Features["FeatureToggle_17"] = function(state)
    log("FeatureToggle_17", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_17", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_17"] = state
    Features["FeatureToggle_17"](state)
end, false)

-- Slider 17
Config.Sliders["FeatureSlider_17"] = 50
Features["FeatureSlider_17"] = function(value)
    log("FeatureSlider_17", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_17", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_17"] = val
    Features["FeatureSlider_17"](val)
end, 50)

-- Dropdown 17
Config.Dropdown["FeatureDropdown_17"] = "Medium"
Features["FeatureDropdown_17"] = function(option)
    log("FeatureDropdown_17", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_17", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_17"] = option
    Features["FeatureDropdown_17"](option)
end, "Medium")

-- Toggle 18
Config.Toggles["FeatureToggle_18"] = false
Features["FeatureToggle_18"] = function(state)
    log("FeatureToggle_18", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_18", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_18"] = state
    Features["FeatureToggle_18"](state)
end, false)

-- Slider 18
Config.Sliders["FeatureSlider_18"] = 50
Features["FeatureSlider_18"] = function(value)
    log("FeatureSlider_18", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_18", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_18"] = val
    Features["FeatureSlider_18"](val)
end, 50)

-- Dropdown 18
Config.Dropdown["FeatureDropdown_18"] = "Medium"
Features["FeatureDropdown_18"] = function(option)
    log("FeatureDropdown_18", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_18", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_18"] = option
    Features["FeatureDropdown_18"](option)
end, "Medium")

-- Toggle 19
Config.Toggles["FeatureToggle_19"] = false
Features["FeatureToggle_19"] = function(state)
    log("FeatureToggle_19", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_19", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_19"] = state
    Features["FeatureToggle_19"](state)
end, false)

-- Slider 19
Config.Sliders["FeatureSlider_19"] = 50
Features["FeatureSlider_19"] = function(value)
    log("FeatureSlider_19", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_19", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_19"] = val
    Features["FeatureSlider_19"](val)
end, 50)

-- Dropdown 19
Config.Dropdown["FeatureDropdown_19"] = "Medium"
Features["FeatureDropdown_19"] = function(option)
    log("FeatureDropdown_19", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_19", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_19"] = option
    Features["FeatureDropdown_19"](option)
end, "Medium")

-- Toggle 20
Config.Toggles["FeatureToggle_20"] = false
Features["FeatureToggle_20"] = function(state)
    log("FeatureToggle_20", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_20", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_20"] = state
    Features["FeatureToggle_20"](state)
end, false)

-- Slider 20
Config.Sliders["FeatureSlider_20"] = 50
Features["FeatureSlider_20"] = function(value)
    log("FeatureSlider_20", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_20", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_20"] = val
    Features["FeatureSlider_20"](val)
end, 50)

-- Dropdown 20
Config.Dropdown["FeatureDropdown_20"] = "Medium"
Features["FeatureDropdown_20"] = function(option)
    log("FeatureDropdown_20", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_20", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_20"] = option
    Features["FeatureDropdown_20"](option)
end, "Medium")

-- Toggle 21
Config.Toggles["FeatureToggle_21"] = false
Features["FeatureToggle_21"] = function(state)
    log("FeatureToggle_21", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_21", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_21"] = state
    Features["FeatureToggle_21"](state)
end, false)

-- Slider 21
Config.Sliders["FeatureSlider_21"] = 50
Features["FeatureSlider_21"] = function(value)
    log("FeatureSlider_21", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_21", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_21"] = val
    Features["FeatureSlider_21"](val)
end, 50)

-- Dropdown 21
Config.Dropdown["FeatureDropdown_21"] = "Medium"
Features["FeatureDropdown_21"] = function(option)
    log("FeatureDropdown_21", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_21", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_21"] = option
    Features["FeatureDropdown_21"](option)
end, "Medium")

-- Toggle 22
Config.Toggles["FeatureToggle_22"] = false
Features["FeatureToggle_22"] = function(state)
    log("FeatureToggle_22", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_22", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_22"] = state
    Features["FeatureToggle_22"](state)
end, false)

-- Slider 22
Config.Sliders["FeatureSlider_22"] = 50
Features["FeatureSlider_22"] = function(value)
    log("FeatureSlider_22", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_22", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_22"] = val
    Features["FeatureSlider_22"](val)
end, 50)

-- Dropdown 22
Config.Dropdown["FeatureDropdown_22"] = "Medium"
Features["FeatureDropdown_22"] = function(option)
    log("FeatureDropdown_22", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_22", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_22"] = option
    Features["FeatureDropdown_22"](option)
end, "Medium")

-- Toggle 23
Config.Toggles["FeatureToggle_23"] = false
Features["FeatureToggle_23"] = function(state)
    log("FeatureToggle_23", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_23", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_23"] = state
    Features["FeatureToggle_23"](state)
end, false)

-- Slider 23
Config.Sliders["FeatureSlider_23"] = 50
Features["FeatureSlider_23"] = function(value)
    log("FeatureSlider_23", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_23", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_23"] = val
    Features["FeatureSlider_23"](val)
end, 50)

-- Dropdown 23
Config.Dropdown["FeatureDropdown_23"] = "Medium"
Features["FeatureDropdown_23"] = function(option)
    log("FeatureDropdown_23", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_23", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_23"] = option
    Features["FeatureDropdown_23"](option)
end, "Medium")

-- Toggle 24
Config.Toggles["FeatureToggle_24"] = false
Features["FeatureToggle_24"] = function(state)
    log("FeatureToggle_24", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_24", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_24"] = state
    Features["FeatureToggle_24"](state)
end, false)

-- Slider 24
Config.Sliders["FeatureSlider_24"] = 50
Features["FeatureSlider_24"] = function(value)
    log("FeatureSlider_24", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_24", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_24"] = val
    Features["FeatureSlider_24"](val)
end, 50)

-- Dropdown 24
Config.Dropdown["FeatureDropdown_24"] = "Medium"
Features["FeatureDropdown_24"] = function(option)
    log("FeatureDropdown_24", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_24", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_24"] = option
    Features["FeatureDropdown_24"](option)
end, "Medium")

-- Toggle 25
Config.Toggles["FeatureToggle_25"] = false
Features["FeatureToggle_25"] = function(state)
    log("FeatureToggle_25", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_25", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_25"] = state
    Features["FeatureToggle_25"](state)
end, false)

-- Slider 25
Config.Sliders["FeatureSlider_25"] = 50
Features["FeatureSlider_25"] = function(value)
    log("FeatureSlider_25", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_25", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_25"] = val
    Features["FeatureSlider_25"](val)
end, 50)

-- Dropdown 25
Config.Dropdown["FeatureDropdown_25"] = "Medium"
Features["FeatureDropdown_25"] = function(option)
    log("FeatureDropdown_25", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_25", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_25"] = option
    Features["FeatureDropdown_25"](option)
end, "Medium")

-- Toggle 26
Config.Toggles["FeatureToggle_26"] = false
Features["FeatureToggle_26"] = function(state)
    log("FeatureToggle_26", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_26", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_26"] = state
    Features["FeatureToggle_26"](state)
end, false)

-- Slider 26
Config.Sliders["FeatureSlider_26"] = 50
Features["FeatureSlider_26"] = function(value)
    log("FeatureSlider_26", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_26", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_26"] = val
    Features["FeatureSlider_26"](val)
end, 50)

-- Dropdown 26
Config.Dropdown["FeatureDropdown_26"] = "Medium"
Features["FeatureDropdown_26"] = function(option)
    log("FeatureDropdown_26", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_26", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_26"] = option
    Features["FeatureDropdown_26"](option)
end, "Medium")

-- Toggle 27
Config.Toggles["FeatureToggle_27"] = false
Features["FeatureToggle_27"] = function(state)
    log("FeatureToggle_27", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_27", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_27"] = state
    Features["FeatureToggle_27"](state)
end, false)

-- Slider 27
Config.Sliders["FeatureSlider_27"] = 50
Features["FeatureSlider_27"] = function(value)
    log("FeatureSlider_27", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_27", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_27"] = val
    Features["FeatureSlider_27"](val)
end, 50)

-- Dropdown 27
Config.Dropdown["FeatureDropdown_27"] = "Medium"
Features["FeatureDropdown_27"] = function(option)
    log("FeatureDropdown_27", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_27", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_27"] = option
    Features["FeatureDropdown_27"](option)
end, "Medium")

-- Toggle 28
Config.Toggles["FeatureToggle_28"] = false
Features["FeatureToggle_28"] = function(state)
    log("FeatureToggle_28", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_28", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_28"] = state
    Features["FeatureToggle_28"](state)
end, false)

-- Slider 28
Config.Sliders["FeatureSlider_28"] = 50
Features["FeatureSlider_28"] = function(value)
    log("FeatureSlider_28", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_28", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_28"] = val
    Features["FeatureSlider_28"](val)
end, 50)

-- Dropdown 28
Config.Dropdown["FeatureDropdown_28"] = "Medium"
Features["FeatureDropdown_28"] = function(option)
    log("FeatureDropdown_28", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_28", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_28"] = option
    Features["FeatureDropdown_28"](option)
end, "Medium")

-- Toggle 29
Config.Toggles["FeatureToggle_29"] = false
Features["FeatureToggle_29"] = function(state)
    log("FeatureToggle_29", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_29", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_29"] = state
    Features["FeatureToggle_29"](state)
end, false)

-- Slider 29
Config.Sliders["FeatureSlider_29"] = 50
Features["FeatureSlider_29"] = function(value)
    log("FeatureSlider_29", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_29", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_29"] = val
    Features["FeatureSlider_29"](val)
end, 50)

-- Dropdown 29
Config.Dropdown["FeatureDropdown_29"] = "Medium"
Features["FeatureDropdown_29"] = function(option)
    log("FeatureDropdown_29", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_29", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_29"] = option
    Features["FeatureDropdown_29"](option)
end, "Medium")

-- Toggle 30
Config.Toggles["FeatureToggle_30"] = false
Features["FeatureToggle_30"] = function(state)
    log("FeatureToggle_30", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_30", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_30"] = state
    Features["FeatureToggle_30"](state)
end, false)

-- Slider 30
Config.Sliders["FeatureSlider_30"] = 50
Features["FeatureSlider_30"] = function(value)
    log("FeatureSlider_30", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_30", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_30"] = val
    Features["FeatureSlider_30"](val)
end, 50)

-- Dropdown 30
Config.Dropdown["FeatureDropdown_30"] = "Medium"
Features["FeatureDropdown_30"] = function(option)
    log("FeatureDropdown_30", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_30", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_30"] = option
    Features["FeatureDropdown_30"](option)
end, "Medium")

-- Toggle 31
Config.Toggles["FeatureToggle_31"] = false
Features["FeatureToggle_31"] = function(state)
    log("FeatureToggle_31", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_31", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_31"] = state
    Features["FeatureToggle_31"](state)
end, false)

-- Slider 31
Config.Sliders["FeatureSlider_31"] = 50
Features["FeatureSlider_31"] = function(value)
    log("FeatureSlider_31", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_31", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_31"] = val
    Features["FeatureSlider_31"](val)
end, 50)

-- Dropdown 31
Config.Dropdown["FeatureDropdown_31"] = "Medium"
Features["FeatureDropdown_31"] = function(option)
    log("FeatureDropdown_31", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_31", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_31"] = option
    Features["FeatureDropdown_31"](option)
end, "Medium")

-- Toggle 32
Config.Toggles["FeatureToggle_32"] = false
Features["FeatureToggle_32"] = function(state)
    log("FeatureToggle_32", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_32", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_32"] = state
    Features["FeatureToggle_32"](state)
end, false)

-- Slider 32
Config.Sliders["FeatureSlider_32"] = 50
Features["FeatureSlider_32"] = function(value)
    log("FeatureSlider_32", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_32", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_32"] = val
    Features["FeatureSlider_32"](val)
end, 50)

-- Dropdown 32
Config.Dropdown["FeatureDropdown_32"] = "Medium"
Features["FeatureDropdown_32"] = function(option)
    log("FeatureDropdown_32", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_32", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_32"] = option
    Features["FeatureDropdown_32"](option)
end, "Medium")

-- Toggle 33
Config.Toggles["FeatureToggle_33"] = false
Features["FeatureToggle_33"] = function(state)
    log("FeatureToggle_33", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_33", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_33"] = state
    Features["FeatureToggle_33"](state)
end, false)

-- Slider 33
Config.Sliders["FeatureSlider_33"] = 50
Features["FeatureSlider_33"] = function(value)
    log("FeatureSlider_33", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_33", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_33"] = val
    Features["FeatureSlider_33"](val)
end, 50)

-- Dropdown 33
Config.Dropdown["FeatureDropdown_33"] = "Medium"
Features["FeatureDropdown_33"] = function(option)
    log("FeatureDropdown_33", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_33", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_33"] = option
    Features["FeatureDropdown_33"](option)
end, "Medium")

-- Toggle 34
Config.Toggles["FeatureToggle_34"] = false
Features["FeatureToggle_34"] = function(state)
    log("FeatureToggle_34", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_34", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_34"] = state
    Features["FeatureToggle_34"](state)
end, false)

-- Slider 34
Config.Sliders["FeatureSlider_34"] = 50
Features["FeatureSlider_34"] = function(value)
    log("FeatureSlider_34", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_34", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_34"] = val
    Features["FeatureSlider_34"](val)
end, 50)

-- Dropdown 34
Config.Dropdown["FeatureDropdown_34"] = "Medium"
Features["FeatureDropdown_34"] = function(option)
    log("FeatureDropdown_34", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_34", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_34"] = option
    Features["FeatureDropdown_34"](option)
end, "Medium")

-- Toggle 35
Config.Toggles["FeatureToggle_35"] = false
Features["FeatureToggle_35"] = function(state)
    log("FeatureToggle_35", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_35", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_35"] = state
    Features["FeatureToggle_35"](state)
end, false)

-- Slider 35
Config.Sliders["FeatureSlider_35"] = 50
Features["FeatureSlider_35"] = function(value)
    log("FeatureSlider_35", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_35", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_35"] = val
    Features["FeatureSlider_35"](val)
end, 50)

-- Dropdown 35
Config.Dropdown["FeatureDropdown_35"] = "Medium"
Features["FeatureDropdown_35"] = function(option)
    log("FeatureDropdown_35", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_35", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_35"] = option
    Features["FeatureDropdown_35"](option)
end, "Medium")

-- Toggle 36
Config.Toggles["FeatureToggle_36"] = false
Features["FeatureToggle_36"] = function(state)
    log("FeatureToggle_36", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_36", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_36"] = state
    Features["FeatureToggle_36"](state)
end, false)

-- Slider 36
Config.Sliders["FeatureSlider_36"] = 50
Features["FeatureSlider_36"] = function(value)
    log("FeatureSlider_36", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_36", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_36"] = val
    Features["FeatureSlider_36"](val)
end, 50)

-- Dropdown 36
Config.Dropdown["FeatureDropdown_36"] = "Medium"
Features["FeatureDropdown_36"] = function(option)
    log("FeatureDropdown_36", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_36", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_36"] = option
    Features["FeatureDropdown_36"](option)
end, "Medium")

-- Toggle 37
Config.Toggles["FeatureToggle_37"] = false
Features["FeatureToggle_37"] = function(state)
    log("FeatureToggle_37", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_37", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_37"] = state
    Features["FeatureToggle_37"](state)
end, false)

-- Slider 37
Config.Sliders["FeatureSlider_37"] = 50
Features["FeatureSlider_37"] = function(value)
    log("FeatureSlider_37", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_37", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_37"] = val
    Features["FeatureSlider_37"](val)
end, 50)

-- Dropdown 37
Config.Dropdown["FeatureDropdown_37"] = "Medium"
Features["FeatureDropdown_37"] = function(option)
    log("FeatureDropdown_37", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_37", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_37"] = option
    Features["FeatureDropdown_37"](option)
end, "Medium")

-- Toggle 38
Config.Toggles["FeatureToggle_38"] = false
Features["FeatureToggle_38"] = function(state)
    log("FeatureToggle_38", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_38", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_38"] = state
    Features["FeatureToggle_38"](state)
end, false)

-- Slider 38
Config.Sliders["FeatureSlider_38"] = 50
Features["FeatureSlider_38"] = function(value)
    log("FeatureSlider_38", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_38", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_38"] = val
    Features["FeatureSlider_38"](val)
end, 50)

-- Dropdown 38
Config.Dropdown["FeatureDropdown_38"] = "Medium"
Features["FeatureDropdown_38"] = function(option)
    log("FeatureDropdown_38", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_38", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_38"] = option
    Features["FeatureDropdown_38"](option)
end, "Medium")

-- Toggle 39
Config.Toggles["FeatureToggle_39"] = false
Features["FeatureToggle_39"] = function(state)
    log("FeatureToggle_39", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_39", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_39"] = state
    Features["FeatureToggle_39"](state)
end, false)

-- Slider 39
Config.Sliders["FeatureSlider_39"] = 50
Features["FeatureSlider_39"] = function(value)
    log("FeatureSlider_39", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_39", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_39"] = val
    Features["FeatureSlider_39"](val)
end, 50)

-- Dropdown 39
Config.Dropdown["FeatureDropdown_39"] = "Medium"
Features["FeatureDropdown_39"] = function(option)
    log("FeatureDropdown_39", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_39", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_39"] = option
    Features["FeatureDropdown_39"](option)
end, "Medium")

-- Toggle 40
Config.Toggles["FeatureToggle_40"] = false
Features["FeatureToggle_40"] = function(state)
    log("FeatureToggle_40", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_40", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_40"] = state
    Features["FeatureToggle_40"](state)
end, false)

-- Slider 40
Config.Sliders["FeatureSlider_40"] = 50
Features["FeatureSlider_40"] = function(value)
    log("FeatureSlider_40", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_40", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_40"] = val
    Features["FeatureSlider_40"](val)
end, 50)

-- Dropdown 40
Config.Dropdown["FeatureDropdown_40"] = "Medium"
Features["FeatureDropdown_40"] = function(option)
    log("FeatureDropdown_40", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_40", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_40"] = option
    Features["FeatureDropdown_40"](option)
end, "Medium")

-- Toggle 41
Config.Toggles["FeatureToggle_41"] = false
Features["FeatureToggle_41"] = function(state)
    log("FeatureToggle_41", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_41", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_41"] = state
    Features["FeatureToggle_41"](state)
end, false)

-- Slider 41
Config.Sliders["FeatureSlider_41"] = 50
Features["FeatureSlider_41"] = function(value)
    log("FeatureSlider_41", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_41", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_41"] = val
    Features["FeatureSlider_41"](val)
end, 50)

-- Dropdown 41
Config.Dropdown["FeatureDropdown_41"] = "Medium"
Features["FeatureDropdown_41"] = function(option)
    log("FeatureDropdown_41", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_41", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_41"] = option
    Features["FeatureDropdown_41"](option)
end, "Medium")

-- Toggle 42
Config.Toggles["FeatureToggle_42"] = false
Features["FeatureToggle_42"] = function(state)
    log("FeatureToggle_42", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_42", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_42"] = state
    Features["FeatureToggle_42"](state)
end, false)

-- Slider 42
Config.Sliders["FeatureSlider_42"] = 50
Features["FeatureSlider_42"] = function(value)
    log("FeatureSlider_42", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_42", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_42"] = val
    Features["FeatureSlider_42"](val)
end, 50)

-- Dropdown 42
Config.Dropdown["FeatureDropdown_42"] = "Medium"
Features["FeatureDropdown_42"] = function(option)
    log("FeatureDropdown_42", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_42", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_42"] = option
    Features["FeatureDropdown_42"](option)
end, "Medium")

-- Toggle 43
Config.Toggles["FeatureToggle_43"] = false
Features["FeatureToggle_43"] = function(state)
    log("FeatureToggle_43", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_43", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_43"] = state
    Features["FeatureToggle_43"](state)
end, false)

-- Slider 43
Config.Sliders["FeatureSlider_43"] = 50
Features["FeatureSlider_43"] = function(value)
    log("FeatureSlider_43", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_43", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_43"] = val
    Features["FeatureSlider_43"](val)
end, 50)

-- Dropdown 43
Config.Dropdown["FeatureDropdown_43"] = "Medium"
Features["FeatureDropdown_43"] = function(option)
    log("FeatureDropdown_43", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_43", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_43"] = option
    Features["FeatureDropdown_43"](option)
end, "Medium")

-- Toggle 44
Config.Toggles["FeatureToggle_44"] = false
Features["FeatureToggle_44"] = function(state)
    log("FeatureToggle_44", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_44", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_44"] = state
    Features["FeatureToggle_44"](state)
end, false)

-- Slider 44
Config.Sliders["FeatureSlider_44"] = 50
Features["FeatureSlider_44"] = function(value)
    log("FeatureSlider_44", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_44", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_44"] = val
    Features["FeatureSlider_44"](val)
end, 50)

-- Dropdown 44
Config.Dropdown["FeatureDropdown_44"] = "Medium"
Features["FeatureDropdown_44"] = function(option)
    log("FeatureDropdown_44", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_44", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_44"] = option
    Features["FeatureDropdown_44"](option)
end, "Medium")

-- Toggle 45
Config.Toggles["FeatureToggle_45"] = false
Features["FeatureToggle_45"] = function(state)
    log("FeatureToggle_45", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_45", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_45"] = state
    Features["FeatureToggle_45"](state)
end, false)

-- Slider 45
Config.Sliders["FeatureSlider_45"] = 50
Features["FeatureSlider_45"] = function(value)
    log("FeatureSlider_45", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_45", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_45"] = val
    Features["FeatureSlider_45"](val)
end, 50)

-- Dropdown 45
Config.Dropdown["FeatureDropdown_45"] = "Medium"
Features["FeatureDropdown_45"] = function(option)
    log("FeatureDropdown_45", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_45", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_45"] = option
    Features["FeatureDropdown_45"](option)
end, "Medium")

-- Toggle 46
Config.Toggles["FeatureToggle_46"] = false
Features["FeatureToggle_46"] = function(state)
    log("FeatureToggle_46", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_46", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_46"] = state
    Features["FeatureToggle_46"](state)
end, false)

-- Slider 46
Config.Sliders["FeatureSlider_46"] = 50
Features["FeatureSlider_46"] = function(value)
    log("FeatureSlider_46", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_46", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_46"] = val
    Features["FeatureSlider_46"](val)
end, 50)

-- Dropdown 46
Config.Dropdown["FeatureDropdown_46"] = "Medium"
Features["FeatureDropdown_46"] = function(option)
    log("FeatureDropdown_46", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_46", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_46"] = option
    Features["FeatureDropdown_46"](option)
end, "Medium")

-- Toggle 47
Config.Toggles["FeatureToggle_47"] = false
Features["FeatureToggle_47"] = function(state)
    log("FeatureToggle_47", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_47", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_47"] = state
    Features["FeatureToggle_47"](state)
end, false)

-- Slider 47
Config.Sliders["FeatureSlider_47"] = 50
Features["FeatureSlider_47"] = function(value)
    log("FeatureSlider_47", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_47", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_47"] = val
    Features["FeatureSlider_47"](val)
end, 50)

-- Dropdown 47
Config.Dropdown["FeatureDropdown_47"] = "Medium"
Features["FeatureDropdown_47"] = function(option)
    log("FeatureDropdown_47", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_47", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_47"] = option
    Features["FeatureDropdown_47"](option)
end, "Medium")

-- Toggle 48
Config.Toggles["FeatureToggle_48"] = false
Features["FeatureToggle_48"] = function(state)
    log("FeatureToggle_48", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_48", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_48"] = state
    Features["FeatureToggle_48"](state)
end, false)

-- Slider 48
Config.Sliders["FeatureSlider_48"] = 50
Features["FeatureSlider_48"] = function(value)
    log("FeatureSlider_48", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_48", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_48"] = val
    Features["FeatureSlider_48"](val)
end, 50)

-- Dropdown 48
Config.Dropdown["FeatureDropdown_48"] = "Medium"
Features["FeatureDropdown_48"] = function(option)
    log("FeatureDropdown_48", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_48", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_48"] = option
    Features["FeatureDropdown_48"](option)
end, "Medium")

-- Toggle 49
Config.Toggles["FeatureToggle_49"] = false
Features["FeatureToggle_49"] = function(state)
    log("FeatureToggle_49", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_49", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_49"] = state
    Features["FeatureToggle_49"](state)
end, false)

-- Slider 49
Config.Sliders["FeatureSlider_49"] = 50
Features["FeatureSlider_49"] = function(value)
    log("FeatureSlider_49", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_49", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_49"] = val
    Features["FeatureSlider_49"](val)
end, 50)

-- Dropdown 49
Config.Dropdown["FeatureDropdown_49"] = "Medium"
Features["FeatureDropdown_49"] = function(option)
    log("FeatureDropdown_49", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_49", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_49"] = option
    Features["FeatureDropdown_49"](option)
end, "Medium")

-- Toggle 50
Config.Toggles["FeatureToggle_50"] = false
Features["FeatureToggle_50"] = function(state)
    log("FeatureToggle_50", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_50", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_50"] = state
    Features["FeatureToggle_50"](state)
end, false)

-- Slider 50
Config.Sliders["FeatureSlider_50"] = 50
Features["FeatureSlider_50"] = function(value)
    log("FeatureSlider_50", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_50", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_50"] = val
    Features["FeatureSlider_50"](val)
end, 50)

-- Dropdown 50
Config.Dropdown["FeatureDropdown_50"] = "Medium"
Features["FeatureDropdown_50"] = function(option)
    log("FeatureDropdown_50", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_50", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_50"] = option
    Features["FeatureDropdown_50"](option)
end, "Medium")

-- Toggle 51
Config.Toggles["FeatureToggle_51"] = false
Features["FeatureToggle_51"] = function(state)
    log("FeatureToggle_51", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_51", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_51"] = state
    Features["FeatureToggle_51"](state)
end, false)

-- Slider 51
Config.Sliders["FeatureSlider_51"] = 50
Features["FeatureSlider_51"] = function(value)
    log("FeatureSlider_51", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_51", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_51"] = val
    Features["FeatureSlider_51"](val)
end, 50)

-- Dropdown 51
Config.Dropdown["FeatureDropdown_51"] = "Medium"
Features["FeatureDropdown_51"] = function(option)
    log("FeatureDropdown_51", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_51", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_51"] = option
    Features["FeatureDropdown_51"](option)
end, "Medium")

-- Toggle 52
Config.Toggles["FeatureToggle_52"] = false
Features["FeatureToggle_52"] = function(state)
    log("FeatureToggle_52", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_52", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_52"] = state
    Features["FeatureToggle_52"](state)
end, false)

-- Slider 52
Config.Sliders["FeatureSlider_52"] = 50
Features["FeatureSlider_52"] = function(value)
    log("FeatureSlider_52", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_52", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_52"] = val
    Features["FeatureSlider_52"](val)
end, 50)

-- Dropdown 52
Config.Dropdown["FeatureDropdown_52"] = "Medium"
Features["FeatureDropdown_52"] = function(option)
    log("FeatureDropdown_52", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_52", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_52"] = option
    Features["FeatureDropdown_52"](option)
end, "Medium")

-- Toggle 53
Config.Toggles["FeatureToggle_53"] = false
Features["FeatureToggle_53"] = function(state)
    log("FeatureToggle_53", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_53", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_53"] = state
    Features["FeatureToggle_53"](state)
end, false)

-- Slider 53
Config.Sliders["FeatureSlider_53"] = 50
Features["FeatureSlider_53"] = function(value)
    log("FeatureSlider_53", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_53", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_53"] = val
    Features["FeatureSlider_53"](val)
end, 50)

-- Dropdown 53
Config.Dropdown["FeatureDropdown_53"] = "Medium"
Features["FeatureDropdown_53"] = function(option)
    log("FeatureDropdown_53", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_53", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_53"] = option
    Features["FeatureDropdown_53"](option)
end, "Medium")

-- Toggle 54
Config.Toggles["FeatureToggle_54"] = false
Features["FeatureToggle_54"] = function(state)
    log("FeatureToggle_54", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_54", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_54"] = state
    Features["FeatureToggle_54"](state)
end, false)

-- Slider 54
Config.Sliders["FeatureSlider_54"] = 50
Features["FeatureSlider_54"] = function(value)
    log("FeatureSlider_54", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_54", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_54"] = val
    Features["FeatureSlider_54"](val)
end, 50)

-- Dropdown 54
Config.Dropdown["FeatureDropdown_54"] = "Medium"
Features["FeatureDropdown_54"] = function(option)
    log("FeatureDropdown_54", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_54", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_54"] = option
    Features["FeatureDropdown_54"](option)
end, "Medium")

-- Toggle 55
Config.Toggles["FeatureToggle_55"] = false
Features["FeatureToggle_55"] = function(state)
    log("FeatureToggle_55", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_55", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_55"] = state
    Features["FeatureToggle_55"](state)
end, false)

-- Slider 55
Config.Sliders["FeatureSlider_55"] = 50
Features["FeatureSlider_55"] = function(value)
    log("FeatureSlider_55", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_55", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_55"] = val
    Features["FeatureSlider_55"](val)
end, 50)

-- Dropdown 55
Config.Dropdown["FeatureDropdown_55"] = "Medium"
Features["FeatureDropdown_55"] = function(option)
    log("FeatureDropdown_55", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_55", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_55"] = option
    Features["FeatureDropdown_55"](option)
end, "Medium")

-- Toggle 56
Config.Toggles["FeatureToggle_56"] = false
Features["FeatureToggle_56"] = function(state)
    log("FeatureToggle_56", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_56", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_56"] = state
    Features["FeatureToggle_56"](state)
end, false)

-- Slider 56
Config.Sliders["FeatureSlider_56"] = 50
Features["FeatureSlider_56"] = function(value)
    log("FeatureSlider_56", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_56", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_56"] = val
    Features["FeatureSlider_56"](val)
end, 50)

-- Dropdown 56
Config.Dropdown["FeatureDropdown_56"] = "Medium"
Features["FeatureDropdown_56"] = function(option)
    log("FeatureDropdown_56", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_56", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_56"] = option
    Features["FeatureDropdown_56"](option)
end, "Medium")

-- Toggle 57
Config.Toggles["FeatureToggle_57"] = false
Features["FeatureToggle_57"] = function(state)
    log("FeatureToggle_57", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_57", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_57"] = state
    Features["FeatureToggle_57"](state)
end, false)

-- Slider 57
Config.Sliders["FeatureSlider_57"] = 50
Features["FeatureSlider_57"] = function(value)
    log("FeatureSlider_57", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_57", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_57"] = val
    Features["FeatureSlider_57"](val)
end, 50)

-- Dropdown 57
Config.Dropdown["FeatureDropdown_57"] = "Medium"
Features["FeatureDropdown_57"] = function(option)
    log("FeatureDropdown_57", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_57", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_57"] = option
    Features["FeatureDropdown_57"](option)
end, "Medium")

-- Toggle 58
Config.Toggles["FeatureToggle_58"] = false
Features["FeatureToggle_58"] = function(state)
    log("FeatureToggle_58", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_58", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_58"] = state
    Features["FeatureToggle_58"](state)
end, false)

-- Slider 58
Config.Sliders["FeatureSlider_58"] = 50
Features["FeatureSlider_58"] = function(value)
    log("FeatureSlider_58", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_58", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_58"] = val
    Features["FeatureSlider_58"](val)
end, 50)

-- Dropdown 58
Config.Dropdown["FeatureDropdown_58"] = "Medium"
Features["FeatureDropdown_58"] = function(option)
    log("FeatureDropdown_58", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_58", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_58"] = option
    Features["FeatureDropdown_58"](option)
end, "Medium")

-- Toggle 59
Config.Toggles["FeatureToggle_59"] = false
Features["FeatureToggle_59"] = function(state)
    log("FeatureToggle_59", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_59", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_59"] = state
    Features["FeatureToggle_59"](state)
end, false)

-- Slider 59
Config.Sliders["FeatureSlider_59"] = 50
Features["FeatureSlider_59"] = function(value)
    log("FeatureSlider_59", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_59", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_59"] = val
    Features["FeatureSlider_59"](val)
end, 50)

-- Dropdown 59
Config.Dropdown["FeatureDropdown_59"] = "Medium"
Features["FeatureDropdown_59"] = function(option)
    log("FeatureDropdown_59", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_59", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_59"] = option
    Features["FeatureDropdown_59"](option)
end, "Medium")

-- Toggle 60
Config.Toggles["FeatureToggle_60"] = false
Features["FeatureToggle_60"] = function(state)
    log("FeatureToggle_60", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_60", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_60"] = state
    Features["FeatureToggle_60"](state)
end, false)

-- Slider 60
Config.Sliders["FeatureSlider_60"] = 50
Features["FeatureSlider_60"] = function(value)
    log("FeatureSlider_60", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_60", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_60"] = val
    Features["FeatureSlider_60"](val)
end, 50)

-- Dropdown 60
Config.Dropdown["FeatureDropdown_60"] = "Medium"
Features["FeatureDropdown_60"] = function(option)
    log("FeatureDropdown_60", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_60", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_60"] = option
    Features["FeatureDropdown_60"](option)
end, "Medium")

-- Toggle 61
Config.Toggles["FeatureToggle_61"] = false
Features["FeatureToggle_61"] = function(state)
    log("FeatureToggle_61", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_61", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_61"] = state
    Features["FeatureToggle_61"](state)
end, false)

-- Slider 61
Config.Sliders["FeatureSlider_61"] = 50
Features["FeatureSlider_61"] = function(value)
    log("FeatureSlider_61", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_61", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_61"] = val
    Features["FeatureSlider_61"](val)
end, 50)

-- Dropdown 61
Config.Dropdown["FeatureDropdown_61"] = "Medium"
Features["FeatureDropdown_61"] = function(option)
    log("FeatureDropdown_61", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_61", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_61"] = option
    Features["FeatureDropdown_61"](option)
end, "Medium")

-- Toggle 62
Config.Toggles["FeatureToggle_62"] = false
Features["FeatureToggle_62"] = function(state)
    log("FeatureToggle_62", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_62", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_62"] = state
    Features["FeatureToggle_62"](state)
end, false)

-- Slider 62
Config.Sliders["FeatureSlider_62"] = 50
Features["FeatureSlider_62"] = function(value)
    log("FeatureSlider_62", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_62", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_62"] = val
    Features["FeatureSlider_62"](val)
end, 50)

-- Dropdown 62
Config.Dropdown["FeatureDropdown_62"] = "Medium"
Features["FeatureDropdown_62"] = function(option)
    log("FeatureDropdown_62", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_62", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_62"] = option
    Features["FeatureDropdown_62"](option)
end, "Medium")

-- Toggle 63
Config.Toggles["FeatureToggle_63"] = false
Features["FeatureToggle_63"] = function(state)
    log("FeatureToggle_63", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_63", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_63"] = state
    Features["FeatureToggle_63"](state)
end, false)

-- Slider 63
Config.Sliders["FeatureSlider_63"] = 50
Features["FeatureSlider_63"] = function(value)
    log("FeatureSlider_63", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_63", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_63"] = val
    Features["FeatureSlider_63"](val)
end, 50)

-- Dropdown 63
Config.Dropdown["FeatureDropdown_63"] = "Medium"
Features["FeatureDropdown_63"] = function(option)
    log("FeatureDropdown_63", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_63", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_63"] = option
    Features["FeatureDropdown_63"](option)
end, "Medium")

-- Toggle 64
Config.Toggles["FeatureToggle_64"] = false
Features["FeatureToggle_64"] = function(state)
    log("FeatureToggle_64", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_64", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_64"] = state
    Features["FeatureToggle_64"](state)
end, false)

-- Slider 64
Config.Sliders["FeatureSlider_64"] = 50
Features["FeatureSlider_64"] = function(value)
    log("FeatureSlider_64", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_64", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_64"] = val
    Features["FeatureSlider_64"](val)
end, 50)

-- Dropdown 64
Config.Dropdown["FeatureDropdown_64"] = "Medium"
Features["FeatureDropdown_64"] = function(option)
    log("FeatureDropdown_64", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_64", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_64"] = option
    Features["FeatureDropdown_64"](option)
end, "Medium")

-- Toggle 65
Config.Toggles["FeatureToggle_65"] = false
Features["FeatureToggle_65"] = function(state)
    log("FeatureToggle_65", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_65", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_65"] = state
    Features["FeatureToggle_65"](state)
end, false)

-- Slider 65
Config.Sliders["FeatureSlider_65"] = 50
Features["FeatureSlider_65"] = function(value)
    log("FeatureSlider_65", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_65", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_65"] = val
    Features["FeatureSlider_65"](val)
end, 50)

-- Dropdown 65
Config.Dropdown["FeatureDropdown_65"] = "Medium"
Features["FeatureDropdown_65"] = function(option)
    log("FeatureDropdown_65", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_65", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_65"] = option
    Features["FeatureDropdown_65"](option)
end, "Medium")

-- Toggle 66
Config.Toggles["FeatureToggle_66"] = false
Features["FeatureToggle_66"] = function(state)
    log("FeatureToggle_66", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_66", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_66"] = state
    Features["FeatureToggle_66"](state)
end, false)

-- Slider 66
Config.Sliders["FeatureSlider_66"] = 50
Features["FeatureSlider_66"] = function(value)
    log("FeatureSlider_66", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_66", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_66"] = val
    Features["FeatureSlider_66"](val)
end, 50)

-- Dropdown 66
Config.Dropdown["FeatureDropdown_66"] = "Medium"
Features["FeatureDropdown_66"] = function(option)
    log("FeatureDropdown_66", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_66", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_66"] = option
    Features["FeatureDropdown_66"](option)
end, "Medium")

-- Toggle 67
Config.Toggles["FeatureToggle_67"] = false
Features["FeatureToggle_67"] = function(state)
    log("FeatureToggle_67", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_67", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_67"] = state
    Features["FeatureToggle_67"](state)
end, false)

-- Slider 67
Config.Sliders["FeatureSlider_67"] = 50
Features["FeatureSlider_67"] = function(value)
    log("FeatureSlider_67", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_67", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_67"] = val
    Features["FeatureSlider_67"](val)
end, 50)

-- Dropdown 67
Config.Dropdown["FeatureDropdown_67"] = "Medium"
Features["FeatureDropdown_67"] = function(option)
    log("FeatureDropdown_67", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_67", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_67"] = option
    Features["FeatureDropdown_67"](option)
end, "Medium")

-- Toggle 68
Config.Toggles["FeatureToggle_68"] = false
Features["FeatureToggle_68"] = function(state)
    log("FeatureToggle_68", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_68", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_68"] = state
    Features["FeatureToggle_68"](state)
end, false)

-- Slider 68
Config.Sliders["FeatureSlider_68"] = 50
Features["FeatureSlider_68"] = function(value)
    log("FeatureSlider_68", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_68", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_68"] = val
    Features["FeatureSlider_68"](val)
end, 50)

-- Dropdown 68
Config.Dropdown["FeatureDropdown_68"] = "Medium"
Features["FeatureDropdown_68"] = function(option)
    log("FeatureDropdown_68", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_68", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_68"] = option
    Features["FeatureDropdown_68"](option)
end, "Medium")

-- Toggle 69
Config.Toggles["FeatureToggle_69"] = false
Features["FeatureToggle_69"] = function(state)
    log("FeatureToggle_69", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_69", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_69"] = state
    Features["FeatureToggle_69"](state)
end, false)

-- Slider 69
Config.Sliders["FeatureSlider_69"] = 50
Features["FeatureSlider_69"] = function(value)
    log("FeatureSlider_69", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_69", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_69"] = val
    Features["FeatureSlider_69"](val)
end, 50)

-- Dropdown 69
Config.Dropdown["FeatureDropdown_69"] = "Medium"
Features["FeatureDropdown_69"] = function(option)
    log("FeatureDropdown_69", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_69", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_69"] = option
    Features["FeatureDropdown_69"](option)
end, "Medium")

-- Toggle 70
Config.Toggles["FeatureToggle_70"] = false
Features["FeatureToggle_70"] = function(state)
    log("FeatureToggle_70", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_70", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_70"] = state
    Features["FeatureToggle_70"](state)
end, false)

-- Slider 70
Config.Sliders["FeatureSlider_70"] = 50
Features["FeatureSlider_70"] = function(value)
    log("FeatureSlider_70", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_70", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_70"] = val
    Features["FeatureSlider_70"](val)
end, 50)

-- Dropdown 70
Config.Dropdown["FeatureDropdown_70"] = "Medium"
Features["FeatureDropdown_70"] = function(option)
    log("FeatureDropdown_70", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_70", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_70"] = option
    Features["FeatureDropdown_70"](option)
end, "Medium")

-- Toggle 71
Config.Toggles["FeatureToggle_71"] = false
Features["FeatureToggle_71"] = function(state)
    log("FeatureToggle_71", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_71", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_71"] = state
    Features["FeatureToggle_71"](state)
end, false)

-- Slider 71
Config.Sliders["FeatureSlider_71"] = 50
Features["FeatureSlider_71"] = function(value)
    log("FeatureSlider_71", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_71", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_71"] = val
    Features["FeatureSlider_71"](val)
end, 50)

-- Dropdown 71
Config.Dropdown["FeatureDropdown_71"] = "Medium"
Features["FeatureDropdown_71"] = function(option)
    log("FeatureDropdown_71", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_71", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_71"] = option
    Features["FeatureDropdown_71"](option)
end, "Medium")

-- Toggle 72
Config.Toggles["FeatureToggle_72"] = false
Features["FeatureToggle_72"] = function(state)
    log("FeatureToggle_72", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_72", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_72"] = state
    Features["FeatureToggle_72"](state)
end, false)

-- Slider 72
Config.Sliders["FeatureSlider_72"] = 50
Features["FeatureSlider_72"] = function(value)
    log("FeatureSlider_72", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_72", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_72"] = val
    Features["FeatureSlider_72"](val)
end, 50)

-- Dropdown 72
Config.Dropdown["FeatureDropdown_72"] = "Medium"
Features["FeatureDropdown_72"] = function(option)
    log("FeatureDropdown_72", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_72", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_72"] = option
    Features["FeatureDropdown_72"](option)
end, "Medium")

-- Toggle 73
Config.Toggles["FeatureToggle_73"] = false
Features["FeatureToggle_73"] = function(state)
    log("FeatureToggle_73", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_73", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_73"] = state
    Features["FeatureToggle_73"](state)
end, false)

-- Slider 73
Config.Sliders["FeatureSlider_73"] = 50
Features["FeatureSlider_73"] = function(value)
    log("FeatureSlider_73", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_73", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_73"] = val
    Features["FeatureSlider_73"](val)
end, 50)

-- Dropdown 73
Config.Dropdown["FeatureDropdown_73"] = "Medium"
Features["FeatureDropdown_73"] = function(option)
    log("FeatureDropdown_73", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_73", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_73"] = option
    Features["FeatureDropdown_73"](option)
end, "Medium")

-- Toggle 74
Config.Toggles["FeatureToggle_74"] = false
Features["FeatureToggle_74"] = function(state)
    log("FeatureToggle_74", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_74", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_74"] = state
    Features["FeatureToggle_74"](state)
end, false)

-- Slider 74
Config.Sliders["FeatureSlider_74"] = 50
Features["FeatureSlider_74"] = function(value)
    log("FeatureSlider_74", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_74", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_74"] = val
    Features["FeatureSlider_74"](val)
end, 50)

-- Dropdown 74
Config.Dropdown["FeatureDropdown_74"] = "Medium"
Features["FeatureDropdown_74"] = function(option)
    log("FeatureDropdown_74", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_74", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_74"] = option
    Features["FeatureDropdown_74"](option)
end, "Medium")

-- Toggle 75
Config.Toggles["FeatureToggle_75"] = false
Features["FeatureToggle_75"] = function(state)
    log("FeatureToggle_75", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_75", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_75"] = state
    Features["FeatureToggle_75"](state)
end, false)

-- Slider 75
Config.Sliders["FeatureSlider_75"] = 50
Features["FeatureSlider_75"] = function(value)
    log("FeatureSlider_75", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_75", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_75"] = val
    Features["FeatureSlider_75"](val)
end, 50)

-- Dropdown 75
Config.Dropdown["FeatureDropdown_75"] = "Medium"
Features["FeatureDropdown_75"] = function(option)
    log("FeatureDropdown_75", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_75", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_75"] = option
    Features["FeatureDropdown_75"](option)
end, "Medium")

-- Toggle 76
Config.Toggles["FeatureToggle_76"] = false
Features["FeatureToggle_76"] = function(state)
    log("FeatureToggle_76", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_76", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_76"] = state
    Features["FeatureToggle_76"](state)
end, false)

-- Slider 76
Config.Sliders["FeatureSlider_76"] = 50
Features["FeatureSlider_76"] = function(value)
    log("FeatureSlider_76", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_76", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_76"] = val
    Features["FeatureSlider_76"](val)
end, 50)

-- Dropdown 76
Config.Dropdown["FeatureDropdown_76"] = "Medium"
Features["FeatureDropdown_76"] = function(option)
    log("FeatureDropdown_76", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_76", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_76"] = option
    Features["FeatureDropdown_76"](option)
end, "Medium")

-- Toggle 77
Config.Toggles["FeatureToggle_77"] = false
Features["FeatureToggle_77"] = function(state)
    log("FeatureToggle_77", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_77", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_77"] = state
    Features["FeatureToggle_77"](state)
end, false)

-- Slider 77
Config.Sliders["FeatureSlider_77"] = 50
Features["FeatureSlider_77"] = function(value)
    log("FeatureSlider_77", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_77", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_77"] = val
    Features["FeatureSlider_77"](val)
end, 50)

-- Dropdown 77
Config.Dropdown["FeatureDropdown_77"] = "Medium"
Features["FeatureDropdown_77"] = function(option)
    log("FeatureDropdown_77", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_77", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_77"] = option
    Features["FeatureDropdown_77"](option)
end, "Medium")

-- Toggle 78
Config.Toggles["FeatureToggle_78"] = false
Features["FeatureToggle_78"] = function(state)
    log("FeatureToggle_78", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_78", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_78"] = state
    Features["FeatureToggle_78"](state)
end, false)

-- Slider 78
Config.Sliders["FeatureSlider_78"] = 50
Features["FeatureSlider_78"] = function(value)
    log("FeatureSlider_78", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_78", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_78"] = val
    Features["FeatureSlider_78"](val)
end, 50)

-- Dropdown 78
Config.Dropdown["FeatureDropdown_78"] = "Medium"
Features["FeatureDropdown_78"] = function(option)
    log("FeatureDropdown_78", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_78", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_78"] = option
    Features["FeatureDropdown_78"](option)
end, "Medium")

-- Toggle 79
Config.Toggles["FeatureToggle_79"] = false
Features["FeatureToggle_79"] = function(state)
    log("FeatureToggle_79", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_79", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_79"] = state
    Features["FeatureToggle_79"](state)
end, false)

-- Slider 79
Config.Sliders["FeatureSlider_79"] = 50
Features["FeatureSlider_79"] = function(value)
    log("FeatureSlider_79", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_79", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_79"] = val
    Features["FeatureSlider_79"](val)
end, 50)

-- Dropdown 79
Config.Dropdown["FeatureDropdown_79"] = "Medium"
Features["FeatureDropdown_79"] = function(option)
    log("FeatureDropdown_79", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_79", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_79"] = option
    Features["FeatureDropdown_79"](option)
end, "Medium")

-- Toggle 80
Config.Toggles["FeatureToggle_80"] = false
Features["FeatureToggle_80"] = function(state)
    log("FeatureToggle_80", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_80", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_80"] = state
    Features["FeatureToggle_80"](state)
end, false)

-- Slider 80
Config.Sliders["FeatureSlider_80"] = 50
Features["FeatureSlider_80"] = function(value)
    log("FeatureSlider_80", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_80", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_80"] = val
    Features["FeatureSlider_80"](val)
end, 50)

-- Dropdown 80
Config.Dropdown["FeatureDropdown_80"] = "Medium"
Features["FeatureDropdown_80"] = function(option)
    log("FeatureDropdown_80", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_80", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_80"] = option
    Features["FeatureDropdown_80"](option)
end, "Medium")

-- Toggle 81
Config.Toggles["FeatureToggle_81"] = false
Features["FeatureToggle_81"] = function(state)
    log("FeatureToggle_81", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_81", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_81"] = state
    Features["FeatureToggle_81"](state)
end, false)

-- Slider 81
Config.Sliders["FeatureSlider_81"] = 50
Features["FeatureSlider_81"] = function(value)
    log("FeatureSlider_81", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_81", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_81"] = val
    Features["FeatureSlider_81"](val)
end, 50)

-- Dropdown 81
Config.Dropdown["FeatureDropdown_81"] = "Medium"
Features["FeatureDropdown_81"] = function(option)
    log("FeatureDropdown_81", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_81", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_81"] = option
    Features["FeatureDropdown_81"](option)
end, "Medium")

-- Toggle 82
Config.Toggles["FeatureToggle_82"] = false
Features["FeatureToggle_82"] = function(state)
    log("FeatureToggle_82", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_82", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_82"] = state
    Features["FeatureToggle_82"](state)
end, false)

-- Slider 82
Config.Sliders["FeatureSlider_82"] = 50
Features["FeatureSlider_82"] = function(value)
    log("FeatureSlider_82", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_82", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_82"] = val
    Features["FeatureSlider_82"](val)
end, 50)

-- Dropdown 82
Config.Dropdown["FeatureDropdown_82"] = "Medium"
Features["FeatureDropdown_82"] = function(option)
    log("FeatureDropdown_82", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_82", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_82"] = option
    Features["FeatureDropdown_82"](option)
end, "Medium")

-- Toggle 83
Config.Toggles["FeatureToggle_83"] = false
Features["FeatureToggle_83"] = function(state)
    log("FeatureToggle_83", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_83", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_83"] = state
    Features["FeatureToggle_83"](state)
end, false)

-- Slider 83
Config.Sliders["FeatureSlider_83"] = 50
Features["FeatureSlider_83"] = function(value)
    log("FeatureSlider_83", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_83", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_83"] = val
    Features["FeatureSlider_83"](val)
end, 50)

-- Dropdown 83
Config.Dropdown["FeatureDropdown_83"] = "Medium"
Features["FeatureDropdown_83"] = function(option)
    log("FeatureDropdown_83", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_83", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_83"] = option
    Features["FeatureDropdown_83"](option)
end, "Medium")

-- Toggle 84
Config.Toggles["FeatureToggle_84"] = false
Features["FeatureToggle_84"] = function(state)
    log("FeatureToggle_84", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_84", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_84"] = state
    Features["FeatureToggle_84"](state)
end, false)

-- Slider 84
Config.Sliders["FeatureSlider_84"] = 50
Features["FeatureSlider_84"] = function(value)
    log("FeatureSlider_84", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_84", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_84"] = val
    Features["FeatureSlider_84"](val)
end, 50)

-- Dropdown 84
Config.Dropdown["FeatureDropdown_84"] = "Medium"
Features["FeatureDropdown_84"] = function(option)
    log("FeatureDropdown_84", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_84", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_84"] = option
    Features["FeatureDropdown_84"](option)
end, "Medium")

-- Toggle 85
Config.Toggles["FeatureToggle_85"] = false
Features["FeatureToggle_85"] = function(state)
    log("FeatureToggle_85", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_85", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_85"] = state
    Features["FeatureToggle_85"](state)
end, false)

-- Slider 85
Config.Sliders["FeatureSlider_85"] = 50
Features["FeatureSlider_85"] = function(value)
    log("FeatureSlider_85", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_85", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_85"] = val
    Features["FeatureSlider_85"](val)
end, 50)

-- Dropdown 85
Config.Dropdown["FeatureDropdown_85"] = "Medium"
Features["FeatureDropdown_85"] = function(option)
    log("FeatureDropdown_85", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_85", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_85"] = option
    Features["FeatureDropdown_85"](option)
end, "Medium")

-- Toggle 86
Config.Toggles["FeatureToggle_86"] = false
Features["FeatureToggle_86"] = function(state)
    log("FeatureToggle_86", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_86", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_86"] = state
    Features["FeatureToggle_86"](state)
end, false)

-- Slider 86
Config.Sliders["FeatureSlider_86"] = 50
Features["FeatureSlider_86"] = function(value)
    log("FeatureSlider_86", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_86", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_86"] = val
    Features["FeatureSlider_86"](val)
end, 50)

-- Dropdown 86
Config.Dropdown["FeatureDropdown_86"] = "Medium"
Features["FeatureDropdown_86"] = function(option)
    log("FeatureDropdown_86", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_86", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_86"] = option
    Features["FeatureDropdown_86"](option)
end, "Medium")

-- Toggle 87
Config.Toggles["FeatureToggle_87"] = false
Features["FeatureToggle_87"] = function(state)
    log("FeatureToggle_87", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_87", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_87"] = state
    Features["FeatureToggle_87"](state)
end, false)

-- Slider 87
Config.Sliders["FeatureSlider_87"] = 50
Features["FeatureSlider_87"] = function(value)
    log("FeatureSlider_87", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_87", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_87"] = val
    Features["FeatureSlider_87"](val)
end, 50)

-- Dropdown 87
Config.Dropdown["FeatureDropdown_87"] = "Medium"
Features["FeatureDropdown_87"] = function(option)
    log("FeatureDropdown_87", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_87", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_87"] = option
    Features["FeatureDropdown_87"](option)
end, "Medium")

-- Toggle 88
Config.Toggles["FeatureToggle_88"] = false
Features["FeatureToggle_88"] = function(state)
    log("FeatureToggle_88", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_88", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_88"] = state
    Features["FeatureToggle_88"](state)
end, false)

-- Slider 88
Config.Sliders["FeatureSlider_88"] = 50
Features["FeatureSlider_88"] = function(value)
    log("FeatureSlider_88", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_88", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_88"] = val
    Features["FeatureSlider_88"](val)
end, 50)

-- Dropdown 88
Config.Dropdown["FeatureDropdown_88"] = "Medium"
Features["FeatureDropdown_88"] = function(option)
    log("FeatureDropdown_88", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_88", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_88"] = option
    Features["FeatureDropdown_88"](option)
end, "Medium")

-- Toggle 89
Config.Toggles["FeatureToggle_89"] = false
Features["FeatureToggle_89"] = function(state)
    log("FeatureToggle_89", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_89", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_89"] = state
    Features["FeatureToggle_89"](state)
end, false)

-- Slider 89
Config.Sliders["FeatureSlider_89"] = 50
Features["FeatureSlider_89"] = function(value)
    log("FeatureSlider_89", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_89", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_89"] = val
    Features["FeatureSlider_89"](val)
end, 50)

-- Dropdown 89
Config.Dropdown["FeatureDropdown_89"] = "Medium"
Features["FeatureDropdown_89"] = function(option)
    log("FeatureDropdown_89", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_89", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_89"] = option
    Features["FeatureDropdown_89"](option)
end, "Medium")

-- Toggle 90
Config.Toggles["FeatureToggle_90"] = false
Features["FeatureToggle_90"] = function(state)
    log("FeatureToggle_90", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_90", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_90"] = state
    Features["FeatureToggle_90"](state)
end, false)

-- Slider 90
Config.Sliders["FeatureSlider_90"] = 50
Features["FeatureSlider_90"] = function(value)
    log("FeatureSlider_90", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_90", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_90"] = val
    Features["FeatureSlider_90"](val)
end, 50)

-- Dropdown 90
Config.Dropdown["FeatureDropdown_90"] = "Medium"
Features["FeatureDropdown_90"] = function(option)
    log("FeatureDropdown_90", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_90", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_90"] = option
    Features["FeatureDropdown_90"](option)
end, "Medium")

-- Toggle 91
Config.Toggles["FeatureToggle_91"] = false
Features["FeatureToggle_91"] = function(state)
    log("FeatureToggle_91", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_91", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_91"] = state
    Features["FeatureToggle_91"](state)
end, false)

-- Slider 91
Config.Sliders["FeatureSlider_91"] = 50
Features["FeatureSlider_91"] = function(value)
    log("FeatureSlider_91", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_91", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_91"] = val
    Features["FeatureSlider_91"](val)
end, 50)

-- Dropdown 91
Config.Dropdown["FeatureDropdown_91"] = "Medium"
Features["FeatureDropdown_91"] = function(option)
    log("FeatureDropdown_91", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_91", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_91"] = option
    Features["FeatureDropdown_91"](option)
end, "Medium")

-- Toggle 92
Config.Toggles["FeatureToggle_92"] = false
Features["FeatureToggle_92"] = function(state)
    log("FeatureToggle_92", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_92", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_92"] = state
    Features["FeatureToggle_92"](state)
end, false)

-- Slider 92
Config.Sliders["FeatureSlider_92"] = 50
Features["FeatureSlider_92"] = function(value)
    log("FeatureSlider_92", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_92", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_92"] = val
    Features["FeatureSlider_92"](val)
end, 50)

-- Dropdown 92
Config.Dropdown["FeatureDropdown_92"] = "Medium"
Features["FeatureDropdown_92"] = function(option)
    log("FeatureDropdown_92", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_92", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_92"] = option
    Features["FeatureDropdown_92"](option)
end, "Medium")

-- Toggle 93
Config.Toggles["FeatureToggle_93"] = false
Features["FeatureToggle_93"] = function(state)
    log("FeatureToggle_93", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_93", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_93"] = state
    Features["FeatureToggle_93"](state)
end, false)

-- Slider 93
Config.Sliders["FeatureSlider_93"] = 50
Features["FeatureSlider_93"] = function(value)
    log("FeatureSlider_93", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_93", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_93"] = val
    Features["FeatureSlider_93"](val)
end, 50)

-- Dropdown 93
Config.Dropdown["FeatureDropdown_93"] = "Medium"
Features["FeatureDropdown_93"] = function(option)
    log("FeatureDropdown_93", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_93", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_93"] = option
    Features["FeatureDropdown_93"](option)
end, "Medium")

-- Toggle 94
Config.Toggles["FeatureToggle_94"] = false
Features["FeatureToggle_94"] = function(state)
    log("FeatureToggle_94", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_94", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_94"] = state
    Features["FeatureToggle_94"](state)
end, false)

-- Slider 94
Config.Sliders["FeatureSlider_94"] = 50
Features["FeatureSlider_94"] = function(value)
    log("FeatureSlider_94", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_94", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_94"] = val
    Features["FeatureSlider_94"](val)
end, 50)

-- Dropdown 94
Config.Dropdown["FeatureDropdown_94"] = "Medium"
Features["FeatureDropdown_94"] = function(option)
    log("FeatureDropdown_94", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_94", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_94"] = option
    Features["FeatureDropdown_94"](option)
end, "Medium")

-- Toggle 95
Config.Toggles["FeatureToggle_95"] = false
Features["FeatureToggle_95"] = function(state)
    log("FeatureToggle_95", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_95", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_95"] = state
    Features["FeatureToggle_95"](state)
end, false)

-- Slider 95
Config.Sliders["FeatureSlider_95"] = 50
Features["FeatureSlider_95"] = function(value)
    log("FeatureSlider_95", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_95", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_95"] = val
    Features["FeatureSlider_95"](val)
end, 50)

-- Dropdown 95
Config.Dropdown["FeatureDropdown_95"] = "Medium"
Features["FeatureDropdown_95"] = function(option)
    log("FeatureDropdown_95", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_95", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_95"] = option
    Features["FeatureDropdown_95"](option)
end, "Medium")

-- Toggle 96
Config.Toggles["FeatureToggle_96"] = false
Features["FeatureToggle_96"] = function(state)
    log("FeatureToggle_96", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_96", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_96"] = state
    Features["FeatureToggle_96"](state)
end, false)

-- Slider 96
Config.Sliders["FeatureSlider_96"] = 50
Features["FeatureSlider_96"] = function(value)
    log("FeatureSlider_96", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_96", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_96"] = val
    Features["FeatureSlider_96"](val)
end, 50)

-- Dropdown 96
Config.Dropdown["FeatureDropdown_96"] = "Medium"
Features["FeatureDropdown_96"] = function(option)
    log("FeatureDropdown_96", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_96", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_96"] = option
    Features["FeatureDropdown_96"](option)
end, "Medium")

-- Toggle 97
Config.Toggles["FeatureToggle_97"] = false
Features["FeatureToggle_97"] = function(state)
    log("FeatureToggle_97", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_97", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_97"] = state
    Features["FeatureToggle_97"](state)
end, false)

-- Slider 97
Config.Sliders["FeatureSlider_97"] = 50
Features["FeatureSlider_97"] = function(value)
    log("FeatureSlider_97", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_97", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_97"] = val
    Features["FeatureSlider_97"](val)
end, 50)

-- Dropdown 97
Config.Dropdown["FeatureDropdown_97"] = "Medium"
Features["FeatureDropdown_97"] = function(option)
    log("FeatureDropdown_97", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_97", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_97"] = option
    Features["FeatureDropdown_97"](option)
end, "Medium")

-- Toggle 98
Config.Toggles["FeatureToggle_98"] = false
Features["FeatureToggle_98"] = function(state)
    log("FeatureToggle_98", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_98", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_98"] = state
    Features["FeatureToggle_98"](state)
end, false)

-- Slider 98
Config.Sliders["FeatureSlider_98"] = 50
Features["FeatureSlider_98"] = function(value)
    log("FeatureSlider_98", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_98", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_98"] = val
    Features["FeatureSlider_98"](val)
end, 50)

-- Dropdown 98
Config.Dropdown["FeatureDropdown_98"] = "Medium"
Features["FeatureDropdown_98"] = function(option)
    log("FeatureDropdown_98", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_98", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_98"] = option
    Features["FeatureDropdown_98"](option)
end, "Medium")

-- Toggle 99
Config.Toggles["FeatureToggle_99"] = false
Features["FeatureToggle_99"] = function(state)
    log("FeatureToggle_99", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_99", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_99"] = state
    Features["FeatureToggle_99"](state)
end, false)

-- Slider 99
Config.Sliders["FeatureSlider_99"] = 50
Features["FeatureSlider_99"] = function(value)
    log("FeatureSlider_99", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_99", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_99"] = val
    Features["FeatureSlider_99"](val)
end, 50)

-- Dropdown 99
Config.Dropdown["FeatureDropdown_99"] = "Medium"
Features["FeatureDropdown_99"] = function(option)
    log("FeatureDropdown_99", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_99", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_99"] = option
    Features["FeatureDropdown_99"](option)
end, "Medium")

-- Toggle 100
Config.Toggles["FeatureToggle_100"] = false
Features["FeatureToggle_100"] = function(state)
    log("FeatureToggle_100", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_100", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_100"] = state
    Features["FeatureToggle_100"](state)
end, false)

-- Slider 100
Config.Sliders["FeatureSlider_100"] = 50
Features["FeatureSlider_100"] = function(value)
    log("FeatureSlider_100", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_100", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_100"] = val
    Features["FeatureSlider_100"](val)
end, 50)

-- Dropdown 100
Config.Dropdown["FeatureDropdown_100"] = "Medium"
Features["FeatureDropdown_100"] = function(option)
    log("FeatureDropdown_100", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_100", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_100"] = option
    Features["FeatureDropdown_100"](option)
end, "Medium")

-- Toggle 1
Config.Toggles["FeatureToggle_1"] = false
Features["FeatureToggle_1"] = function(state)
    log("FeatureToggle_1", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_1", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_1"] = state
    Features["FeatureToggle_1"](state)
end, false)

-- Slider 1
Config.Sliders["FeatureSlider_1"] = 50
Features["FeatureSlider_1"] = function(value)
    log("FeatureSlider_1", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_1", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_1"] = val
    Features["FeatureSlider_1"](val)
end, 50)

-- Dropdown 1
Config.Dropdown["FeatureDropdown_1"] = "Medium"
Features["FeatureDropdown_1"] = function(option)
    log("FeatureDropdown_1", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_1", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_1"] = option
    Features["FeatureDropdown_1"](option)
end, "Medium")

-- Toggle 2
Config.Toggles["FeatureToggle_2"] = false
Features["FeatureToggle_2"] = function(state)
    log("FeatureToggle_2", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_2", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_2"] = state
    Features["FeatureToggle_2"](state)
end, false)

-- Slider 2
Config.Sliders["FeatureSlider_2"] = 50
Features["FeatureSlider_2"] = function(value)
    log("FeatureSlider_2", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_2", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_2"] = val
    Features["FeatureSlider_2"](val)
end, 50)

-- Dropdown 2
Config.Dropdown["FeatureDropdown_2"] = "Medium"
Features["FeatureDropdown_2"] = function(option)
    log("FeatureDropdown_2", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_2", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_2"] = option
    Features["FeatureDropdown_2"](option)
end, "Medium")

-- Toggle 3
Config.Toggles["FeatureToggle_3"] = false
Features["FeatureToggle_3"] = function(state)
    log("FeatureToggle_3", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_3", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_3"] = state
    Features["FeatureToggle_3"](state)
end, false)

-- Slider 3
Config.Sliders["FeatureSlider_3"] = 50
Features["FeatureSlider_3"] = function(value)
    log("FeatureSlider_3", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_3", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_3"] = val
    Features["FeatureSlider_3"](val)
end, 50)

-- Dropdown 3
Config.Dropdown["FeatureDropdown_3"] = "Medium"
Features["FeatureDropdown_3"] = function(option)
    log("FeatureDropdown_3", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_3", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_3"] = option
    Features["FeatureDropdown_3"](option)
end, "Medium")

-- Toggle 4
Config.Toggles["FeatureToggle_4"] = false
Features["FeatureToggle_4"] = function(state)
    log("FeatureToggle_4", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_4", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_4"] = state
    Features["FeatureToggle_4"](state)
end, false)

-- Slider 4
Config.Sliders["FeatureSlider_4"] = 50
Features["FeatureSlider_4"] = function(value)
    log("FeatureSlider_4", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_4", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_4"] = val
    Features["FeatureSlider_4"](val)
end, 50)

-- Dropdown 4
Config.Dropdown["FeatureDropdown_4"] = "Medium"
Features["FeatureDropdown_4"] = function(option)
    log("FeatureDropdown_4", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_4", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_4"] = option
    Features["FeatureDropdown_4"](option)
end, "Medium")

-- Toggle 5
Config.Toggles["FeatureToggle_5"] = false
Features["FeatureToggle_5"] = function(state)
    log("FeatureToggle_5", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_5", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_5"] = state
    Features["FeatureToggle_5"](state)
end, false)

-- Slider 5
Config.Sliders["FeatureSlider_5"] = 50
Features["FeatureSlider_5"] = function(value)
    log("FeatureSlider_5", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_5", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_5"] = val
    Features["FeatureSlider_5"](val)
end, 50)

-- Dropdown 5
Config.Dropdown["FeatureDropdown_5"] = "Medium"
Features["FeatureDropdown_5"] = function(option)
    log("FeatureDropdown_5", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_5", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_5"] = option
    Features["FeatureDropdown_5"](option)
end, "Medium")

-- Toggle 6
Config.Toggles["FeatureToggle_6"] = false
Features["FeatureToggle_6"] = function(state)
    log("FeatureToggle_6", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_6", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_6"] = state
    Features["FeatureToggle_6"](state)
end, false)

-- Slider 6
Config.Sliders["FeatureSlider_6"] = 50
Features["FeatureSlider_6"] = function(value)
    log("FeatureSlider_6", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_6", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_6"] = val
    Features["FeatureSlider_6"](val)
end, 50)

-- Dropdown 6
Config.Dropdown["FeatureDropdown_6"] = "Medium"
Features["FeatureDropdown_6"] = function(option)
    log("FeatureDropdown_6", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_6", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_6"] = option
    Features["FeatureDropdown_6"](option)
end, "Medium")

-- Toggle 7
Config.Toggles["FeatureToggle_7"] = false
Features["FeatureToggle_7"] = function(state)
    log("FeatureToggle_7", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_7", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_7"] = state
    Features["FeatureToggle_7"](state)
end, false)

-- Slider 7
Config.Sliders["FeatureSlider_7"] = 50
Features["FeatureSlider_7"] = function(value)
    log("FeatureSlider_7", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_7", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_7"] = val
    Features["FeatureSlider_7"](val)
end, 50)

-- Dropdown 7
Config.Dropdown["FeatureDropdown_7"] = "Medium"
Features["FeatureDropdown_7"] = function(option)
    log("FeatureDropdown_7", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_7", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_7"] = option
    Features["FeatureDropdown_7"](option)
end, "Medium")

-- Toggle 8
Config.Toggles["FeatureToggle_8"] = false
Features["FeatureToggle_8"] = function(state)
    log("FeatureToggle_8", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_8", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_8"] = state
    Features["FeatureToggle_8"](state)
end, false)

-- Slider 8
Config.Sliders["FeatureSlider_8"] = 50
Features["FeatureSlider_8"] = function(value)
    log("FeatureSlider_8", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_8", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_8"] = val
    Features["FeatureSlider_8"](val)
end, 50)

-- Dropdown 8
Config.Dropdown["FeatureDropdown_8"] = "Medium"
Features["FeatureDropdown_8"] = function(option)
    log("FeatureDropdown_8", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_8", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_8"] = option
    Features["FeatureDropdown_8"](option)
end, "Medium")

-- Toggle 9
Config.Toggles["FeatureToggle_9"] = false
Features["FeatureToggle_9"] = function(state)
    log("FeatureToggle_9", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_9", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_9"] = state
    Features["FeatureToggle_9"](state)
end, false)

-- Slider 9
Config.Sliders["FeatureSlider_9"] = 50
Features["FeatureSlider_9"] = function(value)
    log("FeatureSlider_9", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_9", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_9"] = val
    Features["FeatureSlider_9"](val)
end, 50)

-- Dropdown 9
Config.Dropdown["FeatureDropdown_9"] = "Medium"
Features["FeatureDropdown_9"] = function(option)
    log("FeatureDropdown_9", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_9", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_9"] = option
    Features["FeatureDropdown_9"](option)
end, "Medium")

-- Toggle 10
Config.Toggles["FeatureToggle_10"] = false
Features["FeatureToggle_10"] = function(state)
    log("FeatureToggle_10", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_10", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_10"] = state
    Features["FeatureToggle_10"](state)
end, false)

-- Slider 10
Config.Sliders["FeatureSlider_10"] = 50
Features["FeatureSlider_10"] = function(value)
    log("FeatureSlider_10", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_10", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_10"] = val
    Features["FeatureSlider_10"](val)
end, 50)

-- Dropdown 10
Config.Dropdown["FeatureDropdown_10"] = "Medium"
Features["FeatureDropdown_10"] = function(option)
    log("FeatureDropdown_10", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_10", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_10"] = option
    Features["FeatureDropdown_10"](option)
end, "Medium")

-- Toggle 11
Config.Toggles["FeatureToggle_11"] = false
Features["FeatureToggle_11"] = function(state)
    log("FeatureToggle_11", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_11", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_11"] = state
    Features["FeatureToggle_11"](state)
end, false)

-- Slider 11
Config.Sliders["FeatureSlider_11"] = 50
Features["FeatureSlider_11"] = function(value)
    log("FeatureSlider_11", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_11", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_11"] = val
    Features["FeatureSlider_11"](val)
end, 50)

-- Dropdown 11
Config.Dropdown["FeatureDropdown_11"] = "Medium"
Features["FeatureDropdown_11"] = function(option)
    log("FeatureDropdown_11", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_11", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_11"] = option
    Features["FeatureDropdown_11"](option)
end, "Medium")

-- Toggle 12
Config.Toggles["FeatureToggle_12"] = false
Features["FeatureToggle_12"] = function(state)
    log("FeatureToggle_12", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_12", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_12"] = state
    Features["FeatureToggle_12"](state)
end, false)

-- Slider 12
Config.Sliders["FeatureSlider_12"] = 50
Features["FeatureSlider_12"] = function(value)
    log("FeatureSlider_12", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_12", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_12"] = val
    Features["FeatureSlider_12"](val)
end, 50)

-- Dropdown 12
Config.Dropdown["FeatureDropdown_12"] = "Medium"
Features["FeatureDropdown_12"] = function(option)
    log("FeatureDropdown_12", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_12", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_12"] = option
    Features["FeatureDropdown_12"](option)
end, "Medium")

-- Toggle 13
Config.Toggles["FeatureToggle_13"] = false
Features["FeatureToggle_13"] = function(state)
    log("FeatureToggle_13", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_13", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_13"] = state
    Features["FeatureToggle_13"](state)
end, false)

-- Slider 13
Config.Sliders["FeatureSlider_13"] = 50
Features["FeatureSlider_13"] = function(value)
    log("FeatureSlider_13", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_13", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_13"] = val
    Features["FeatureSlider_13"](val)
end, 50)

-- Dropdown 13
Config.Dropdown["FeatureDropdown_13"] = "Medium"
Features["FeatureDropdown_13"] = function(option)
    log("FeatureDropdown_13", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_13", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_13"] = option
    Features["FeatureDropdown_13"](option)
end, "Medium")

-- Toggle 14
Config.Toggles["FeatureToggle_14"] = false
Features["FeatureToggle_14"] = function(state)
    log("FeatureToggle_14", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_14", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_14"] = state
    Features["FeatureToggle_14"](state)
end, false)

-- Slider 14
Config.Sliders["FeatureSlider_14"] = 50
Features["FeatureSlider_14"] = function(value)
    log("FeatureSlider_14", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_14", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_14"] = val
    Features["FeatureSlider_14"](val)
end, 50)

-- Dropdown 14
Config.Dropdown["FeatureDropdown_14"] = "Medium"
Features["FeatureDropdown_14"] = function(option)
    log("FeatureDropdown_14", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_14", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_14"] = option
    Features["FeatureDropdown_14"](option)
end, "Medium")

-- Toggle 15
Config.Toggles["FeatureToggle_15"] = false
Features["FeatureToggle_15"] = function(state)
    log("FeatureToggle_15", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_15", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_15"] = state
    Features["FeatureToggle_15"](state)
end, false)

-- Slider 15
Config.Sliders["FeatureSlider_15"] = 50
Features["FeatureSlider_15"] = function(value)
    log("FeatureSlider_15", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_15", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_15"] = val
    Features["FeatureSlider_15"](val)
end, 50)

-- Dropdown 15
Config.Dropdown["FeatureDropdown_15"] = "Medium"
Features["FeatureDropdown_15"] = function(option)
    log("FeatureDropdown_15", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_15", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_15"] = option
    Features["FeatureDropdown_15"](option)
end, "Medium")

-- Toggle 16
Config.Toggles["FeatureToggle_16"] = false
Features["FeatureToggle_16"] = function(state)
    log("FeatureToggle_16", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_16", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_16"] = state
    Features["FeatureToggle_16"](state)
end, false)

-- Slider 16
Config.Sliders["FeatureSlider_16"] = 50
Features["FeatureSlider_16"] = function(value)
    log("FeatureSlider_16", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_16", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_16"] = val
    Features["FeatureSlider_16"](val)
end, 50)

-- Dropdown 16
Config.Dropdown["FeatureDropdown_16"] = "Medium"
Features["FeatureDropdown_16"] = function(option)
    log("FeatureDropdown_16", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_16", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_16"] = option
    Features["FeatureDropdown_16"](option)
end, "Medium")

-- Toggle 17
Config.Toggles["FeatureToggle_17"] = false
Features["FeatureToggle_17"] = function(state)
    log("FeatureToggle_17", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_17", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_17"] = state
    Features["FeatureToggle_17"](state)
end, false)

-- Slider 17
Config.Sliders["FeatureSlider_17"] = 50
Features["FeatureSlider_17"] = function(value)
    log("FeatureSlider_17", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_17", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_17"] = val
    Features["FeatureSlider_17"](val)
end, 50)

-- Dropdown 17
Config.Dropdown["FeatureDropdown_17"] = "Medium"
Features["FeatureDropdown_17"] = function(option)
    log("FeatureDropdown_17", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_17", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_17"] = option
    Features["FeatureDropdown_17"](option)
end, "Medium")

-- Toggle 18
Config.Toggles["FeatureToggle_18"] = false
Features["FeatureToggle_18"] = function(state)
    log("FeatureToggle_18", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_18", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_18"] = state
    Features["FeatureToggle_18"](state)
end, false)

-- Slider 18
Config.Sliders["FeatureSlider_18"] = 50
Features["FeatureSlider_18"] = function(value)
    log("FeatureSlider_18", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_18", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_18"] = val
    Features["FeatureSlider_18"](val)
end, 50)

-- Dropdown 18
Config.Dropdown["FeatureDropdown_18"] = "Medium"
Features["FeatureDropdown_18"] = function(option)
    log("FeatureDropdown_18", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_18", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_18"] = option
    Features["FeatureDropdown_18"](option)
end, "Medium")

-- Toggle 19
Config.Toggles["FeatureToggle_19"] = false
Features["FeatureToggle_19"] = function(state)
    log("FeatureToggle_19", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_19", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_19"] = state
    Features["FeatureToggle_19"](state)
end, false)

-- Slider 19
Config.Sliders["FeatureSlider_19"] = 50
Features["FeatureSlider_19"] = function(value)
    log("FeatureSlider_19", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_19", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_19"] = val
    Features["FeatureSlider_19"](val)
end, 50)

-- Dropdown 19
Config.Dropdown["FeatureDropdown_19"] = "Medium"
Features["FeatureDropdown_19"] = function(option)
    log("FeatureDropdown_19", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_19", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_19"] = option
    Features["FeatureDropdown_19"](option)
end, "Medium")

-- Toggle 20
Config.Toggles["FeatureToggle_20"] = false
Features["FeatureToggle_20"] = function(state)
    log("FeatureToggle_20", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_20", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_20"] = state
    Features["FeatureToggle_20"](state)
end, false)

-- Slider 20
Config.Sliders["FeatureSlider_20"] = 50
Features["FeatureSlider_20"] = function(value)
    log("FeatureSlider_20", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_20", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_20"] = val
    Features["FeatureSlider_20"](val)
end, 50)

-- Dropdown 20
Config.Dropdown["FeatureDropdown_20"] = "Medium"
Features["FeatureDropdown_20"] = function(option)
    log("FeatureDropdown_20", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_20", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_20"] = option
    Features["FeatureDropdown_20"](option)
end, "Medium")

-- Toggle 21
Config.Toggles["FeatureToggle_21"] = false
Features["FeatureToggle_21"] = function(state)
    log("FeatureToggle_21", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_21", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_21"] = state
    Features["FeatureToggle_21"](state)
end, false)

-- Slider 21
Config.Sliders["FeatureSlider_21"] = 50
Features["FeatureSlider_21"] = function(value)
    log("FeatureSlider_21", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_21", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_21"] = val
    Features["FeatureSlider_21"](val)
end, 50)

-- Dropdown 21
Config.Dropdown["FeatureDropdown_21"] = "Medium"
Features["FeatureDropdown_21"] = function(option)
    log("FeatureDropdown_21", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_21", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_21"] = option
    Features["FeatureDropdown_21"](option)
end, "Medium")

-- Toggle 22
Config.Toggles["FeatureToggle_22"] = false
Features["FeatureToggle_22"] = function(state)
    log("FeatureToggle_22", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_22", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_22"] = state
    Features["FeatureToggle_22"](state)
end, false)

-- Slider 22
Config.Sliders["FeatureSlider_22"] = 50
Features["FeatureSlider_22"] = function(value)
    log("FeatureSlider_22", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_22", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_22"] = val
    Features["FeatureSlider_22"](val)
end, 50)

-- Dropdown 22
Config.Dropdown["FeatureDropdown_22"] = "Medium"
Features["FeatureDropdown_22"] = function(option)
    log("FeatureDropdown_22", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_22", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_22"] = option
    Features["FeatureDropdown_22"](option)
end, "Medium")

-- Toggle 23
Config.Toggles["FeatureToggle_23"] = false
Features["FeatureToggle_23"] = function(state)
    log("FeatureToggle_23", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_23", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_23"] = state
    Features["FeatureToggle_23"](state)
end, false)

-- Slider 23
Config.Sliders["FeatureSlider_23"] = 50
Features["FeatureSlider_23"] = function(value)
    log("FeatureSlider_23", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_23", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_23"] = val
    Features["FeatureSlider_23"](val)
end, 50)

-- Dropdown 23
Config.Dropdown["FeatureDropdown_23"] = "Medium"
Features["FeatureDropdown_23"] = function(option)
    log("FeatureDropdown_23", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_23", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_23"] = option
    Features["FeatureDropdown_23"](option)
end, "Medium")

-- Toggle 24
Config.Toggles["FeatureToggle_24"] = false
Features["FeatureToggle_24"] = function(state)
    log("FeatureToggle_24", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_24", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_24"] = state
    Features["FeatureToggle_24"](state)
end, false)

-- Slider 24
Config.Sliders["FeatureSlider_24"] = 50
Features["FeatureSlider_24"] = function(value)
    log("FeatureSlider_24", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_24", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_24"] = val
    Features["FeatureSlider_24"](val)
end, 50)

-- Dropdown 24
Config.Dropdown["FeatureDropdown_24"] = "Medium"
Features["FeatureDropdown_24"] = function(option)
    log("FeatureDropdown_24", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_24", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_24"] = option
    Features["FeatureDropdown_24"](option)
end, "Medium")

-- Toggle 25
Config.Toggles["FeatureToggle_25"] = false
Features["FeatureToggle_25"] = function(state)
    log("FeatureToggle_25", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_25", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_25"] = state
    Features["FeatureToggle_25"](state)
end, false)

-- Slider 25
Config.Sliders["FeatureSlider_25"] = 50
Features["FeatureSlider_25"] = function(value)
    log("FeatureSlider_25", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_25", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_25"] = val
    Features["FeatureSlider_25"](val)
end, 50)

-- Dropdown 25
Config.Dropdown["FeatureDropdown_25"] = "Medium"
Features["FeatureDropdown_25"] = function(option)
    log("FeatureDropdown_25", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_25", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_25"] = option
    Features["FeatureDropdown_25"](option)
end, "Medium")

-- Toggle 26
Config.Toggles["FeatureToggle_26"] = false
Features["FeatureToggle_26"] = function(state)
    log("FeatureToggle_26", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_26", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_26"] = state
    Features["FeatureToggle_26"](state)
end, false)

-- Slider 26
Config.Sliders["FeatureSlider_26"] = 50
Features["FeatureSlider_26"] = function(value)
    log("FeatureSlider_26", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_26", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_26"] = val
    Features["FeatureSlider_26"](val)
end, 50)

-- Dropdown 26
Config.Dropdown["FeatureDropdown_26"] = "Medium"
Features["FeatureDropdown_26"] = function(option)
    log("FeatureDropdown_26", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_26", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_26"] = option
    Features["FeatureDropdown_26"](option)
end, "Medium")

-- Toggle 27
Config.Toggles["FeatureToggle_27"] = false
Features["FeatureToggle_27"] = function(state)
    log("FeatureToggle_27", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_27", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_27"] = state
    Features["FeatureToggle_27"](state)
end, false)

-- Slider 27
Config.Sliders["FeatureSlider_27"] = 50
Features["FeatureSlider_27"] = function(value)
    log("FeatureSlider_27", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_27", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_27"] = val
    Features["FeatureSlider_27"](val)
end, 50)

-- Dropdown 27
Config.Dropdown["FeatureDropdown_27"] = "Medium"
Features["FeatureDropdown_27"] = function(option)
    log("FeatureDropdown_27", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_27", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_27"] = option
    Features["FeatureDropdown_27"](option)
end, "Medium")

-- Toggle 28
Config.Toggles["FeatureToggle_28"] = false
Features["FeatureToggle_28"] = function(state)
    log("FeatureToggle_28", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_28", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_28"] = state
    Features["FeatureToggle_28"](state)
end, false)

-- Slider 28
Config.Sliders["FeatureSlider_28"] = 50
Features["FeatureSlider_28"] = function(value)
    log("FeatureSlider_28", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_28", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_28"] = val
    Features["FeatureSlider_28"](val)
end, 50)

-- Dropdown 28
Config.Dropdown["FeatureDropdown_28"] = "Medium"
Features["FeatureDropdown_28"] = function(option)
    log("FeatureDropdown_28", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_28", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_28"] = option
    Features["FeatureDropdown_28"](option)
end, "Medium")

-- Toggle 29
Config.Toggles["FeatureToggle_29"] = false
Features["FeatureToggle_29"] = function(state)
    log("FeatureToggle_29", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_29", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_29"] = state
    Features["FeatureToggle_29"](state)
end, false)

-- Slider 29
Config.Sliders["FeatureSlider_29"] = 50
Features["FeatureSlider_29"] = function(value)
    log("FeatureSlider_29", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_29", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_29"] = val
    Features["FeatureSlider_29"](val)
end, 50)

-- Dropdown 29
Config.Dropdown["FeatureDropdown_29"] = "Medium"
Features["FeatureDropdown_29"] = function(option)
    log("FeatureDropdown_29", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_29", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_29"] = option
    Features["FeatureDropdown_29"](option)
end, "Medium")

-- Toggle 30
Config.Toggles["FeatureToggle_30"] = false
Features["FeatureToggle_30"] = function(state)
    log("FeatureToggle_30", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_30", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_30"] = state
    Features["FeatureToggle_30"](state)
end, false)

-- Slider 30
Config.Sliders["FeatureSlider_30"] = 50
Features["FeatureSlider_30"] = function(value)
    log("FeatureSlider_30", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_30", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_30"] = val
    Features["FeatureSlider_30"](val)
end, 50)

-- Dropdown 30
Config.Dropdown["FeatureDropdown_30"] = "Medium"
Features["FeatureDropdown_30"] = function(option)
    log("FeatureDropdown_30", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_30", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_30"] = option
    Features["FeatureDropdown_30"](option)
end, "Medium")

-- Toggle 31
Config.Toggles["FeatureToggle_31"] = false
Features["FeatureToggle_31"] = function(state)
    log("FeatureToggle_31", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_31", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_31"] = state
    Features["FeatureToggle_31"](state)
end, false)

-- Slider 31
Config.Sliders["FeatureSlider_31"] = 50
Features["FeatureSlider_31"] = function(value)
    log("FeatureSlider_31", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_31", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_31"] = val
    Features["FeatureSlider_31"](val)
end, 50)

-- Dropdown 31
Config.Dropdown["FeatureDropdown_31"] = "Medium"
Features["FeatureDropdown_31"] = function(option)
    log("FeatureDropdown_31", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_31", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_31"] = option
    Features["FeatureDropdown_31"](option)
end, "Medium")

-- Toggle 32
Config.Toggles["FeatureToggle_32"] = false
Features["FeatureToggle_32"] = function(state)
    log("FeatureToggle_32", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_32", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_32"] = state
    Features["FeatureToggle_32"](state)
end, false)

-- Slider 32
Config.Sliders["FeatureSlider_32"] = 50
Features["FeatureSlider_32"] = function(value)
    log("FeatureSlider_32", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_32", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_32"] = val
    Features["FeatureSlider_32"](val)
end, 50)

-- Dropdown 32
Config.Dropdown["FeatureDropdown_32"] = "Medium"
Features["FeatureDropdown_32"] = function(option)
    log("FeatureDropdown_32", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_32", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_32"] = option
    Features["FeatureDropdown_32"](option)
end, "Medium")

-- Toggle 33
Config.Toggles["FeatureToggle_33"] = false
Features["FeatureToggle_33"] = function(state)
    log("FeatureToggle_33", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_33", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_33"] = state
    Features["FeatureToggle_33"](state)
end, false)

-- Slider 33
Config.Sliders["FeatureSlider_33"] = 50
Features["FeatureSlider_33"] = function(value)
    log("FeatureSlider_33", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_33", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_33"] = val
    Features["FeatureSlider_33"](val)
end, 50)

-- Dropdown 33
Config.Dropdown["FeatureDropdown_33"] = "Medium"
Features["FeatureDropdown_33"] = function(option)
    log("FeatureDropdown_33", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_33", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_33"] = option
    Features["FeatureDropdown_33"](option)
end, "Medium")

-- Toggle 34
Config.Toggles["FeatureToggle_34"] = false
Features["FeatureToggle_34"] = function(state)
    log("FeatureToggle_34", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_34", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_34"] = state
    Features["FeatureToggle_34"](state)
end, false)

-- Slider 34
Config.Sliders["FeatureSlider_34"] = 50
Features["FeatureSlider_34"] = function(value)
    log("FeatureSlider_34", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_34", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_34"] = val
    Features["FeatureSlider_34"](val)
end, 50)

-- Dropdown 34
Config.Dropdown["FeatureDropdown_34"] = "Medium"
Features["FeatureDropdown_34"] = function(option)
    log("FeatureDropdown_34", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_34", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_34"] = option
    Features["FeatureDropdown_34"](option)
end, "Medium")

-- Toggle 35
Config.Toggles["FeatureToggle_35"] = false
Features["FeatureToggle_35"] = function(state)
    log("FeatureToggle_35", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_35", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_35"] = state
    Features["FeatureToggle_35"](state)
end, false)

-- Slider 35
Config.Sliders["FeatureSlider_35"] = 50
Features["FeatureSlider_35"] = function(value)
    log("FeatureSlider_35", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_35", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_35"] = val
    Features["FeatureSlider_35"](val)
end, 50)

-- Dropdown 35
Config.Dropdown["FeatureDropdown_35"] = "Medium"
Features["FeatureDropdown_35"] = function(option)
    log("FeatureDropdown_35", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_35", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_35"] = option
    Features["FeatureDropdown_35"](option)
end, "Medium")

-- Toggle 36
Config.Toggles["FeatureToggle_36"] = false
Features["FeatureToggle_36"] = function(state)
    log("FeatureToggle_36", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_36", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_36"] = state
    Features["FeatureToggle_36"](state)
end, false)

-- Slider 36
Config.Sliders["FeatureSlider_36"] = 50
Features["FeatureSlider_36"] = function(value)
    log("FeatureSlider_36", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_36", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_36"] = val
    Features["FeatureSlider_36"](val)
end, 50)

-- Dropdown 36
Config.Dropdown["FeatureDropdown_36"] = "Medium"
Features["FeatureDropdown_36"] = function(option)
    log("FeatureDropdown_36", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_36", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_36"] = option
    Features["FeatureDropdown_36"](option)
end, "Medium")

-- Toggle 37
Config.Toggles["FeatureToggle_37"] = false
Features["FeatureToggle_37"] = function(state)
    log("FeatureToggle_37", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_37", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_37"] = state
    Features["FeatureToggle_37"](state)
end, false)

-- Slider 37
Config.Sliders["FeatureSlider_37"] = 50
Features["FeatureSlider_37"] = function(value)
    log("FeatureSlider_37", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_37", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_37"] = val
    Features["FeatureSlider_37"](val)
end, 50)

-- Dropdown 37
Config.Dropdown["FeatureDropdown_37"] = "Medium"
Features["FeatureDropdown_37"] = function(option)
    log("FeatureDropdown_37", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_37", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_37"] = option
    Features["FeatureDropdown_37"](option)
end, "Medium")

-- Toggle 38
Config.Toggles["FeatureToggle_38"] = false
Features["FeatureToggle_38"] = function(state)
    log("FeatureToggle_38", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_38", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_38"] = state
    Features["FeatureToggle_38"](state)
end, false)

-- Slider 38
Config.Sliders["FeatureSlider_38"] = 50
Features["FeatureSlider_38"] = function(value)
    log("FeatureSlider_38", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_38", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_38"] = val
    Features["FeatureSlider_38"](val)
end, 50)

-- Dropdown 38
Config.Dropdown["FeatureDropdown_38"] = "Medium"
Features["FeatureDropdown_38"] = function(option)
    log("FeatureDropdown_38", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_38", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_38"] = option
    Features["FeatureDropdown_38"](option)
end, "Medium")

-- Toggle 39
Config.Toggles["FeatureToggle_39"] = false
Features["FeatureToggle_39"] = function(state)
    log("FeatureToggle_39", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_39", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_39"] = state
    Features["FeatureToggle_39"](state)
end, false)

-- Slider 39
Config.Sliders["FeatureSlider_39"] = 50
Features["FeatureSlider_39"] = function(value)
    log("FeatureSlider_39", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_39", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_39"] = val
    Features["FeatureSlider_39"](val)
end, 50)

-- Dropdown 39
Config.Dropdown["FeatureDropdown_39"] = "Medium"
Features["FeatureDropdown_39"] = function(option)
    log("FeatureDropdown_39", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_39", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_39"] = option
    Features["FeatureDropdown_39"](option)
end, "Medium")

-- Toggle 40
Config.Toggles["FeatureToggle_40"] = false
Features["FeatureToggle_40"] = function(state)
    log("FeatureToggle_40", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_40", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_40"] = state
    Features["FeatureToggle_40"](state)
end, false)

-- Slider 40
Config.Sliders["FeatureSlider_40"] = 50
Features["FeatureSlider_40"] = function(value)
    log("FeatureSlider_40", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_40", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_40"] = val
    Features["FeatureSlider_40"](val)
end, 50)

-- Dropdown 40
Config.Dropdown["FeatureDropdown_40"] = "Medium"
Features["FeatureDropdown_40"] = function(option)
    log("FeatureDropdown_40", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_40", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_40"] = option
    Features["FeatureDropdown_40"](option)
end, "Medium")

-- Toggle 41
Config.Toggles["FeatureToggle_41"] = false
Features["FeatureToggle_41"] = function(state)
    log("FeatureToggle_41", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_41", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_41"] = state
    Features["FeatureToggle_41"](state)
end, false)

-- Slider 41
Config.Sliders["FeatureSlider_41"] = 50
Features["FeatureSlider_41"] = function(value)
    log("FeatureSlider_41", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_41", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_41"] = val
    Features["FeatureSlider_41"](val)
end, 50)

-- Dropdown 41
Config.Dropdown["FeatureDropdown_41"] = "Medium"
Features["FeatureDropdown_41"] = function(option)
    log("FeatureDropdown_41", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_41", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_41"] = option
    Features["FeatureDropdown_41"](option)
end, "Medium")

-- Toggle 42
Config.Toggles["FeatureToggle_42"] = false
Features["FeatureToggle_42"] = function(state)
    log("FeatureToggle_42", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_42", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_42"] = state
    Features["FeatureToggle_42"](state)
end, false)

-- Slider 42
Config.Sliders["FeatureSlider_42"] = 50
Features["FeatureSlider_42"] = function(value)
    log("FeatureSlider_42", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_42", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_42"] = val
    Features["FeatureSlider_42"](val)
end, 50)

-- Dropdown 42
Config.Dropdown["FeatureDropdown_42"] = "Medium"
Features["FeatureDropdown_42"] = function(option)
    log("FeatureDropdown_42", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_42", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_42"] = option
    Features["FeatureDropdown_42"](option)
end, "Medium")

-- Toggle 43
Config.Toggles["FeatureToggle_43"] = false
Features["FeatureToggle_43"] = function(state)
    log("FeatureToggle_43", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_43", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_43"] = state
    Features["FeatureToggle_43"](state)
end, false)

-- Slider 43
Config.Sliders["FeatureSlider_43"] = 50
Features["FeatureSlider_43"] = function(value)
    log("FeatureSlider_43", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_43", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_43"] = val
    Features["FeatureSlider_43"](val)
end, 50)

-- Dropdown 43
Config.Dropdown["FeatureDropdown_43"] = "Medium"
Features["FeatureDropdown_43"] = function(option)
    log("FeatureDropdown_43", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_43", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_43"] = option
    Features["FeatureDropdown_43"](option)
end, "Medium")

-- Toggle 44
Config.Toggles["FeatureToggle_44"] = false
Features["FeatureToggle_44"] = function(state)
    log("FeatureToggle_44", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_44", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_44"] = state
    Features["FeatureToggle_44"](state)
end, false)

-- Slider 44
Config.Sliders["FeatureSlider_44"] = 50
Features["FeatureSlider_44"] = function(value)
    log("FeatureSlider_44", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_44", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_44"] = val
    Features["FeatureSlider_44"](val)
end, 50)

-- Dropdown 44
Config.Dropdown["FeatureDropdown_44"] = "Medium"
Features["FeatureDropdown_44"] = function(option)
    log("FeatureDropdown_44", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_44", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_44"] = option
    Features["FeatureDropdown_44"](option)
end, "Medium")

-- Toggle 45
Config.Toggles["FeatureToggle_45"] = false
Features["FeatureToggle_45"] = function(state)
    log("FeatureToggle_45", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_45", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_45"] = state
    Features["FeatureToggle_45"](state)
end, false)

-- Slider 45
Config.Sliders["FeatureSlider_45"] = 50
Features["FeatureSlider_45"] = function(value)
    log("FeatureSlider_45", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_45", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_45"] = val
    Features["FeatureSlider_45"](val)
end, 50)

-- Dropdown 45
Config.Dropdown["FeatureDropdown_45"] = "Medium"
Features["FeatureDropdown_45"] = function(option)
    log("FeatureDropdown_45", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_45", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_45"] = option
    Features["FeatureDropdown_45"](option)
end, "Medium")

-- Toggle 46
Config.Toggles["FeatureToggle_46"] = false
Features["FeatureToggle_46"] = function(state)
    log("FeatureToggle_46", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_46", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_46"] = state
    Features["FeatureToggle_46"](state)
end, false)

-- Slider 46
Config.Sliders["FeatureSlider_46"] = 50
Features["FeatureSlider_46"] = function(value)
    log("FeatureSlider_46", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_46", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_46"] = val
    Features["FeatureSlider_46"](val)
end, 50)

-- Dropdown 46
Config.Dropdown["FeatureDropdown_46"] = "Medium"
Features["FeatureDropdown_46"] = function(option)
    log("FeatureDropdown_46", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_46", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_46"] = option
    Features["FeatureDropdown_46"](option)
end, "Medium")

-- Toggle 47
Config.Toggles["FeatureToggle_47"] = false
Features["FeatureToggle_47"] = function(state)
    log("FeatureToggle_47", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_47", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_47"] = state
    Features["FeatureToggle_47"](state)
end, false)

-- Slider 47
Config.Sliders["FeatureSlider_47"] = 50
Features["FeatureSlider_47"] = function(value)
    log("FeatureSlider_47", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_47", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_47"] = val
    Features["FeatureSlider_47"](val)
end, 50)

-- Dropdown 47
Config.Dropdown["FeatureDropdown_47"] = "Medium"
Features["FeatureDropdown_47"] = function(option)
    log("FeatureDropdown_47", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_47", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_47"] = option
    Features["FeatureDropdown_47"](option)
end, "Medium")

-- Toggle 48
Config.Toggles["FeatureToggle_48"] = false
Features["FeatureToggle_48"] = function(state)
    log("FeatureToggle_48", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_48", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_48"] = state
    Features["FeatureToggle_48"](state)
end, false)

-- Slider 48
Config.Sliders["FeatureSlider_48"] = 50
Features["FeatureSlider_48"] = function(value)
    log("FeatureSlider_48", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_48", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_48"] = val
    Features["FeatureSlider_48"](val)
end, 50)

-- Dropdown 48
Config.Dropdown["FeatureDropdown_48"] = "Medium"
Features["FeatureDropdown_48"] = function(option)
    log("FeatureDropdown_48", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_48", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_48"] = option
    Features["FeatureDropdown_48"](option)
end, "Medium")

-- Toggle 49
Config.Toggles["FeatureToggle_49"] = false
Features["FeatureToggle_49"] = function(state)
    log("FeatureToggle_49", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_49", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_49"] = state
    Features["FeatureToggle_49"](state)
end, false)

-- Slider 49
Config.Sliders["FeatureSlider_49"] = 50
Features["FeatureSlider_49"] = function(value)
    log("FeatureSlider_49", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_49", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_49"] = val
    Features["FeatureSlider_49"](val)
end, 50)

-- Dropdown 49
Config.Dropdown["FeatureDropdown_49"] = "Medium"
Features["FeatureDropdown_49"] = function(option)
    log("FeatureDropdown_49", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_49", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_49"] = option
    Features["FeatureDropdown_49"](option)
end, "Medium")

-- Toggle 50
Config.Toggles["FeatureToggle_50"] = false
Features["FeatureToggle_50"] = function(state)
    log("FeatureToggle_50", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_50", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_50"] = state
    Features["FeatureToggle_50"](state)
end, false)

-- Slider 50
Config.Sliders["FeatureSlider_50"] = 50
Features["FeatureSlider_50"] = function(value)
    log("FeatureSlider_50", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_50", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_50"] = val
    Features["FeatureSlider_50"](val)
end, 50)

-- Dropdown 50
Config.Dropdown["FeatureDropdown_50"] = "Medium"
Features["FeatureDropdown_50"] = function(option)
    log("FeatureDropdown_50", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_50", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_50"] = option
    Features["FeatureDropdown_50"](option)
end, "Medium")

-- Toggle 51
Config.Toggles["FeatureToggle_51"] = false
Features["FeatureToggle_51"] = function(state)
    log("FeatureToggle_51", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_51", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_51"] = state
    Features["FeatureToggle_51"](state)
end, false)

-- Slider 51
Config.Sliders["FeatureSlider_51"] = 50
Features["FeatureSlider_51"] = function(value)
    log("FeatureSlider_51", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_51", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_51"] = val
    Features["FeatureSlider_51"](val)
end, 50)

-- Dropdown 51
Config.Dropdown["FeatureDropdown_51"] = "Medium"
Features["FeatureDropdown_51"] = function(option)
    log("FeatureDropdown_51", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_51", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_51"] = option
    Features["FeatureDropdown_51"](option)
end, "Medium")

-- Toggle 52
Config.Toggles["FeatureToggle_52"] = false
Features["FeatureToggle_52"] = function(state)
    log("FeatureToggle_52", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_52", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_52"] = state
    Features["FeatureToggle_52"](state)
end, false)

-- Slider 52
Config.Sliders["FeatureSlider_52"] = 50
Features["FeatureSlider_52"] = function(value)
    log("FeatureSlider_52", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_52", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_52"] = val
    Features["FeatureSlider_52"](val)
end, 50)

-- Dropdown 52
Config.Dropdown["FeatureDropdown_52"] = "Medium"
Features["FeatureDropdown_52"] = function(option)
    log("FeatureDropdown_52", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_52", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_52"] = option
    Features["FeatureDropdown_52"](option)
end, "Medium")

-- Toggle 53
Config.Toggles["FeatureToggle_53"] = false
Features["FeatureToggle_53"] = function(state)
    log("FeatureToggle_53", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_53", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_53"] = state
    Features["FeatureToggle_53"](state)
end, false)

-- Slider 53
Config.Sliders["FeatureSlider_53"] = 50
Features["FeatureSlider_53"] = function(value)
    log("FeatureSlider_53", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_53", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_53"] = val
    Features["FeatureSlider_53"](val)
end, 50)

-- Dropdown 53
Config.Dropdown["FeatureDropdown_53"] = "Medium"
Features["FeatureDropdown_53"] = function(option)
    log("FeatureDropdown_53", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_53", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_53"] = option
    Features["FeatureDropdown_53"](option)
end, "Medium")

-- Toggle 54
Config.Toggles["FeatureToggle_54"] = false
Features["FeatureToggle_54"] = function(state)
    log("FeatureToggle_54", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_54", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_54"] = state
    Features["FeatureToggle_54"](state)
end, false)

-- Slider 54
Config.Sliders["FeatureSlider_54"] = 50
Features["FeatureSlider_54"] = function(value)
    log("FeatureSlider_54", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_54", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_54"] = val
    Features["FeatureSlider_54"](val)
end, 50)

-- Dropdown 54
Config.Dropdown["FeatureDropdown_54"] = "Medium"
Features["FeatureDropdown_54"] = function(option)
    log("FeatureDropdown_54", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_54", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_54"] = option
    Features["FeatureDropdown_54"](option)
end, "Medium")

-- Toggle 55
Config.Toggles["FeatureToggle_55"] = false
Features["FeatureToggle_55"] = function(state)
    log("FeatureToggle_55", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_55", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_55"] = state
    Features["FeatureToggle_55"](state)
end, false)

-- Slider 55
Config.Sliders["FeatureSlider_55"] = 50
Features["FeatureSlider_55"] = function(value)
    log("FeatureSlider_55", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_55", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_55"] = val
    Features["FeatureSlider_55"](val)
end, 50)

-- Dropdown 55
Config.Dropdown["FeatureDropdown_55"] = "Medium"
Features["FeatureDropdown_55"] = function(option)
    log("FeatureDropdown_55", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_55", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_55"] = option
    Features["FeatureDropdown_55"](option)
end, "Medium")

-- Toggle 56
Config.Toggles["FeatureToggle_56"] = false
Features["FeatureToggle_56"] = function(state)
    log("FeatureToggle_56", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_56", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_56"] = state
    Features["FeatureToggle_56"](state)
end, false)

-- Slider 56
Config.Sliders["FeatureSlider_56"] = 50
Features["FeatureSlider_56"] = function(value)
    log("FeatureSlider_56", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_56", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_56"] = val
    Features["FeatureSlider_56"](val)
end, 50)

-- Dropdown 56
Config.Dropdown["FeatureDropdown_56"] = "Medium"
Features["FeatureDropdown_56"] = function(option)
    log("FeatureDropdown_56", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_56", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_56"] = option
    Features["FeatureDropdown_56"](option)
end, "Medium")

-- Toggle 57
Config.Toggles["FeatureToggle_57"] = false
Features["FeatureToggle_57"] = function(state)
    log("FeatureToggle_57", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_57", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_57"] = state
    Features["FeatureToggle_57"](state)
end, false)

-- Slider 57
Config.Sliders["FeatureSlider_57"] = 50
Features["FeatureSlider_57"] = function(value)
    log("FeatureSlider_57", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_57", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_57"] = val
    Features["FeatureSlider_57"](val)
end, 50)

-- Dropdown 57
Config.Dropdown["FeatureDropdown_57"] = "Medium"
Features["FeatureDropdown_57"] = function(option)
    log("FeatureDropdown_57", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_57", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_57"] = option
    Features["FeatureDropdown_57"](option)
end, "Medium")

-- Toggle 58
Config.Toggles["FeatureToggle_58"] = false
Features["FeatureToggle_58"] = function(state)
    log("FeatureToggle_58", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_58", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_58"] = state
    Features["FeatureToggle_58"](state)
end, false)

-- Slider 58
Config.Sliders["FeatureSlider_58"] = 50
Features["FeatureSlider_58"] = function(value)
    log("FeatureSlider_58", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_58", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_58"] = val
    Features["FeatureSlider_58"](val)
end, 50)

-- Dropdown 58
Config.Dropdown["FeatureDropdown_58"] = "Medium"
Features["FeatureDropdown_58"] = function(option)
    log("FeatureDropdown_58", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_58", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_58"] = option
    Features["FeatureDropdown_58"](option)
end, "Medium")

-- Toggle 59
Config.Toggles["FeatureToggle_59"] = false
Features["FeatureToggle_59"] = function(state)
    log("FeatureToggle_59", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_59", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_59"] = state
    Features["FeatureToggle_59"](state)
end, false)

-- Slider 59
Config.Sliders["FeatureSlider_59"] = 50
Features["FeatureSlider_59"] = function(value)
    log("FeatureSlider_59", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_59", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_59"] = val
    Features["FeatureSlider_59"](val)
end, 50)

-- Dropdown 59
Config.Dropdown["FeatureDropdown_59"] = "Medium"
Features["FeatureDropdown_59"] = function(option)
    log("FeatureDropdown_59", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_59", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_59"] = option
    Features["FeatureDropdown_59"](option)
end, "Medium")

-- Toggle 60
Config.Toggles["FeatureToggle_60"] = false
Features["FeatureToggle_60"] = function(state)
    log("FeatureToggle_60", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_60", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_60"] = state
    Features["FeatureToggle_60"](state)
end, false)

-- Slider 60
Config.Sliders["FeatureSlider_60"] = 50
Features["FeatureSlider_60"] = function(value)
    log("FeatureSlider_60", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_60", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_60"] = val
    Features["FeatureSlider_60"](val)
end, 50)

-- Dropdown 60
Config.Dropdown["FeatureDropdown_60"] = "Medium"
Features["FeatureDropdown_60"] = function(option)
    log("FeatureDropdown_60", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_60", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_60"] = option
    Features["FeatureDropdown_60"](option)
end, "Medium")

-- Toggle 61
Config.Toggles["FeatureToggle_61"] = false
Features["FeatureToggle_61"] = function(state)
    log("FeatureToggle_61", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_61", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_61"] = state
    Features["FeatureToggle_61"](state)
end, false)

-- Slider 61
Config.Sliders["FeatureSlider_61"] = 50
Features["FeatureSlider_61"] = function(value)
    log("FeatureSlider_61", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_61", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_61"] = val
    Features["FeatureSlider_61"](val)
end, 50)

-- Dropdown 61
Config.Dropdown["FeatureDropdown_61"] = "Medium"
Features["FeatureDropdown_61"] = function(option)
    log("FeatureDropdown_61", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_61", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_61"] = option
    Features["FeatureDropdown_61"](option)
end, "Medium")

-- Toggle 62
Config.Toggles["FeatureToggle_62"] = false
Features["FeatureToggle_62"] = function(state)
    log("FeatureToggle_62", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_62", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_62"] = state
    Features["FeatureToggle_62"](state)
end, false)

-- Slider 62
Config.Sliders["FeatureSlider_62"] = 50
Features["FeatureSlider_62"] = function(value)
    log("FeatureSlider_62", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_62", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_62"] = val
    Features["FeatureSlider_62"](val)
end, 50)

-- Dropdown 62
Config.Dropdown["FeatureDropdown_62"] = "Medium"
Features["FeatureDropdown_62"] = function(option)
    log("FeatureDropdown_62", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_62", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_62"] = option
    Features["FeatureDropdown_62"](option)
end, "Medium")

-- Toggle 63
Config.Toggles["FeatureToggle_63"] = false
Features["FeatureToggle_63"] = function(state)
    log("FeatureToggle_63", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_63", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_63"] = state
    Features["FeatureToggle_63"](state)
end, false)

-- Slider 63
Config.Sliders["FeatureSlider_63"] = 50
Features["FeatureSlider_63"] = function(value)
    log("FeatureSlider_63", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_63", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_63"] = val
    Features["FeatureSlider_63"](val)
end, 50)

-- Dropdown 63
Config.Dropdown["FeatureDropdown_63"] = "Medium"
Features["FeatureDropdown_63"] = function(option)
    log("FeatureDropdown_63", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_63", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_63"] = option
    Features["FeatureDropdown_63"](option)
end, "Medium")

-- Toggle 64
Config.Toggles["FeatureToggle_64"] = false
Features["FeatureToggle_64"] = function(state)
    log("FeatureToggle_64", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_64", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_64"] = state
    Features["FeatureToggle_64"](state)
end, false)

-- Slider 64
Config.Sliders["FeatureSlider_64"] = 50
Features["FeatureSlider_64"] = function(value)
    log("FeatureSlider_64", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_64", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_64"] = val
    Features["FeatureSlider_64"](val)
end, 50)

-- Dropdown 64
Config.Dropdown["FeatureDropdown_64"] = "Medium"
Features["FeatureDropdown_64"] = function(option)
    log("FeatureDropdown_64", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_64", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_64"] = option
    Features["FeatureDropdown_64"](option)
end, "Medium")

-- Toggle 65
Config.Toggles["FeatureToggle_65"] = false
Features["FeatureToggle_65"] = function(state)
    log("FeatureToggle_65", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_65", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_65"] = state
    Features["FeatureToggle_65"](state)
end, false)

-- Slider 65
Config.Sliders["FeatureSlider_65"] = 50
Features["FeatureSlider_65"] = function(value)
    log("FeatureSlider_65", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_65", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_65"] = val
    Features["FeatureSlider_65"](val)
end, 50)

-- Dropdown 65
Config.Dropdown["FeatureDropdown_65"] = "Medium"
Features["FeatureDropdown_65"] = function(option)
    log("FeatureDropdown_65", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_65", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_65"] = option
    Features["FeatureDropdown_65"](option)
end, "Medium")

-- Toggle 66
Config.Toggles["FeatureToggle_66"] = false
Features["FeatureToggle_66"] = function(state)
    log("FeatureToggle_66", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_66", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_66"] = state
    Features["FeatureToggle_66"](state)
end, false)

-- Slider 66
Config.Sliders["FeatureSlider_66"] = 50
Features["FeatureSlider_66"] = function(value)
    log("FeatureSlider_66", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_66", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_66"] = val
    Features["FeatureSlider_66"](val)
end, 50)

-- Dropdown 66
Config.Dropdown["FeatureDropdown_66"] = "Medium"
Features["FeatureDropdown_66"] = function(option)
    log("FeatureDropdown_66", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_66", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_66"] = option
    Features["FeatureDropdown_66"](option)
end, "Medium")

-- Toggle 67
Config.Toggles["FeatureToggle_67"] = false
Features["FeatureToggle_67"] = function(state)
    log("FeatureToggle_67", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_67", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_67"] = state
    Features["FeatureToggle_67"](state)
end, false)

-- Slider 67
Config.Sliders["FeatureSlider_67"] = 50
Features["FeatureSlider_67"] = function(value)
    log("FeatureSlider_67", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_67", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_67"] = val
    Features["FeatureSlider_67"](val)
end, 50)

-- Dropdown 67
Config.Dropdown["FeatureDropdown_67"] = "Medium"
Features["FeatureDropdown_67"] = function(option)
    log("FeatureDropdown_67", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_67", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_67"] = option
    Features["FeatureDropdown_67"](option)
end, "Medium")

-- Toggle 68
Config.Toggles["FeatureToggle_68"] = false
Features["FeatureToggle_68"] = function(state)
    log("FeatureToggle_68", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_68", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_68"] = state
    Features["FeatureToggle_68"](state)
end, false)

-- Slider 68
Config.Sliders["FeatureSlider_68"] = 50
Features["FeatureSlider_68"] = function(value)
    log("FeatureSlider_68", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_68", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_68"] = val
    Features["FeatureSlider_68"](val)
end, 50)

-- Dropdown 68
Config.Dropdown["FeatureDropdown_68"] = "Medium"
Features["FeatureDropdown_68"] = function(option)
    log("FeatureDropdown_68", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_68", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_68"] = option
    Features["FeatureDropdown_68"](option)
end, "Medium")

-- Toggle 69
Config.Toggles["FeatureToggle_69"] = false
Features["FeatureToggle_69"] = function(state)
    log("FeatureToggle_69", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_69", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_69"] = state
    Features["FeatureToggle_69"](state)
end, false)

-- Slider 69
Config.Sliders["FeatureSlider_69"] = 50
Features["FeatureSlider_69"] = function(value)
    log("FeatureSlider_69", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_69", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_69"] = val
    Features["FeatureSlider_69"](val)
end, 50)

-- Dropdown 69
Config.Dropdown["FeatureDropdown_69"] = "Medium"
Features["FeatureDropdown_69"] = function(option)
    log("FeatureDropdown_69", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_69", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_69"] = option
    Features["FeatureDropdown_69"](option)
end, "Medium")

-- Toggle 70
Config.Toggles["FeatureToggle_70"] = false
Features["FeatureToggle_70"] = function(state)
    log("FeatureToggle_70", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_70", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_70"] = state
    Features["FeatureToggle_70"](state)
end, false)

-- Slider 70
Config.Sliders["FeatureSlider_70"] = 50
Features["FeatureSlider_70"] = function(value)
    log("FeatureSlider_70", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_70", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_70"] = val
    Features["FeatureSlider_70"](val)
end, 50)

-- Dropdown 70
Config.Dropdown["FeatureDropdown_70"] = "Medium"
Features["FeatureDropdown_70"] = function(option)
    log("FeatureDropdown_70", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_70", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_70"] = option
    Features["FeatureDropdown_70"](option)
end, "Medium")

-- Toggle 71
Config.Toggles["FeatureToggle_71"] = false
Features["FeatureToggle_71"] = function(state)
    log("FeatureToggle_71", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_71", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_71"] = state
    Features["FeatureToggle_71"](state)
end, false)

-- Slider 71
Config.Sliders["FeatureSlider_71"] = 50
Features["FeatureSlider_71"] = function(value)
    log("FeatureSlider_71", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_71", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_71"] = val
    Features["FeatureSlider_71"](val)
end, 50)

-- Dropdown 71
Config.Dropdown["FeatureDropdown_71"] = "Medium"
Features["FeatureDropdown_71"] = function(option)
    log("FeatureDropdown_71", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_71", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_71"] = option
    Features["FeatureDropdown_71"](option)
end, "Medium")

-- Toggle 72
Config.Toggles["FeatureToggle_72"] = false
Features["FeatureToggle_72"] = function(state)
    log("FeatureToggle_72", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_72", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_72"] = state
    Features["FeatureToggle_72"](state)
end, false)

-- Slider 72
Config.Sliders["FeatureSlider_72"] = 50
Features["FeatureSlider_72"] = function(value)
    log("FeatureSlider_72", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_72", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_72"] = val
    Features["FeatureSlider_72"](val)
end, 50)

-- Dropdown 72
Config.Dropdown["FeatureDropdown_72"] = "Medium"
Features["FeatureDropdown_72"] = function(option)
    log("FeatureDropdown_72", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_72", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_72"] = option
    Features["FeatureDropdown_72"](option)
end, "Medium")

-- Toggle 73
Config.Toggles["FeatureToggle_73"] = false
Features["FeatureToggle_73"] = function(state)
    log("FeatureToggle_73", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_73", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_73"] = state
    Features["FeatureToggle_73"](state)
end, false)

-- Slider 73
Config.Sliders["FeatureSlider_73"] = 50
Features["FeatureSlider_73"] = function(value)
    log("FeatureSlider_73", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_73", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_73"] = val
    Features["FeatureSlider_73"](val)
end, 50)

-- Dropdown 73
Config.Dropdown["FeatureDropdown_73"] = "Medium"
Features["FeatureDropdown_73"] = function(option)
    log("FeatureDropdown_73", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_73", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_73"] = option
    Features["FeatureDropdown_73"](option)
end, "Medium")

-- Toggle 74
Config.Toggles["FeatureToggle_74"] = false
Features["FeatureToggle_74"] = function(state)
    log("FeatureToggle_74", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_74", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_74"] = state
    Features["FeatureToggle_74"](state)
end, false)

-- Slider 74
Config.Sliders["FeatureSlider_74"] = 50
Features["FeatureSlider_74"] = function(value)
    log("FeatureSlider_74", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_74", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_74"] = val
    Features["FeatureSlider_74"](val)
end, 50)

-- Dropdown 74
Config.Dropdown["FeatureDropdown_74"] = "Medium"
Features["FeatureDropdown_74"] = function(option)
    log("FeatureDropdown_74", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_74", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_74"] = option
    Features["FeatureDropdown_74"](option)
end, "Medium")

-- Toggle 75
Config.Toggles["FeatureToggle_75"] = false
Features["FeatureToggle_75"] = function(state)
    log("FeatureToggle_75", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_75", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_75"] = state
    Features["FeatureToggle_75"](state)
end, false)

-- Slider 75
Config.Sliders["FeatureSlider_75"] = 50
Features["FeatureSlider_75"] = function(value)
    log("FeatureSlider_75", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_75", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_75"] = val
    Features["FeatureSlider_75"](val)
end, 50)

-- Dropdown 75
Config.Dropdown["FeatureDropdown_75"] = "Medium"
Features["FeatureDropdown_75"] = function(option)
    log("FeatureDropdown_75", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_75", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_75"] = option
    Features["FeatureDropdown_75"](option)
end, "Medium")

-- Toggle 76
Config.Toggles["FeatureToggle_76"] = false
Features["FeatureToggle_76"] = function(state)
    log("FeatureToggle_76", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_76", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_76"] = state
    Features["FeatureToggle_76"](state)
end, false)

-- Slider 76
Config.Sliders["FeatureSlider_76"] = 50
Features["FeatureSlider_76"] = function(value)
    log("FeatureSlider_76", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_76", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_76"] = val
    Features["FeatureSlider_76"](val)
end, 50)

-- Dropdown 76
Config.Dropdown["FeatureDropdown_76"] = "Medium"
Features["FeatureDropdown_76"] = function(option)
    log("FeatureDropdown_76", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_76", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_76"] = option
    Features["FeatureDropdown_76"](option)
end, "Medium")

-- Toggle 77
Config.Toggles["FeatureToggle_77"] = false
Features["FeatureToggle_77"] = function(state)
    log("FeatureToggle_77", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_77", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_77"] = state
    Features["FeatureToggle_77"](state)
end, false)

-- Slider 77
Config.Sliders["FeatureSlider_77"] = 50
Features["FeatureSlider_77"] = function(value)
    log("FeatureSlider_77", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_77", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_77"] = val
    Features["FeatureSlider_77"](val)
end, 50)

-- Dropdown 77
Config.Dropdown["FeatureDropdown_77"] = "Medium"
Features["FeatureDropdown_77"] = function(option)
    log("FeatureDropdown_77", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_77", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_77"] = option
    Features["FeatureDropdown_77"](option)
end, "Medium")

-- Toggle 78
Config.Toggles["FeatureToggle_78"] = false
Features["FeatureToggle_78"] = function(state)
    log("FeatureToggle_78", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_78", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_78"] = state
    Features["FeatureToggle_78"](state)
end, false)

-- Slider 78
Config.Sliders["FeatureSlider_78"] = 50
Features["FeatureSlider_78"] = function(value)
    log("FeatureSlider_78", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_78", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_78"] = val
    Features["FeatureSlider_78"](val)
end, 50)

-- Dropdown 78
Config.Dropdown["FeatureDropdown_78"] = "Medium"
Features["FeatureDropdown_78"] = function(option)
    log("FeatureDropdown_78", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_78", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_78"] = option
    Features["FeatureDropdown_78"](option)
end, "Medium")

-- Toggle 79
Config.Toggles["FeatureToggle_79"] = false
Features["FeatureToggle_79"] = function(state)
    log("FeatureToggle_79", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_79", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_79"] = state
    Features["FeatureToggle_79"](state)
end, false)

-- Slider 79
Config.Sliders["FeatureSlider_79"] = 50
Features["FeatureSlider_79"] = function(value)
    log("FeatureSlider_79", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_79", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_79"] = val
    Features["FeatureSlider_79"](val)
end, 50)

-- Dropdown 79
Config.Dropdown["FeatureDropdown_79"] = "Medium"
Features["FeatureDropdown_79"] = function(option)
    log("FeatureDropdown_79", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_79", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_79"] = option
    Features["FeatureDropdown_79"](option)
end, "Medium")

-- Toggle 80
Config.Toggles["FeatureToggle_80"] = false
Features["FeatureToggle_80"] = function(state)
    log("FeatureToggle_80", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_80", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_80"] = state
    Features["FeatureToggle_80"](state)
end, false)

-- Slider 80
Config.Sliders["FeatureSlider_80"] = 50
Features["FeatureSlider_80"] = function(value)
    log("FeatureSlider_80", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_80", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_80"] = val
    Features["FeatureSlider_80"](val)
end, 50)

-- Dropdown 80
Config.Dropdown["FeatureDropdown_80"] = "Medium"
Features["FeatureDropdown_80"] = function(option)
    log("FeatureDropdown_80", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_80", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_80"] = option
    Features["FeatureDropdown_80"](option)
end, "Medium")

-- Toggle 81
Config.Toggles["FeatureToggle_81"] = false
Features["FeatureToggle_81"] = function(state)
    log("FeatureToggle_81", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_81", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_81"] = state
    Features["FeatureToggle_81"](state)
end, false)

-- Slider 81
Config.Sliders["FeatureSlider_81"] = 50
Features["FeatureSlider_81"] = function(value)
    log("FeatureSlider_81", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_81", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_81"] = val
    Features["FeatureSlider_81"](val)
end, 50)

-- Dropdown 81
Config.Dropdown["FeatureDropdown_81"] = "Medium"
Features["FeatureDropdown_81"] = function(option)
    log("FeatureDropdown_81", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_81", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_81"] = option
    Features["FeatureDropdown_81"](option)
end, "Medium")

-- Toggle 82
Config.Toggles["FeatureToggle_82"] = false
Features["FeatureToggle_82"] = function(state)
    log("FeatureToggle_82", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_82", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_82"] = state
    Features["FeatureToggle_82"](state)
end, false)

-- Slider 82
Config.Sliders["FeatureSlider_82"] = 50
Features["FeatureSlider_82"] = function(value)
    log("FeatureSlider_82", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_82", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_82"] = val
    Features["FeatureSlider_82"](val)
end, 50)

-- Dropdown 82
Config.Dropdown["FeatureDropdown_82"] = "Medium"
Features["FeatureDropdown_82"] = function(option)
    log("FeatureDropdown_82", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_82", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_82"] = option
    Features["FeatureDropdown_82"](option)
end, "Medium")

-- Toggle 83
Config.Toggles["FeatureToggle_83"] = false
Features["FeatureToggle_83"] = function(state)
    log("FeatureToggle_83", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_83", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_83"] = state
    Features["FeatureToggle_83"](state)
end, false)

-- Slider 83
Config.Sliders["FeatureSlider_83"] = 50
Features["FeatureSlider_83"] = function(value)
    log("FeatureSlider_83", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_83", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_83"] = val
    Features["FeatureSlider_83"](val)
end, 50)

-- Dropdown 83
Config.Dropdown["FeatureDropdown_83"] = "Medium"
Features["FeatureDropdown_83"] = function(option)
    log("FeatureDropdown_83", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_83", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_83"] = option
    Features["FeatureDropdown_83"](option)
end, "Medium")

-- Toggle 84
Config.Toggles["FeatureToggle_84"] = false
Features["FeatureToggle_84"] = function(state)
    log("FeatureToggle_84", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_84", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_84"] = state
    Features["FeatureToggle_84"](state)
end, false)

-- Slider 84
Config.Sliders["FeatureSlider_84"] = 50
Features["FeatureSlider_84"] = function(value)
    log("FeatureSlider_84", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_84", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_84"] = val
    Features["FeatureSlider_84"](val)
end, 50)

-- Dropdown 84
Config.Dropdown["FeatureDropdown_84"] = "Medium"
Features["FeatureDropdown_84"] = function(option)
    log("FeatureDropdown_84", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_84", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_84"] = option
    Features["FeatureDropdown_84"](option)
end, "Medium")

-- Toggle 85
Config.Toggles["FeatureToggle_85"] = false
Features["FeatureToggle_85"] = function(state)
    log("FeatureToggle_85", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_85", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_85"] = state
    Features["FeatureToggle_85"](state)
end, false)

-- Slider 85
Config.Sliders["FeatureSlider_85"] = 50
Features["FeatureSlider_85"] = function(value)
    log("FeatureSlider_85", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_85", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_85"] = val
    Features["FeatureSlider_85"](val)
end, 50)

-- Dropdown 85
Config.Dropdown["FeatureDropdown_85"] = "Medium"
Features["FeatureDropdown_85"] = function(option)
    log("FeatureDropdown_85", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_85", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_85"] = option
    Features["FeatureDropdown_85"](option)
end, "Medium")

-- Toggle 86
Config.Toggles["FeatureToggle_86"] = false
Features["FeatureToggle_86"] = function(state)
    log("FeatureToggle_86", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_86", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_86"] = state
    Features["FeatureToggle_86"](state)
end, false)

-- Slider 86
Config.Sliders["FeatureSlider_86"] = 50
Features["FeatureSlider_86"] = function(value)
    log("FeatureSlider_86", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_86", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_86"] = val
    Features["FeatureSlider_86"](val)
end, 50)

-- Dropdown 86
Config.Dropdown["FeatureDropdown_86"] = "Medium"
Features["FeatureDropdown_86"] = function(option)
    log("FeatureDropdown_86", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_86", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_86"] = option
    Features["FeatureDropdown_86"](option)
end, "Medium")

-- Toggle 87
Config.Toggles["FeatureToggle_87"] = false
Features["FeatureToggle_87"] = function(state)
    log("FeatureToggle_87", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_87", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_87"] = state
    Features["FeatureToggle_87"](state)
end, false)

-- Slider 87
Config.Sliders["FeatureSlider_87"] = 50
Features["FeatureSlider_87"] = function(value)
    log("FeatureSlider_87", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_87", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_87"] = val
    Features["FeatureSlider_87"](val)
end, 50)

-- Dropdown 87
Config.Dropdown["FeatureDropdown_87"] = "Medium"
Features["FeatureDropdown_87"] = function(option)
    log("FeatureDropdown_87", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_87", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_87"] = option
    Features["FeatureDropdown_87"](option)
end, "Medium")

-- Toggle 88
Config.Toggles["FeatureToggle_88"] = false
Features["FeatureToggle_88"] = function(state)
    log("FeatureToggle_88", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_88", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_88"] = state
    Features["FeatureToggle_88"](state)
end, false)

-- Slider 88
Config.Sliders["FeatureSlider_88"] = 50
Features["FeatureSlider_88"] = function(value)
    log("FeatureSlider_88", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_88", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_88"] = val
    Features["FeatureSlider_88"](val)
end, 50)

-- Dropdown 88
Config.Dropdown["FeatureDropdown_88"] = "Medium"
Features["FeatureDropdown_88"] = function(option)
    log("FeatureDropdown_88", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_88", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_88"] = option
    Features["FeatureDropdown_88"](option)
end, "Medium")

-- Toggle 89
Config.Toggles["FeatureToggle_89"] = false
Features["FeatureToggle_89"] = function(state)
    log("FeatureToggle_89", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_89", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_89"] = state
    Features["FeatureToggle_89"](state)
end, false)

-- Slider 89
Config.Sliders["FeatureSlider_89"] = 50
Features["FeatureSlider_89"] = function(value)
    log("FeatureSlider_89", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_89", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_89"] = val
    Features["FeatureSlider_89"](val)
end, 50)

-- Dropdown 89
Config.Dropdown["FeatureDropdown_89"] = "Medium"
Features["FeatureDropdown_89"] = function(option)
    log("FeatureDropdown_89", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_89", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_89"] = option
    Features["FeatureDropdown_89"](option)
end, "Medium")

-- Toggle 90
Config.Toggles["FeatureToggle_90"] = false
Features["FeatureToggle_90"] = function(state)
    log("FeatureToggle_90", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_90", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_90"] = state
    Features["FeatureToggle_90"](state)
end, false)

-- Slider 90
Config.Sliders["FeatureSlider_90"] = 50
Features["FeatureSlider_90"] = function(value)
    log("FeatureSlider_90", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_90", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_90"] = val
    Features["FeatureSlider_90"](val)
end, 50)

-- Dropdown 90
Config.Dropdown["FeatureDropdown_90"] = "Medium"
Features["FeatureDropdown_90"] = function(option)
    log("FeatureDropdown_90", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_90", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_90"] = option
    Features["FeatureDropdown_90"](option)
end, "Medium")

-- Toggle 91
Config.Toggles["FeatureToggle_91"] = false
Features["FeatureToggle_91"] = function(state)
    log("FeatureToggle_91", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_91", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_91"] = state
    Features["FeatureToggle_91"](state)
end, false)

-- Slider 91
Config.Sliders["FeatureSlider_91"] = 50
Features["FeatureSlider_91"] = function(value)
    log("FeatureSlider_91", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_91", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_91"] = val
    Features["FeatureSlider_91"](val)
end, 50)

-- Dropdown 91
Config.Dropdown["FeatureDropdown_91"] = "Medium"
Features["FeatureDropdown_91"] = function(option)
    log("FeatureDropdown_91", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_91", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_91"] = option
    Features["FeatureDropdown_91"](option)
end, "Medium")

-- Toggle 92
Config.Toggles["FeatureToggle_92"] = false
Features["FeatureToggle_92"] = function(state)
    log("FeatureToggle_92", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_92", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_92"] = state
    Features["FeatureToggle_92"](state)
end, false)

-- Slider 92
Config.Sliders["FeatureSlider_92"] = 50
Features["FeatureSlider_92"] = function(value)
    log("FeatureSlider_92", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_92", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_92"] = val
    Features["FeatureSlider_92"](val)
end, 50)

-- Dropdown 92
Config.Dropdown["FeatureDropdown_92"] = "Medium"
Features["FeatureDropdown_92"] = function(option)
    log("FeatureDropdown_92", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_92", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_92"] = option
    Features["FeatureDropdown_92"](option)
end, "Medium")

-- Toggle 93
Config.Toggles["FeatureToggle_93"] = false
Features["FeatureToggle_93"] = function(state)
    log("FeatureToggle_93", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_93", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_93"] = state
    Features["FeatureToggle_93"](state)
end, false)

-- Slider 93
Config.Sliders["FeatureSlider_93"] = 50
Features["FeatureSlider_93"] = function(value)
    log("FeatureSlider_93", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_93", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_93"] = val
    Features["FeatureSlider_93"](val)
end, 50)

-- Dropdown 93
Config.Dropdown["FeatureDropdown_93"] = "Medium"
Features["FeatureDropdown_93"] = function(option)
    log("FeatureDropdown_93", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_93", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_93"] = option
    Features["FeatureDropdown_93"](option)
end, "Medium")

-- Toggle 94
Config.Toggles["FeatureToggle_94"] = false
Features["FeatureToggle_94"] = function(state)
    log("FeatureToggle_94", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_94", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_94"] = state
    Features["FeatureToggle_94"](state)
end, false)

-- Slider 94
Config.Sliders["FeatureSlider_94"] = 50
Features["FeatureSlider_94"] = function(value)
    log("FeatureSlider_94", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_94", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_94"] = val
    Features["FeatureSlider_94"](val)
end, 50)

-- Dropdown 94
Config.Dropdown["FeatureDropdown_94"] = "Medium"
Features["FeatureDropdown_94"] = function(option)
    log("FeatureDropdown_94", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_94", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_94"] = option
    Features["FeatureDropdown_94"](option)
end, "Medium")

-- Toggle 95
Config.Toggles["FeatureToggle_95"] = false
Features["FeatureToggle_95"] = function(state)
    log("FeatureToggle_95", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_95", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_95"] = state
    Features["FeatureToggle_95"](state)
end, false)

-- Slider 95
Config.Sliders["FeatureSlider_95"] = 50
Features["FeatureSlider_95"] = function(value)
    log("FeatureSlider_95", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_95", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_95"] = val
    Features["FeatureSlider_95"](val)
end, 50)

-- Dropdown 95
Config.Dropdown["FeatureDropdown_95"] = "Medium"
Features["FeatureDropdown_95"] = function(option)
    log("FeatureDropdown_95", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_95", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_95"] = option
    Features["FeatureDropdown_95"](option)
end, "Medium")

-- Toggle 96
Config.Toggles["FeatureToggle_96"] = false
Features["FeatureToggle_96"] = function(state)
    log("FeatureToggle_96", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_96", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_96"] = state
    Features["FeatureToggle_96"](state)
end, false)

-- Slider 96
Config.Sliders["FeatureSlider_96"] = 50
Features["FeatureSlider_96"] = function(value)
    log("FeatureSlider_96", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_96", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_96"] = val
    Features["FeatureSlider_96"](val)
end, 50)

-- Dropdown 96
Config.Dropdown["FeatureDropdown_96"] = "Medium"
Features["FeatureDropdown_96"] = function(option)
    log("FeatureDropdown_96", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_96", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_96"] = option
    Features["FeatureDropdown_96"](option)
end, "Medium")

-- Toggle 97
Config.Toggles["FeatureToggle_97"] = false
Features["FeatureToggle_97"] = function(state)
    log("FeatureToggle_97", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_97", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_97"] = state
    Features["FeatureToggle_97"](state)
end, false)

-- Slider 97
Config.Sliders["FeatureSlider_97"] = 50
Features["FeatureSlider_97"] = function(value)
    log("FeatureSlider_97", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_97", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_97"] = val
    Features["FeatureSlider_97"](val)
end, 50)

-- Dropdown 97
Config.Dropdown["FeatureDropdown_97"] = "Medium"
Features["FeatureDropdown_97"] = function(option)
    log("FeatureDropdown_97", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_97", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_97"] = option
    Features["FeatureDropdown_97"](option)
end, "Medium")

-- Toggle 98
Config.Toggles["FeatureToggle_98"] = false
Features["FeatureToggle_98"] = function(state)
    log("FeatureToggle_98", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_98", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_98"] = state
    Features["FeatureToggle_98"](state)
end, false)

-- Slider 98
Config.Sliders["FeatureSlider_98"] = 50
Features["FeatureSlider_98"] = function(value)
    log("FeatureSlider_98", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_98", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_98"] = val
    Features["FeatureSlider_98"](val)
end, 50)

-- Dropdown 98
Config.Dropdown["FeatureDropdown_98"] = "Medium"
Features["FeatureDropdown_98"] = function(option)
    log("FeatureDropdown_98", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_98", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_98"] = option
    Features["FeatureDropdown_98"](option)
end, "Medium")

-- Toggle 99
Config.Toggles["FeatureToggle_99"] = false
Features["FeatureToggle_99"] = function(state)
    log("FeatureToggle_99", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_99", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_99"] = state
    Features["FeatureToggle_99"](state)
end, false)

-- Slider 99
Config.Sliders["FeatureSlider_99"] = 50
Features["FeatureSlider_99"] = function(value)
    log("FeatureSlider_99", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_99", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_99"] = val
    Features["FeatureSlider_99"](val)
end, 50)

-- Dropdown 99
Config.Dropdown["FeatureDropdown_99"] = "Medium"
Features["FeatureDropdown_99"] = function(option)
    log("FeatureDropdown_99", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_99", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_99"] = option
    Features["FeatureDropdown_99"](option)
end, "Medium")

-- Toggle 100
Config.Toggles["FeatureToggle_100"] = false
Features["FeatureToggle_100"] = function(state)
    log("FeatureToggle_100", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_100", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_100"] = state
    Features["FeatureToggle_100"](state)
end, false)

-- Slider 100
Config.Sliders["FeatureSlider_100"] = 50
Features["FeatureSlider_100"] = function(value)
    log("FeatureSlider_100", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_100", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_100"] = val
    Features["FeatureSlider_100"](val)
end, 50)

-- Dropdown 100
Config.Dropdown["FeatureDropdown_100"] = "Medium"
Features["FeatureDropdown_100"] = function(option)
    log("FeatureDropdown_100", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_100", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_100"] = option
    Features["FeatureDropdown_100"](option)
end, "Medium")

-- Toggle 1
Config.Toggles["FeatureToggle_1"] = false
Features["FeatureToggle_1"] = function(state)
    log("FeatureToggle_1", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_1", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_1"] = state
    Features["FeatureToggle_1"](state)
end, false)

-- Slider 1
Config.Sliders["FeatureSlider_1"] = 50
Features["FeatureSlider_1"] = function(value)
    log("FeatureSlider_1", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_1", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_1"] = val
    Features["FeatureSlider_1"](val)
end, 50)

-- Dropdown 1
Config.Dropdown["FeatureDropdown_1"] = "Medium"
Features["FeatureDropdown_1"] = function(option)
    log("FeatureDropdown_1", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_1", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_1"] = option
    Features["FeatureDropdown_1"](option)
end, "Medium")

-- Toggle 2
Config.Toggles["FeatureToggle_2"] = false
Features["FeatureToggle_2"] = function(state)
    log("FeatureToggle_2", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_2", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_2"] = state
    Features["FeatureToggle_2"](state)
end, false)

-- Slider 2
Config.Sliders["FeatureSlider_2"] = 50
Features["FeatureSlider_2"] = function(value)
    log("FeatureSlider_2", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_2", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_2"] = val
    Features["FeatureSlider_2"](val)
end, 50)

-- Dropdown 2
Config.Dropdown["FeatureDropdown_2"] = "Medium"
Features["FeatureDropdown_2"] = function(option)
    log("FeatureDropdown_2", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_2", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_2"] = option
    Features["FeatureDropdown_2"](option)
end, "Medium")

-- Toggle 3
Config.Toggles["FeatureToggle_3"] = false
Features["FeatureToggle_3"] = function(state)
    log("FeatureToggle_3", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_3", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_3"] = state
    Features["FeatureToggle_3"](state)
end, false)

-- Slider 3
Config.Sliders["FeatureSlider_3"] = 50
Features["FeatureSlider_3"] = function(value)
    log("FeatureSlider_3", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_3", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_3"] = val
    Features["FeatureSlider_3"](val)
end, 50)

-- Dropdown 3
Config.Dropdown["FeatureDropdown_3"] = "Medium"
Features["FeatureDropdown_3"] = function(option)
    log("FeatureDropdown_3", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_3", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_3"] = option
    Features["FeatureDropdown_3"](option)
end, "Medium")

-- Toggle 4
Config.Toggles["FeatureToggle_4"] = false
Features["FeatureToggle_4"] = function(state)
    log("FeatureToggle_4", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_4", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_4"] = state
    Features["FeatureToggle_4"](state)
end, false)

-- Slider 4
Config.Sliders["FeatureSlider_4"] = 50
Features["FeatureSlider_4"] = function(value)
    log("FeatureSlider_4", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_4", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_4"] = val
    Features["FeatureSlider_4"](val)
end, 50)

-- Dropdown 4
Config.Dropdown["FeatureDropdown_4"] = "Medium"
Features["FeatureDropdown_4"] = function(option)
    log("FeatureDropdown_4", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_4", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_4"] = option
    Features["FeatureDropdown_4"](option)
end, "Medium")

-- Toggle 5
Config.Toggles["FeatureToggle_5"] = false
Features["FeatureToggle_5"] = function(state)
    log("FeatureToggle_5", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_5", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_5"] = state
    Features["FeatureToggle_5"](state)
end, false)

-- Slider 5
Config.Sliders["FeatureSlider_5"] = 50
Features["FeatureSlider_5"] = function(value)
    log("FeatureSlider_5", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_5", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_5"] = val
    Features["FeatureSlider_5"](val)
end, 50)

-- Dropdown 5
Config.Dropdown["FeatureDropdown_5"] = "Medium"
Features["FeatureDropdown_5"] = function(option)
    log("FeatureDropdown_5", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_5", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_5"] = option
    Features["FeatureDropdown_5"](option)
end, "Medium")

-- Toggle 6
Config.Toggles["FeatureToggle_6"] = false
Features["FeatureToggle_6"] = function(state)
    log("FeatureToggle_6", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_6", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_6"] = state
    Features["FeatureToggle_6"](state)
end, false)

-- Slider 6
Config.Sliders["FeatureSlider_6"] = 50
Features["FeatureSlider_6"] = function(value)
    log("FeatureSlider_6", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_6", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_6"] = val
    Features["FeatureSlider_6"](val)
end, 50)

-- Dropdown 6
Config.Dropdown["FeatureDropdown_6"] = "Medium"
Features["FeatureDropdown_6"] = function(option)
    log("FeatureDropdown_6", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_6", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_6"] = option
    Features["FeatureDropdown_6"](option)
end, "Medium")

-- Toggle 7
Config.Toggles["FeatureToggle_7"] = false
Features["FeatureToggle_7"] = function(state)
    log("FeatureToggle_7", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_7", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_7"] = state
    Features["FeatureToggle_7"](state)
end, false)

-- Slider 7
Config.Sliders["FeatureSlider_7"] = 50
Features["FeatureSlider_7"] = function(value)
    log("FeatureSlider_7", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_7", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_7"] = val
    Features["FeatureSlider_7"](val)
end, 50)

-- Dropdown 7
Config.Dropdown["FeatureDropdown_7"] = "Medium"
Features["FeatureDropdown_7"] = function(option)
    log("FeatureDropdown_7", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_7", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_7"] = option
    Features["FeatureDropdown_7"](option)
end, "Medium")

-- Toggle 8
Config.Toggles["FeatureToggle_8"] = false
Features["FeatureToggle_8"] = function(state)
    log("FeatureToggle_8", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_8", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_8"] = state
    Features["FeatureToggle_8"](state)
end, false)

-- Slider 8
Config.Sliders["FeatureSlider_8"] = 50
Features["FeatureSlider_8"] = function(value)
    log("FeatureSlider_8", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_8", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_8"] = val
    Features["FeatureSlider_8"](val)
end, 50)

-- Dropdown 8
Config.Dropdown["FeatureDropdown_8"] = "Medium"
Features["FeatureDropdown_8"] = function(option)
    log("FeatureDropdown_8", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_8", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_8"] = option
    Features["FeatureDropdown_8"](option)
end, "Medium")

-- Toggle 9
Config.Toggles["FeatureToggle_9"] = false
Features["FeatureToggle_9"] = function(state)
    log("FeatureToggle_9", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_9", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_9"] = state
    Features["FeatureToggle_9"](state)
end, false)

-- Slider 9
Config.Sliders["FeatureSlider_9"] = 50
Features["FeatureSlider_9"] = function(value)
    log("FeatureSlider_9", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_9", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_9"] = val
    Features["FeatureSlider_9"](val)
end, 50)

-- Dropdown 9
Config.Dropdown["FeatureDropdown_9"] = "Medium"
Features["FeatureDropdown_9"] = function(option)
    log("FeatureDropdown_9", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_9", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_9"] = option
    Features["FeatureDropdown_9"](option)
end, "Medium")

-- Toggle 10
Config.Toggles["FeatureToggle_10"] = false
Features["FeatureToggle_10"] = function(state)
    log("FeatureToggle_10", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_10", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_10"] = state
    Features["FeatureToggle_10"](state)
end, false)

-- Slider 10
Config.Sliders["FeatureSlider_10"] = 50
Features["FeatureSlider_10"] = function(value)
    log("FeatureSlider_10", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_10", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_10"] = val
    Features["FeatureSlider_10"](val)
end, 50)

-- Dropdown 10
Config.Dropdown["FeatureDropdown_10"] = "Medium"
Features["FeatureDropdown_10"] = function(option)
    log("FeatureDropdown_10", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_10", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_10"] = option
    Features["FeatureDropdown_10"](option)
end, "Medium")

-- Toggle 11
Config.Toggles["FeatureToggle_11"] = false
Features["FeatureToggle_11"] = function(state)
    log("FeatureToggle_11", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_11", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_11"] = state
    Features["FeatureToggle_11"](state)
end, false)

-- Slider 11
Config.Sliders["FeatureSlider_11"] = 50
Features["FeatureSlider_11"] = function(value)
    log("FeatureSlider_11", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_11", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_11"] = val
    Features["FeatureSlider_11"](val)
end, 50)

-- Dropdown 11
Config.Dropdown["FeatureDropdown_11"] = "Medium"
Features["FeatureDropdown_11"] = function(option)
    log("FeatureDropdown_11", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_11", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_11"] = option
    Features["FeatureDropdown_11"](option)
end, "Medium")

-- Toggle 12
Config.Toggles["FeatureToggle_12"] = false
Features["FeatureToggle_12"] = function(state)
    log("FeatureToggle_12", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_12", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_12"] = state
    Features["FeatureToggle_12"](state)
end, false)

-- Slider 12
Config.Sliders["FeatureSlider_12"] = 50
Features["FeatureSlider_12"] = function(value)
    log("FeatureSlider_12", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_12", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_12"] = val
    Features["FeatureSlider_12"](val)
end, 50)

-- Dropdown 12
Config.Dropdown["FeatureDropdown_12"] = "Medium"
Features["FeatureDropdown_12"] = function(option)
    log("FeatureDropdown_12", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_12", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_12"] = option
    Features["FeatureDropdown_12"](option)
end, "Medium")

-- Toggle 13
Config.Toggles["FeatureToggle_13"] = false
Features["FeatureToggle_13"] = function(state)
    log("FeatureToggle_13", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_13", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_13"] = state
    Features["FeatureToggle_13"](state)
end, false)

-- Slider 13
Config.Sliders["FeatureSlider_13"] = 50
Features["FeatureSlider_13"] = function(value)
    log("FeatureSlider_13", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_13", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_13"] = val
    Features["FeatureSlider_13"](val)
end, 50)

-- Dropdown 13
Config.Dropdown["FeatureDropdown_13"] = "Medium"
Features["FeatureDropdown_13"] = function(option)
    log("FeatureDropdown_13", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_13", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_13"] = option
    Features["FeatureDropdown_13"](option)
end, "Medium")

-- Toggle 14
Config.Toggles["FeatureToggle_14"] = false
Features["FeatureToggle_14"] = function(state)
    log("FeatureToggle_14", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_14", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_14"] = state
    Features["FeatureToggle_14"](state)
end, false)

-- Slider 14
Config.Sliders["FeatureSlider_14"] = 50
Features["FeatureSlider_14"] = function(value)
    log("FeatureSlider_14", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_14", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_14"] = val
    Features["FeatureSlider_14"](val)
end, 50)

-- Dropdown 14
Config.Dropdown["FeatureDropdown_14"] = "Medium"
Features["FeatureDropdown_14"] = function(option)
    log("FeatureDropdown_14", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_14", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_14"] = option
    Features["FeatureDropdown_14"](option)
end, "Medium")

-- Toggle 15
Config.Toggles["FeatureToggle_15"] = false
Features["FeatureToggle_15"] = function(state)
    log("FeatureToggle_15", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_15", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_15"] = state
    Features["FeatureToggle_15"](state)
end, false)

-- Slider 15
Config.Sliders["FeatureSlider_15"] = 50
Features["FeatureSlider_15"] = function(value)
    log("FeatureSlider_15", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_15", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_15"] = val
    Features["FeatureSlider_15"](val)
end, 50)

-- Dropdown 15
Config.Dropdown["FeatureDropdown_15"] = "Medium"
Features["FeatureDropdown_15"] = function(option)
    log("FeatureDropdown_15", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_15", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_15"] = option
    Features["FeatureDropdown_15"](option)
end, "Medium")

-- Toggle 16
Config.Toggles["FeatureToggle_16"] = false
Features["FeatureToggle_16"] = function(state)
    log("FeatureToggle_16", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_16", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_16"] = state
    Features["FeatureToggle_16"](state)
end, false)

-- Slider 16
Config.Sliders["FeatureSlider_16"] = 50
Features["FeatureSlider_16"] = function(value)
    log("FeatureSlider_16", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_16", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_16"] = val
    Features["FeatureSlider_16"](val)
end, 50)

-- Dropdown 16
Config.Dropdown["FeatureDropdown_16"] = "Medium"
Features["FeatureDropdown_16"] = function(option)
    log("FeatureDropdown_16", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_16", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_16"] = option
    Features["FeatureDropdown_16"](option)
end, "Medium")

-- Toggle 17
Config.Toggles["FeatureToggle_17"] = false
Features["FeatureToggle_17"] = function(state)
    log("FeatureToggle_17", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_17", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_17"] = state
    Features["FeatureToggle_17"](state)
end, false)

-- Slider 17
Config.Sliders["FeatureSlider_17"] = 50
Features["FeatureSlider_17"] = function(value)
    log("FeatureSlider_17", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_17", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_17"] = val
    Features["FeatureSlider_17"](val)
end, 50)

-- Dropdown 17
Config.Dropdown["FeatureDropdown_17"] = "Medium"
Features["FeatureDropdown_17"] = function(option)
    log("FeatureDropdown_17", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_17", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_17"] = option
    Features["FeatureDropdown_17"](option)
end, "Medium")

-- Toggle 18
Config.Toggles["FeatureToggle_18"] = false
Features["FeatureToggle_18"] = function(state)
    log("FeatureToggle_18", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_18", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_18"] = state
    Features["FeatureToggle_18"](state)
end, false)

-- Slider 18
Config.Sliders["FeatureSlider_18"] = 50
Features["FeatureSlider_18"] = function(value)
    log("FeatureSlider_18", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_18", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_18"] = val
    Features["FeatureSlider_18"](val)
end, 50)

-- Dropdown 18
Config.Dropdown["FeatureDropdown_18"] = "Medium"
Features["FeatureDropdown_18"] = function(option)
    log("FeatureDropdown_18", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_18", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_18"] = option
    Features["FeatureDropdown_18"](option)
end, "Medium")

-- Toggle 19
Config.Toggles["FeatureToggle_19"] = false
Features["FeatureToggle_19"] = function(state)
    log("FeatureToggle_19", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_19", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_19"] = state
    Features["FeatureToggle_19"](state)
end, false)

-- Slider 19
Config.Sliders["FeatureSlider_19"] = 50
Features["FeatureSlider_19"] = function(value)
    log("FeatureSlider_19", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_19", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_19"] = val
    Features["FeatureSlider_19"](val)
end, 50)

-- Dropdown 19
Config.Dropdown["FeatureDropdown_19"] = "Medium"
Features["FeatureDropdown_19"] = function(option)
    log("FeatureDropdown_19", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_19", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_19"] = option
    Features["FeatureDropdown_19"](option)
end, "Medium")

-- Toggle 20
Config.Toggles["FeatureToggle_20"] = false
Features["FeatureToggle_20"] = function(state)
    log("FeatureToggle_20", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_20", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_20"] = state
    Features["FeatureToggle_20"](state)
end, false)

-- Slider 20
Config.Sliders["FeatureSlider_20"] = 50
Features["FeatureSlider_20"] = function(value)
    log("FeatureSlider_20", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_20", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_20"] = val
    Features["FeatureSlider_20"](val)
end, 50)

-- Dropdown 20
Config.Dropdown["FeatureDropdown_20"] = "Medium"
Features["FeatureDropdown_20"] = function(option)
    log("FeatureDropdown_20", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_20", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_20"] = option
    Features["FeatureDropdown_20"](option)
end, "Medium")

-- Toggle 21
Config.Toggles["FeatureToggle_21"] = false
Features["FeatureToggle_21"] = function(state)
    log("FeatureToggle_21", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_21", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_21"] = state
    Features["FeatureToggle_21"](state)
end, false)

-- Slider 21
Config.Sliders["FeatureSlider_21"] = 50
Features["FeatureSlider_21"] = function(value)
    log("FeatureSlider_21", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_21", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_21"] = val
    Features["FeatureSlider_21"](val)
end, 50)

-- Dropdown 21
Config.Dropdown["FeatureDropdown_21"] = "Medium"
Features["FeatureDropdown_21"] = function(option)
    log("FeatureDropdown_21", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_21", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_21"] = option
    Features["FeatureDropdown_21"](option)
end, "Medium")

-- Toggle 22
Config.Toggles["FeatureToggle_22"] = false
Features["FeatureToggle_22"] = function(state)
    log("FeatureToggle_22", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_22", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_22"] = state
    Features["FeatureToggle_22"](state)
end, false)

-- Slider 22
Config.Sliders["FeatureSlider_22"] = 50
Features["FeatureSlider_22"] = function(value)
    log("FeatureSlider_22", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_22", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_22"] = val
    Features["FeatureSlider_22"](val)
end, 50)

-- Dropdown 22
Config.Dropdown["FeatureDropdown_22"] = "Medium"
Features["FeatureDropdown_22"] = function(option)
    log("FeatureDropdown_22", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_22", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_22"] = option
    Features["FeatureDropdown_22"](option)
end, "Medium")

-- Toggle 23
Config.Toggles["FeatureToggle_23"] = false
Features["FeatureToggle_23"] = function(state)
    log("FeatureToggle_23", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_23", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_23"] = state
    Features["FeatureToggle_23"](state)
end, false)

-- Slider 23
Config.Sliders["FeatureSlider_23"] = 50
Features["FeatureSlider_23"] = function(value)
    log("FeatureSlider_23", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_23", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_23"] = val
    Features["FeatureSlider_23"](val)
end, 50)

-- Dropdown 23
Config.Dropdown["FeatureDropdown_23"] = "Medium"
Features["FeatureDropdown_23"] = function(option)
    log("FeatureDropdown_23", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_23", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_23"] = option
    Features["FeatureDropdown_23"](option)
end, "Medium")

-- Toggle 24
Config.Toggles["FeatureToggle_24"] = false
Features["FeatureToggle_24"] = function(state)
    log("FeatureToggle_24", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_24", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_24"] = state
    Features["FeatureToggle_24"](state)
end, false)

-- Slider 24
Config.Sliders["FeatureSlider_24"] = 50
Features["FeatureSlider_24"] = function(value)
    log("FeatureSlider_24", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_24", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_24"] = val
    Features["FeatureSlider_24"](val)
end, 50)

-- Dropdown 24
Config.Dropdown["FeatureDropdown_24"] = "Medium"
Features["FeatureDropdown_24"] = function(option)
    log("FeatureDropdown_24", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_24", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_24"] = option
    Features["FeatureDropdown_24"](option)
end, "Medium")

-- Toggle 25
Config.Toggles["FeatureToggle_25"] = false
Features["FeatureToggle_25"] = function(state)
    log("FeatureToggle_25", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_25", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_25"] = state
    Features["FeatureToggle_25"](state)
end, false)

-- Slider 25
Config.Sliders["FeatureSlider_25"] = 50
Features["FeatureSlider_25"] = function(value)
    log("FeatureSlider_25", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_25", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_25"] = val
    Features["FeatureSlider_25"](val)
end, 50)

-- Dropdown 25
Config.Dropdown["FeatureDropdown_25"] = "Medium"
Features["FeatureDropdown_25"] = function(option)
    log("FeatureDropdown_25", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_25", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_25"] = option
    Features["FeatureDropdown_25"](option)
end, "Medium")

-- Toggle 26
Config.Toggles["FeatureToggle_26"] = false
Features["FeatureToggle_26"] = function(state)
    log("FeatureToggle_26", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_26", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_26"] = state
    Features["FeatureToggle_26"](state)
end, false)

-- Slider 26
Config.Sliders["FeatureSlider_26"] = 50
Features["FeatureSlider_26"] = function(value)
    log("FeatureSlider_26", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_26", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_26"] = val
    Features["FeatureSlider_26"](val)
end, 50)

-- Dropdown 26
Config.Dropdown["FeatureDropdown_26"] = "Medium"
Features["FeatureDropdown_26"] = function(option)
    log("FeatureDropdown_26", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_26", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_26"] = option
    Features["FeatureDropdown_26"](option)
end, "Medium")

-- Toggle 27
Config.Toggles["FeatureToggle_27"] = false
Features["FeatureToggle_27"] = function(state)
    log("FeatureToggle_27", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_27", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_27"] = state
    Features["FeatureToggle_27"](state)
end, false)

-- Slider 27
Config.Sliders["FeatureSlider_27"] = 50
Features["FeatureSlider_27"] = function(value)
    log("FeatureSlider_27", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_27", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_27"] = val
    Features["FeatureSlider_27"](val)
end, 50)

-- Dropdown 27
Config.Dropdown["FeatureDropdown_27"] = "Medium"
Features["FeatureDropdown_27"] = function(option)
    log("FeatureDropdown_27", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_27", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_27"] = option
    Features["FeatureDropdown_27"](option)
end, "Medium")

-- Toggle 28
Config.Toggles["FeatureToggle_28"] = false
Features["FeatureToggle_28"] = function(state)
    log("FeatureToggle_28", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_28", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_28"] = state
    Features["FeatureToggle_28"](state)
end, false)

-- Slider 28
Config.Sliders["FeatureSlider_28"] = 50
Features["FeatureSlider_28"] = function(value)
    log("FeatureSlider_28", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_28", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_28"] = val
    Features["FeatureSlider_28"](val)
end, 50)

-- Dropdown 28
Config.Dropdown["FeatureDropdown_28"] = "Medium"
Features["FeatureDropdown_28"] = function(option)
    log("FeatureDropdown_28", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_28", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_28"] = option
    Features["FeatureDropdown_28"](option)
end, "Medium")

-- Toggle 29
Config.Toggles["FeatureToggle_29"] = false
Features["FeatureToggle_29"] = function(state)
    log("FeatureToggle_29", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_29", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_29"] = state
    Features["FeatureToggle_29"](state)
end, false)

-- Slider 29
Config.Sliders["FeatureSlider_29"] = 50
Features["FeatureSlider_29"] = function(value)
    log("FeatureSlider_29", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_29", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_29"] = val
    Features["FeatureSlider_29"](val)
end, 50)

-- Dropdown 29
Config.Dropdown["FeatureDropdown_29"] = "Medium"
Features["FeatureDropdown_29"] = function(option)
    log("FeatureDropdown_29", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_29", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_29"] = option
    Features["FeatureDropdown_29"](option)
end, "Medium")

-- Toggle 30
Config.Toggles["FeatureToggle_30"] = false
Features["FeatureToggle_30"] = function(state)
    log("FeatureToggle_30", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_30", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_30"] = state
    Features["FeatureToggle_30"](state)
end, false)

-- Slider 30
Config.Sliders["FeatureSlider_30"] = 50
Features["FeatureSlider_30"] = function(value)
    log("FeatureSlider_30", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_30", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_30"] = val
    Features["FeatureSlider_30"](val)
end, 50)

-- Dropdown 30
Config.Dropdown["FeatureDropdown_30"] = "Medium"
Features["FeatureDropdown_30"] = function(option)
    log("FeatureDropdown_30", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_30", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_30"] = option
    Features["FeatureDropdown_30"](option)
end, "Medium")

-- Toggle 31
Config.Toggles["FeatureToggle_31"] = false
Features["FeatureToggle_31"] = function(state)
    log("FeatureToggle_31", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_31", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_31"] = state
    Features["FeatureToggle_31"](state)
end, false)

-- Slider 31
Config.Sliders["FeatureSlider_31"] = 50
Features["FeatureSlider_31"] = function(value)
    log("FeatureSlider_31", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_31", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_31"] = val
    Features["FeatureSlider_31"](val)
end, 50)

-- Dropdown 31
Config.Dropdown["FeatureDropdown_31"] = "Medium"
Features["FeatureDropdown_31"] = function(option)
    log("FeatureDropdown_31", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_31", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_31"] = option
    Features["FeatureDropdown_31"](option)
end, "Medium")

-- Toggle 32
Config.Toggles["FeatureToggle_32"] = false
Features["FeatureToggle_32"] = function(state)
    log("FeatureToggle_32", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_32", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_32"] = state
    Features["FeatureToggle_32"](state)
end, false)

-- Slider 32
Config.Sliders["FeatureSlider_32"] = 50
Features["FeatureSlider_32"] = function(value)
    log("FeatureSlider_32", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_32", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_32"] = val
    Features["FeatureSlider_32"](val)
end, 50)

-- Dropdown 32
Config.Dropdown["FeatureDropdown_32"] = "Medium"
Features["FeatureDropdown_32"] = function(option)
    log("FeatureDropdown_32", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_32", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_32"] = option
    Features["FeatureDropdown_32"](option)
end, "Medium")

-- Toggle 33
Config.Toggles["FeatureToggle_33"] = false
Features["FeatureToggle_33"] = function(state)
    log("FeatureToggle_33", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_33", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_33"] = state
    Features["FeatureToggle_33"](state)
end, false)

-- Slider 33
Config.Sliders["FeatureSlider_33"] = 50
Features["FeatureSlider_33"] = function(value)
    log("FeatureSlider_33", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_33", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_33"] = val
    Features["FeatureSlider_33"](val)
end, 50)

-- Dropdown 33
Config.Dropdown["FeatureDropdown_33"] = "Medium"
Features["FeatureDropdown_33"] = function(option)
    log("FeatureDropdown_33", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_33", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_33"] = option
    Features["FeatureDropdown_33"](option)
end, "Medium")

-- Toggle 34
Config.Toggles["FeatureToggle_34"] = false
Features["FeatureToggle_34"] = function(state)
    log("FeatureToggle_34", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_34", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_34"] = state
    Features["FeatureToggle_34"](state)
end, false)

-- Slider 34
Config.Sliders["FeatureSlider_34"] = 50
Features["FeatureSlider_34"] = function(value)
    log("FeatureSlider_34", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_34", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_34"] = val
    Features["FeatureSlider_34"](val)
end, 50)

-- Dropdown 34
Config.Dropdown["FeatureDropdown_34"] = "Medium"
Features["FeatureDropdown_34"] = function(option)
    log("FeatureDropdown_34", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_34", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_34"] = option
    Features["FeatureDropdown_34"](option)
end, "Medium")

-- Toggle 35
Config.Toggles["FeatureToggle_35"] = false
Features["FeatureToggle_35"] = function(state)
    log("FeatureToggle_35", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_35", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_35"] = state
    Features["FeatureToggle_35"](state)
end, false)

-- Slider 35
Config.Sliders["FeatureSlider_35"] = 50
Features["FeatureSlider_35"] = function(value)
    log("FeatureSlider_35", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_35", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_35"] = val
    Features["FeatureSlider_35"](val)
end, 50)

-- Dropdown 35
Config.Dropdown["FeatureDropdown_35"] = "Medium"
Features["FeatureDropdown_35"] = function(option)
    log("FeatureDropdown_35", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_35", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_35"] = option
    Features["FeatureDropdown_35"](option)
end, "Medium")

-- Toggle 36
Config.Toggles["FeatureToggle_36"] = false
Features["FeatureToggle_36"] = function(state)
    log("FeatureToggle_36", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_36", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_36"] = state
    Features["FeatureToggle_36"](state)
end, false)

-- Slider 36
Config.Sliders["FeatureSlider_36"] = 50
Features["FeatureSlider_36"] = function(value)
    log("FeatureSlider_36", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_36", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_36"] = val
    Features["FeatureSlider_36"](val)
end, 50)

-- Dropdown 36
Config.Dropdown["FeatureDropdown_36"] = "Medium"
Features["FeatureDropdown_36"] = function(option)
    log("FeatureDropdown_36", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_36", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_36"] = option
    Features["FeatureDropdown_36"](option)
end, "Medium")

-- Toggle 37
Config.Toggles["FeatureToggle_37"] = false
Features["FeatureToggle_37"] = function(state)
    log("FeatureToggle_37", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_37", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_37"] = state
    Features["FeatureToggle_37"](state)
end, false)

-- Slider 37
Config.Sliders["FeatureSlider_37"] = 50
Features["FeatureSlider_37"] = function(value)
    log("FeatureSlider_37", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_37", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_37"] = val
    Features["FeatureSlider_37"](val)
end, 50)

-- Dropdown 37
Config.Dropdown["FeatureDropdown_37"] = "Medium"
Features["FeatureDropdown_37"] = function(option)
    log("FeatureDropdown_37", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_37", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_37"] = option
    Features["FeatureDropdown_37"](option)
end, "Medium")

-- Toggle 38
Config.Toggles["FeatureToggle_38"] = false
Features["FeatureToggle_38"] = function(state)
    log("FeatureToggle_38", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_38", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_38"] = state
    Features["FeatureToggle_38"](state)
end, false)

-- Slider 38
Config.Sliders["FeatureSlider_38"] = 50
Features["FeatureSlider_38"] = function(value)
    log("FeatureSlider_38", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_38", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_38"] = val
    Features["FeatureSlider_38"](val)
end, 50)

-- Dropdown 38
Config.Dropdown["FeatureDropdown_38"] = "Medium"
Features["FeatureDropdown_38"] = function(option)
    log("FeatureDropdown_38", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_38", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_38"] = option
    Features["FeatureDropdown_38"](option)
end, "Medium")

-- Toggle 39
Config.Toggles["FeatureToggle_39"] = false
Features["FeatureToggle_39"] = function(state)
    log("FeatureToggle_39", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_39", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_39"] = state
    Features["FeatureToggle_39"](state)
end, false)

-- Slider 39
Config.Sliders["FeatureSlider_39"] = 50
Features["FeatureSlider_39"] = function(value)
    log("FeatureSlider_39", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_39", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_39"] = val
    Features["FeatureSlider_39"](val)
end, 50)

-- Dropdown 39
Config.Dropdown["FeatureDropdown_39"] = "Medium"
Features["FeatureDropdown_39"] = function(option)
    log("FeatureDropdown_39", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_39", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_39"] = option
    Features["FeatureDropdown_39"](option)
end, "Medium")

-- Toggle 40
Config.Toggles["FeatureToggle_40"] = false
Features["FeatureToggle_40"] = function(state)
    log("FeatureToggle_40", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_40", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_40"] = state
    Features["FeatureToggle_40"](state)
end, false)

-- Slider 40
Config.Sliders["FeatureSlider_40"] = 50
Features["FeatureSlider_40"] = function(value)
    log("FeatureSlider_40", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_40", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_40"] = val
    Features["FeatureSlider_40"](val)
end, 50)

-- Dropdown 40
Config.Dropdown["FeatureDropdown_40"] = "Medium"
Features["FeatureDropdown_40"] = function(option)
    log("FeatureDropdown_40", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_40", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_40"] = option
    Features["FeatureDropdown_40"](option)
end, "Medium")

-- Toggle 41
Config.Toggles["FeatureToggle_41"] = false
Features["FeatureToggle_41"] = function(state)
    log("FeatureToggle_41", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_41", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_41"] = state
    Features["FeatureToggle_41"](state)
end, false)

-- Slider 41
Config.Sliders["FeatureSlider_41"] = 50
Features["FeatureSlider_41"] = function(value)
    log("FeatureSlider_41", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_41", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_41"] = val
    Features["FeatureSlider_41"](val)
end, 50)

-- Dropdown 41
Config.Dropdown["FeatureDropdown_41"] = "Medium"
Features["FeatureDropdown_41"] = function(option)
    log("FeatureDropdown_41", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_41", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_41"] = option
    Features["FeatureDropdown_41"](option)
end, "Medium")

-- Toggle 42
Config.Toggles["FeatureToggle_42"] = false
Features["FeatureToggle_42"] = function(state)
    log("FeatureToggle_42", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_42", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_42"] = state
    Features["FeatureToggle_42"](state)
end, false)

-- Slider 42
Config.Sliders["FeatureSlider_42"] = 50
Features["FeatureSlider_42"] = function(value)
    log("FeatureSlider_42", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_42", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_42"] = val
    Features["FeatureSlider_42"](val)
end, 50)

-- Dropdown 42
Config.Dropdown["FeatureDropdown_42"] = "Medium"
Features["FeatureDropdown_42"] = function(option)
    log("FeatureDropdown_42", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_42", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_42"] = option
    Features["FeatureDropdown_42"](option)
end, "Medium")

-- Toggle 43
Config.Toggles["FeatureToggle_43"] = false
Features["FeatureToggle_43"] = function(state)
    log("FeatureToggle_43", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_43", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_43"] = state
    Features["FeatureToggle_43"](state)
end, false)

-- Slider 43
Config.Sliders["FeatureSlider_43"] = 50
Features["FeatureSlider_43"] = function(value)
    log("FeatureSlider_43", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_43", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_43"] = val
    Features["FeatureSlider_43"](val)
end, 50)

-- Dropdown 43
Config.Dropdown["FeatureDropdown_43"] = "Medium"
Features["FeatureDropdown_43"] = function(option)
    log("FeatureDropdown_43", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_43", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_43"] = option
    Features["FeatureDropdown_43"](option)
end, "Medium")

-- Toggle 44
Config.Toggles["FeatureToggle_44"] = false
Features["FeatureToggle_44"] = function(state)
    log("FeatureToggle_44", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_44", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_44"] = state
    Features["FeatureToggle_44"](state)
end, false)

-- Slider 44
Config.Sliders["FeatureSlider_44"] = 50
Features["FeatureSlider_44"] = function(value)
    log("FeatureSlider_44", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_44", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_44"] = val
    Features["FeatureSlider_44"](val)
end, 50)

-- Dropdown 44
Config.Dropdown["FeatureDropdown_44"] = "Medium"
Features["FeatureDropdown_44"] = function(option)
    log("FeatureDropdown_44", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_44", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_44"] = option
    Features["FeatureDropdown_44"](option)
end, "Medium")

-- Toggle 45
Config.Toggles["FeatureToggle_45"] = false
Features["FeatureToggle_45"] = function(state)
    log("FeatureToggle_45", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_45", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_45"] = state
    Features["FeatureToggle_45"](state)
end, false)

-- Slider 45
Config.Sliders["FeatureSlider_45"] = 50
Features["FeatureSlider_45"] = function(value)
    log("FeatureSlider_45", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_45", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_45"] = val
    Features["FeatureSlider_45"](val)
end, 50)

-- Dropdown 45
Config.Dropdown["FeatureDropdown_45"] = "Medium"
Features["FeatureDropdown_45"] = function(option)
    log("FeatureDropdown_45", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_45", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_45"] = option
    Features["FeatureDropdown_45"](option)
end, "Medium")

-- Toggle 46
Config.Toggles["FeatureToggle_46"] = false
Features["FeatureToggle_46"] = function(state)
    log("FeatureToggle_46", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_46", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_46"] = state
    Features["FeatureToggle_46"](state)
end, false)

-- Slider 46
Config.Sliders["FeatureSlider_46"] = 50
Features["FeatureSlider_46"] = function(value)
    log("FeatureSlider_46", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_46", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_46"] = val
    Features["FeatureSlider_46"](val)
end, 50)

-- Dropdown 46
Config.Dropdown["FeatureDropdown_46"] = "Medium"
Features["FeatureDropdown_46"] = function(option)
    log("FeatureDropdown_46", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_46", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_46"] = option
    Features["FeatureDropdown_46"](option)
end, "Medium")

-- Toggle 47
Config.Toggles["FeatureToggle_47"] = false
Features["FeatureToggle_47"] = function(state)
    log("FeatureToggle_47", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_47", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_47"] = state
    Features["FeatureToggle_47"](state)
end, false)

-- Slider 47
Config.Sliders["FeatureSlider_47"] = 50
Features["FeatureSlider_47"] = function(value)
    log("FeatureSlider_47", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_47", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_47"] = val
    Features["FeatureSlider_47"](val)
end, 50)

-- Dropdown 47
Config.Dropdown["FeatureDropdown_47"] = "Medium"
Features["FeatureDropdown_47"] = function(option)
    log("FeatureDropdown_47", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_47", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_47"] = option
    Features["FeatureDropdown_47"](option)
end, "Medium")

-- Toggle 48
Config.Toggles["FeatureToggle_48"] = false
Features["FeatureToggle_48"] = function(state)
    log("FeatureToggle_48", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_48", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_48"] = state
    Features["FeatureToggle_48"](state)
end, false)

-- Slider 48
Config.Sliders["FeatureSlider_48"] = 50
Features["FeatureSlider_48"] = function(value)
    log("FeatureSlider_48", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_48", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_48"] = val
    Features["FeatureSlider_48"](val)
end, 50)

-- Dropdown 48
Config.Dropdown["FeatureDropdown_48"] = "Medium"
Features["FeatureDropdown_48"] = function(option)
    log("FeatureDropdown_48", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_48", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_48"] = option
    Features["FeatureDropdown_48"](option)
end, "Medium")

-- Toggle 49
Config.Toggles["FeatureToggle_49"] = false
Features["FeatureToggle_49"] = function(state)
    log("FeatureToggle_49", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_49", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_49"] = state
    Features["FeatureToggle_49"](state)
end, false)

-- Slider 49
Config.Sliders["FeatureSlider_49"] = 50
Features["FeatureSlider_49"] = function(value)
    log("FeatureSlider_49", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_49", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_49"] = val
    Features["FeatureSlider_49"](val)
end, 50)

-- Dropdown 49
Config.Dropdown["FeatureDropdown_49"] = "Medium"
Features["FeatureDropdown_49"] = function(option)
    log("FeatureDropdown_49", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_49", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_49"] = option
    Features["FeatureDropdown_49"](option)
end, "Medium")

-- Toggle 50
Config.Toggles["FeatureToggle_50"] = false
Features["FeatureToggle_50"] = function(state)
    log("FeatureToggle_50", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_50", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_50"] = state
    Features["FeatureToggle_50"](state)
end, false)

-- Slider 50
Config.Sliders["FeatureSlider_50"] = 50
Features["FeatureSlider_50"] = function(value)
    log("FeatureSlider_50", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_50", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_50"] = val
    Features["FeatureSlider_50"](val)
end, 50)

-- Dropdown 50
Config.Dropdown["FeatureDropdown_50"] = "Medium"
Features["FeatureDropdown_50"] = function(option)
    log("FeatureDropdown_50", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_50", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_50"] = option
    Features["FeatureDropdown_50"](option)
end, "Medium")

-- Toggle 51
Config.Toggles["FeatureToggle_51"] = false
Features["FeatureToggle_51"] = function(state)
    log("FeatureToggle_51", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_51", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_51"] = state
    Features["FeatureToggle_51"](state)
end, false)

-- Slider 51
Config.Sliders["FeatureSlider_51"] = 50
Features["FeatureSlider_51"] = function(value)
    log("FeatureSlider_51", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_51", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_51"] = val
    Features["FeatureSlider_51"](val)
end, 50)

-- Dropdown 51
Config.Dropdown["FeatureDropdown_51"] = "Medium"
Features["FeatureDropdown_51"] = function(option)
    log("FeatureDropdown_51", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_51", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_51"] = option
    Features["FeatureDropdown_51"](option)
end, "Medium")

-- Toggle 52
Config.Toggles["FeatureToggle_52"] = false
Features["FeatureToggle_52"] = function(state)
    log("FeatureToggle_52", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_52", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_52"] = state
    Features["FeatureToggle_52"](state)
end, false)

-- Slider 52
Config.Sliders["FeatureSlider_52"] = 50
Features["FeatureSlider_52"] = function(value)
    log("FeatureSlider_52", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_52", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_52"] = val
    Features["FeatureSlider_52"](val)
end, 50)

-- Dropdown 52
Config.Dropdown["FeatureDropdown_52"] = "Medium"
Features["FeatureDropdown_52"] = function(option)
    log("FeatureDropdown_52", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_52", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_52"] = option
    Features["FeatureDropdown_52"](option)
end, "Medium")

-- Toggle 53
Config.Toggles["FeatureToggle_53"] = false
Features["FeatureToggle_53"] = function(state)
    log("FeatureToggle_53", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_53", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_53"] = state
    Features["FeatureToggle_53"](state)
end, false)

-- Slider 53
Config.Sliders["FeatureSlider_53"] = 50
Features["FeatureSlider_53"] = function(value)
    log("FeatureSlider_53", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_53", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_53"] = val
    Features["FeatureSlider_53"](val)
end, 50)

-- Dropdown 53
Config.Dropdown["FeatureDropdown_53"] = "Medium"
Features["FeatureDropdown_53"] = function(option)
    log("FeatureDropdown_53", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_53", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_53"] = option
    Features["FeatureDropdown_53"](option)
end, "Medium")

-- Toggle 54
Config.Toggles["FeatureToggle_54"] = false
Features["FeatureToggle_54"] = function(state)
    log("FeatureToggle_54", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_54", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_54"] = state
    Features["FeatureToggle_54"](state)
end, false)

-- Slider 54
Config.Sliders["FeatureSlider_54"] = 50
Features["FeatureSlider_54"] = function(value)
    log("FeatureSlider_54", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_54", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_54"] = val
    Features["FeatureSlider_54"](val)
end, 50)

-- Dropdown 54
Config.Dropdown["FeatureDropdown_54"] = "Medium"
Features["FeatureDropdown_54"] = function(option)
    log("FeatureDropdown_54", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_54", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_54"] = option
    Features["FeatureDropdown_54"](option)
end, "Medium")

-- Toggle 55
Config.Toggles["FeatureToggle_55"] = false
Features["FeatureToggle_55"] = function(state)
    log("FeatureToggle_55", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_55", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_55"] = state
    Features["FeatureToggle_55"](state)
end, false)

-- Slider 55
Config.Sliders["FeatureSlider_55"] = 50
Features["FeatureSlider_55"] = function(value)
    log("FeatureSlider_55", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_55", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_55"] = val
    Features["FeatureSlider_55"](val)
end, 50)

-- Dropdown 55
Config.Dropdown["FeatureDropdown_55"] = "Medium"
Features["FeatureDropdown_55"] = function(option)
    log("FeatureDropdown_55", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_55", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_55"] = option
    Features["FeatureDropdown_55"](option)
end, "Medium")

-- Toggle 56
Config.Toggles["FeatureToggle_56"] = false
Features["FeatureToggle_56"] = function(state)
    log("FeatureToggle_56", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_56", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_56"] = state
    Features["FeatureToggle_56"](state)
end, false)

-- Slider 56
Config.Sliders["FeatureSlider_56"] = 50
Features["FeatureSlider_56"] = function(value)
    log("FeatureSlider_56", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_56", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_56"] = val
    Features["FeatureSlider_56"](val)
end, 50)

-- Dropdown 56
Config.Dropdown["FeatureDropdown_56"] = "Medium"
Features["FeatureDropdown_56"] = function(option)
    log("FeatureDropdown_56", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_56", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_56"] = option
    Features["FeatureDropdown_56"](option)
end, "Medium")

-- Toggle 57
Config.Toggles["FeatureToggle_57"] = false
Features["FeatureToggle_57"] = function(state)
    log("FeatureToggle_57", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_57", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_57"] = state
    Features["FeatureToggle_57"](state)
end, false)

-- Slider 57
Config.Sliders["FeatureSlider_57"] = 50
Features["FeatureSlider_57"] = function(value)
    log("FeatureSlider_57", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_57", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_57"] = val
    Features["FeatureSlider_57"](val)
end, 50)

-- Dropdown 57
Config.Dropdown["FeatureDropdown_57"] = "Medium"
Features["FeatureDropdown_57"] = function(option)
    log("FeatureDropdown_57", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_57", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_57"] = option
    Features["FeatureDropdown_57"](option)
end, "Medium")

-- Toggle 58
Config.Toggles["FeatureToggle_58"] = false
Features["FeatureToggle_58"] = function(state)
    log("FeatureToggle_58", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_58", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_58"] = state
    Features["FeatureToggle_58"](state)
end, false)

-- Slider 58
Config.Sliders["FeatureSlider_58"] = 50
Features["FeatureSlider_58"] = function(value)
    log("FeatureSlider_58", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_58", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_58"] = val
    Features["FeatureSlider_58"](val)
end, 50)

-- Dropdown 58
Config.Dropdown["FeatureDropdown_58"] = "Medium"
Features["FeatureDropdown_58"] = function(option)
    log("FeatureDropdown_58", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_58", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_58"] = option
    Features["FeatureDropdown_58"](option)
end, "Medium")

-- Toggle 59
Config.Toggles["FeatureToggle_59"] = false
Features["FeatureToggle_59"] = function(state)
    log("FeatureToggle_59", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_59", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_59"] = state
    Features["FeatureToggle_59"](state)
end, false)

-- Slider 59
Config.Sliders["FeatureSlider_59"] = 50
Features["FeatureSlider_59"] = function(value)
    log("FeatureSlider_59", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_59", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_59"] = val
    Features["FeatureSlider_59"](val)
end, 50)

-- Dropdown 59
Config.Dropdown["FeatureDropdown_59"] = "Medium"
Features["FeatureDropdown_59"] = function(option)
    log("FeatureDropdown_59", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_59", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_59"] = option
    Features["FeatureDropdown_59"](option)
end, "Medium")

-- Toggle 60
Config.Toggles["FeatureToggle_60"] = false
Features["FeatureToggle_60"] = function(state)
    log("FeatureToggle_60", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_60", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_60"] = state
    Features["FeatureToggle_60"](state)
end, false)

-- Slider 60
Config.Sliders["FeatureSlider_60"] = 50
Features["FeatureSlider_60"] = function(value)
    log("FeatureSlider_60", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_60", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_60"] = val
    Features["FeatureSlider_60"](val)
end, 50)

-- Dropdown 60
Config.Dropdown["FeatureDropdown_60"] = "Medium"
Features["FeatureDropdown_60"] = function(option)
    log("FeatureDropdown_60", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_60", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_60"] = option
    Features["FeatureDropdown_60"](option)
end, "Medium")

-- Toggle 61
Config.Toggles["FeatureToggle_61"] = false
Features["FeatureToggle_61"] = function(state)
    log("FeatureToggle_61", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_61", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_61"] = state
    Features["FeatureToggle_61"](state)
end, false)

-- Slider 61
Config.Sliders["FeatureSlider_61"] = 50
Features["FeatureSlider_61"] = function(value)
    log("FeatureSlider_61", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_61", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_61"] = val
    Features["FeatureSlider_61"](val)
end, 50)

-- Dropdown 61
Config.Dropdown["FeatureDropdown_61"] = "Medium"
Features["FeatureDropdown_61"] = function(option)
    log("FeatureDropdown_61", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_61", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_61"] = option
    Features["FeatureDropdown_61"](option)
end, "Medium")

-- Toggle 62
Config.Toggles["FeatureToggle_62"] = false
Features["FeatureToggle_62"] = function(state)
    log("FeatureToggle_62", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_62", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_62"] = state
    Features["FeatureToggle_62"](state)
end, false)

-- Slider 62
Config.Sliders["FeatureSlider_62"] = 50
Features["FeatureSlider_62"] = function(value)
    log("FeatureSlider_62", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_62", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_62"] = val
    Features["FeatureSlider_62"](val)
end, 50)

-- Dropdown 62
Config.Dropdown["FeatureDropdown_62"] = "Medium"
Features["FeatureDropdown_62"] = function(option)
    log("FeatureDropdown_62", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_62", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_62"] = option
    Features["FeatureDropdown_62"](option)
end, "Medium")

-- Toggle 63
Config.Toggles["FeatureToggle_63"] = false
Features["FeatureToggle_63"] = function(state)
    log("FeatureToggle_63", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_63", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_63"] = state
    Features["FeatureToggle_63"](state)
end, false)

-- Slider 63
Config.Sliders["FeatureSlider_63"] = 50
Features["FeatureSlider_63"] = function(value)
    log("FeatureSlider_63", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_63", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_63"] = val
    Features["FeatureSlider_63"](val)
end, 50)

-- Dropdown 63
Config.Dropdown["FeatureDropdown_63"] = "Medium"
Features["FeatureDropdown_63"] = function(option)
    log("FeatureDropdown_63", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_63", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_63"] = option
    Features["FeatureDropdown_63"](option)
end, "Medium")

-- Toggle 64
Config.Toggles["FeatureToggle_64"] = false
Features["FeatureToggle_64"] = function(state)
    log("FeatureToggle_64", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_64", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_64"] = state
    Features["FeatureToggle_64"](state)
end, false)

-- Slider 64
Config.Sliders["FeatureSlider_64"] = 50
Features["FeatureSlider_64"] = function(value)
    log("FeatureSlider_64", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_64", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_64"] = val
    Features["FeatureSlider_64"](val)
end, 50)

-- Dropdown 64
Config.Dropdown["FeatureDropdown_64"] = "Medium"
Features["FeatureDropdown_64"] = function(option)
    log("FeatureDropdown_64", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_64", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_64"] = option
    Features["FeatureDropdown_64"](option)
end, "Medium")

-- Toggle 65
Config.Toggles["FeatureToggle_65"] = false
Features["FeatureToggle_65"] = function(state)
    log("FeatureToggle_65", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_65", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_65"] = state
    Features["FeatureToggle_65"](state)
end, false)

-- Slider 65
Config.Sliders["FeatureSlider_65"] = 50
Features["FeatureSlider_65"] = function(value)
    log("FeatureSlider_65", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_65", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_65"] = val
    Features["FeatureSlider_65"](val)
end, 50)

-- Dropdown 65
Config.Dropdown["FeatureDropdown_65"] = "Medium"
Features["FeatureDropdown_65"] = function(option)
    log("FeatureDropdown_65", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_65", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_65"] = option
    Features["FeatureDropdown_65"](option)
end, "Medium")

-- Toggle 66
Config.Toggles["FeatureToggle_66"] = false
Features["FeatureToggle_66"] = function(state)
    log("FeatureToggle_66", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_66", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_66"] = state
    Features["FeatureToggle_66"](state)
end, false)

-- Slider 66
Config.Sliders["FeatureSlider_66"] = 50
Features["FeatureSlider_66"] = function(value)
    log("FeatureSlider_66", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_66", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_66"] = val
    Features["FeatureSlider_66"](val)
end, 50)

-- Dropdown 66
Config.Dropdown["FeatureDropdown_66"] = "Medium"
Features["FeatureDropdown_66"] = function(option)
    log("FeatureDropdown_66", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_66", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_66"] = option
    Features["FeatureDropdown_66"](option)
end, "Medium")

-- Toggle 67
Config.Toggles["FeatureToggle_67"] = false
Features["FeatureToggle_67"] = function(state)
    log("FeatureToggle_67", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_67", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_67"] = state
    Features["FeatureToggle_67"](state)
end, false)

-- Slider 67
Config.Sliders["FeatureSlider_67"] = 50
Features["FeatureSlider_67"] = function(value)
    log("FeatureSlider_67", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_67", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_67"] = val
    Features["FeatureSlider_67"](val)
end, 50)

-- Dropdown 67
Config.Dropdown["FeatureDropdown_67"] = "Medium"
Features["FeatureDropdown_67"] = function(option)
    log("FeatureDropdown_67", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_67", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_67"] = option
    Features["FeatureDropdown_67"](option)
end, "Medium")

-- Toggle 68
Config.Toggles["FeatureToggle_68"] = false
Features["FeatureToggle_68"] = function(state)
    log("FeatureToggle_68", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_68", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_68"] = state
    Features["FeatureToggle_68"](state)
end, false)

-- Slider 68
Config.Sliders["FeatureSlider_68"] = 50
Features["FeatureSlider_68"] = function(value)
    log("FeatureSlider_68", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_68", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_68"] = val
    Features["FeatureSlider_68"](val)
end, 50)

-- Dropdown 68
Config.Dropdown["FeatureDropdown_68"] = "Medium"
Features["FeatureDropdown_68"] = function(option)
    log("FeatureDropdown_68", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_68", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_68"] = option
    Features["FeatureDropdown_68"](option)
end, "Medium")

-- Toggle 69
Config.Toggles["FeatureToggle_69"] = false
Features["FeatureToggle_69"] = function(state)
    log("FeatureToggle_69", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_69", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_69"] = state
    Features["FeatureToggle_69"](state)
end, false)

-- Slider 69
Config.Sliders["FeatureSlider_69"] = 50
Features["FeatureSlider_69"] = function(value)
    log("FeatureSlider_69", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_69", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_69"] = val
    Features["FeatureSlider_69"](val)
end, 50)

-- Dropdown 69
Config.Dropdown["FeatureDropdown_69"] = "Medium"
Features["FeatureDropdown_69"] = function(option)
    log("FeatureDropdown_69", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_69", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_69"] = option
    Features["FeatureDropdown_69"](option)
end, "Medium")

-- Toggle 70
Config.Toggles["FeatureToggle_70"] = false
Features["FeatureToggle_70"] = function(state)
    log("FeatureToggle_70", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_70", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_70"] = state
    Features["FeatureToggle_70"](state)
end, false)

-- Slider 70
Config.Sliders["FeatureSlider_70"] = 50
Features["FeatureSlider_70"] = function(value)
    log("FeatureSlider_70", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_70", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_70"] = val
    Features["FeatureSlider_70"](val)
end, 50)

-- Dropdown 70
Config.Dropdown["FeatureDropdown_70"] = "Medium"
Features["FeatureDropdown_70"] = function(option)
    log("FeatureDropdown_70", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_70", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_70"] = option
    Features["FeatureDropdown_70"](option)
end, "Medium")

-- Toggle 71
Config.Toggles["FeatureToggle_71"] = false
Features["FeatureToggle_71"] = function(state)
    log("FeatureToggle_71", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_71", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_71"] = state
    Features["FeatureToggle_71"](state)
end, false)

-- Slider 71
Config.Sliders["FeatureSlider_71"] = 50
Features["FeatureSlider_71"] = function(value)
    log("FeatureSlider_71", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_71", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_71"] = val
    Features["FeatureSlider_71"](val)
end, 50)

-- Dropdown 71
Config.Dropdown["FeatureDropdown_71"] = "Medium"
Features["FeatureDropdown_71"] = function(option)
    log("FeatureDropdown_71", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_71", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_71"] = option
    Features["FeatureDropdown_71"](option)
end, "Medium")

-- Toggle 72
Config.Toggles["FeatureToggle_72"] = false
Features["FeatureToggle_72"] = function(state)
    log("FeatureToggle_72", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_72", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_72"] = state
    Features["FeatureToggle_72"](state)
end, false)

-- Slider 72
Config.Sliders["FeatureSlider_72"] = 50
Features["FeatureSlider_72"] = function(value)
    log("FeatureSlider_72", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_72", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_72"] = val
    Features["FeatureSlider_72"](val)
end, 50)

-- Dropdown 72
Config.Dropdown["FeatureDropdown_72"] = "Medium"
Features["FeatureDropdown_72"] = function(option)
    log("FeatureDropdown_72", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_72", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_72"] = option
    Features["FeatureDropdown_72"](option)
end, "Medium")

-- Toggle 73
Config.Toggles["FeatureToggle_73"] = false
Features["FeatureToggle_73"] = function(state)
    log("FeatureToggle_73", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_73", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_73"] = state
    Features["FeatureToggle_73"](state)
end, false)

-- Slider 73
Config.Sliders["FeatureSlider_73"] = 50
Features["FeatureSlider_73"] = function(value)
    log("FeatureSlider_73", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_73", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_73"] = val
    Features["FeatureSlider_73"](val)
end, 50)

-- Dropdown 73
Config.Dropdown["FeatureDropdown_73"] = "Medium"
Features["FeatureDropdown_73"] = function(option)
    log("FeatureDropdown_73", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_73", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_73"] = option
    Features["FeatureDropdown_73"](option)
end, "Medium")

-- Toggle 74
Config.Toggles["FeatureToggle_74"] = false
Features["FeatureToggle_74"] = function(state)
    log("FeatureToggle_74", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_74", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_74"] = state
    Features["FeatureToggle_74"](state)
end, false)

-- Slider 74
Config.Sliders["FeatureSlider_74"] = 50
Features["FeatureSlider_74"] = function(value)
    log("FeatureSlider_74", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_74", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_74"] = val
    Features["FeatureSlider_74"](val)
end, 50)

-- Dropdown 74
Config.Dropdown["FeatureDropdown_74"] = "Medium"
Features["FeatureDropdown_74"] = function(option)
    log("FeatureDropdown_74", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_74", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_74"] = option
    Features["FeatureDropdown_74"](option)
end, "Medium")

-- Toggle 75
Config.Toggles["FeatureToggle_75"] = false
Features["FeatureToggle_75"] = function(state)
    log("FeatureToggle_75", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_75", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_75"] = state
    Features["FeatureToggle_75"](state)
end, false)

-- Slider 75
Config.Sliders["FeatureSlider_75"] = 50
Features["FeatureSlider_75"] = function(value)
    log("FeatureSlider_75", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_75", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_75"] = val
    Features["FeatureSlider_75"](val)
end, 50)

-- Dropdown 75
Config.Dropdown["FeatureDropdown_75"] = "Medium"
Features["FeatureDropdown_75"] = function(option)
    log("FeatureDropdown_75", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_75", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_75"] = option
    Features["FeatureDropdown_75"](option)
end, "Medium")

-- Toggle 76
Config.Toggles["FeatureToggle_76"] = false
Features["FeatureToggle_76"] = function(state)
    log("FeatureToggle_76", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_76", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_76"] = state
    Features["FeatureToggle_76"](state)
end, false)

-- Slider 76
Config.Sliders["FeatureSlider_76"] = 50
Features["FeatureSlider_76"] = function(value)
    log("FeatureSlider_76", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_76", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_76"] = val
    Features["FeatureSlider_76"](val)
end, 50)

-- Dropdown 76
Config.Dropdown["FeatureDropdown_76"] = "Medium"
Features["FeatureDropdown_76"] = function(option)
    log("FeatureDropdown_76", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_76", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_76"] = option
    Features["FeatureDropdown_76"](option)
end, "Medium")

-- Toggle 77
Config.Toggles["FeatureToggle_77"] = false
Features["FeatureToggle_77"] = function(state)
    log("FeatureToggle_77", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_77", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_77"] = state
    Features["FeatureToggle_77"](state)
end, false)

-- Slider 77
Config.Sliders["FeatureSlider_77"] = 50
Features["FeatureSlider_77"] = function(value)
    log("FeatureSlider_77", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_77", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_77"] = val
    Features["FeatureSlider_77"](val)
end, 50)

-- Dropdown 77
Config.Dropdown["FeatureDropdown_77"] = "Medium"
Features["FeatureDropdown_77"] = function(option)
    log("FeatureDropdown_77", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_77", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_77"] = option
    Features["FeatureDropdown_77"](option)
end, "Medium")

-- Toggle 78
Config.Toggles["FeatureToggle_78"] = false
Features["FeatureToggle_78"] = function(state)
    log("FeatureToggle_78", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_78", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_78"] = state
    Features["FeatureToggle_78"](state)
end, false)

-- Slider 78
Config.Sliders["FeatureSlider_78"] = 50
Features["FeatureSlider_78"] = function(value)
    log("FeatureSlider_78", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_78", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_78"] = val
    Features["FeatureSlider_78"](val)
end, 50)

-- Dropdown 78
Config.Dropdown["FeatureDropdown_78"] = "Medium"
Features["FeatureDropdown_78"] = function(option)
    log("FeatureDropdown_78", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_78", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_78"] = option
    Features["FeatureDropdown_78"](option)
end, "Medium")

-- Toggle 79
Config.Toggles["FeatureToggle_79"] = false
Features["FeatureToggle_79"] = function(state)
    log("FeatureToggle_79", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_79", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_79"] = state
    Features["FeatureToggle_79"](state)
end, false)

-- Slider 79
Config.Sliders["FeatureSlider_79"] = 50
Features["FeatureSlider_79"] = function(value)
    log("FeatureSlider_79", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_79", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_79"] = val
    Features["FeatureSlider_79"](val)
end, 50)

-- Dropdown 79
Config.Dropdown["FeatureDropdown_79"] = "Medium"
Features["FeatureDropdown_79"] = function(option)
    log("FeatureDropdown_79", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_79", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_79"] = option
    Features["FeatureDropdown_79"](option)
end, "Medium")

-- Toggle 80
Config.Toggles["FeatureToggle_80"] = false
Features["FeatureToggle_80"] = function(state)
    log("FeatureToggle_80", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_80", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_80"] = state
    Features["FeatureToggle_80"](state)
end, false)

-- Slider 80
Config.Sliders["FeatureSlider_80"] = 50
Features["FeatureSlider_80"] = function(value)
    log("FeatureSlider_80", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_80", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_80"] = val
    Features["FeatureSlider_80"](val)
end, 50)

-- Dropdown 80
Config.Dropdown["FeatureDropdown_80"] = "Medium"
Features["FeatureDropdown_80"] = function(option)
    log("FeatureDropdown_80", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_80", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_80"] = option
    Features["FeatureDropdown_80"](option)
end, "Medium")

-- Toggle 81
Config.Toggles["FeatureToggle_81"] = false
Features["FeatureToggle_81"] = function(state)
    log("FeatureToggle_81", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_81", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_81"] = state
    Features["FeatureToggle_81"](state)
end, false)

-- Slider 81
Config.Sliders["FeatureSlider_81"] = 50
Features["FeatureSlider_81"] = function(value)
    log("FeatureSlider_81", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_81", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_81"] = val
    Features["FeatureSlider_81"](val)
end, 50)

-- Dropdown 81
Config.Dropdown["FeatureDropdown_81"] = "Medium"
Features["FeatureDropdown_81"] = function(option)
    log("FeatureDropdown_81", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_81", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_81"] = option
    Features["FeatureDropdown_81"](option)
end, "Medium")

-- Toggle 82
Config.Toggles["FeatureToggle_82"] = false
Features["FeatureToggle_82"] = function(state)
    log("FeatureToggle_82", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_82", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_82"] = state
    Features["FeatureToggle_82"](state)
end, false)

-- Slider 82
Config.Sliders["FeatureSlider_82"] = 50
Features["FeatureSlider_82"] = function(value)
    log("FeatureSlider_82", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_82", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_82"] = val
    Features["FeatureSlider_82"](val)
end, 50)

-- Dropdown 82
Config.Dropdown["FeatureDropdown_82"] = "Medium"
Features["FeatureDropdown_82"] = function(option)
    log("FeatureDropdown_82", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_82", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_82"] = option
    Features["FeatureDropdown_82"](option)
end, "Medium")

-- Toggle 83
Config.Toggles["FeatureToggle_83"] = false
Features["FeatureToggle_83"] = function(state)
    log("FeatureToggle_83", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_83", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_83"] = state
    Features["FeatureToggle_83"](state)
end, false)

-- Slider 83
Config.Sliders["FeatureSlider_83"] = 50
Features["FeatureSlider_83"] = function(value)
    log("FeatureSlider_83", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_83", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_83"] = val
    Features["FeatureSlider_83"](val)
end, 50)

-- Dropdown 83
Config.Dropdown["FeatureDropdown_83"] = "Medium"
Features["FeatureDropdown_83"] = function(option)
    log("FeatureDropdown_83", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_83", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_83"] = option
    Features["FeatureDropdown_83"](option)
end, "Medium")

-- Toggle 84
Config.Toggles["FeatureToggle_84"] = false
Features["FeatureToggle_84"] = function(state)
    log("FeatureToggle_84", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_84", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_84"] = state
    Features["FeatureToggle_84"](state)
end, false)

-- Slider 84
Config.Sliders["FeatureSlider_84"] = 50
Features["FeatureSlider_84"] = function(value)
    log("FeatureSlider_84", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_84", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_84"] = val
    Features["FeatureSlider_84"](val)
end, 50)

-- Dropdown 84
Config.Dropdown["FeatureDropdown_84"] = "Medium"
Features["FeatureDropdown_84"] = function(option)
    log("FeatureDropdown_84", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_84", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_84"] = option
    Features["FeatureDropdown_84"](option)
end, "Medium")

-- Toggle 85
Config.Toggles["FeatureToggle_85"] = false
Features["FeatureToggle_85"] = function(state)
    log("FeatureToggle_85", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_85", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_85"] = state
    Features["FeatureToggle_85"](state)
end, false)

-- Slider 85
Config.Sliders["FeatureSlider_85"] = 50
Features["FeatureSlider_85"] = function(value)
    log("FeatureSlider_85", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_85", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_85"] = val
    Features["FeatureSlider_85"](val)
end, 50)

-- Dropdown 85
Config.Dropdown["FeatureDropdown_85"] = "Medium"
Features["FeatureDropdown_85"] = function(option)
    log("FeatureDropdown_85", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_85", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_85"] = option
    Features["FeatureDropdown_85"](option)
end, "Medium")

-- Toggle 86
Config.Toggles["FeatureToggle_86"] = false
Features["FeatureToggle_86"] = function(state)
    log("FeatureToggle_86", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_86", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_86"] = state
    Features["FeatureToggle_86"](state)
end, false)

-- Slider 86
Config.Sliders["FeatureSlider_86"] = 50
Features["FeatureSlider_86"] = function(value)
    log("FeatureSlider_86", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_86", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_86"] = val
    Features["FeatureSlider_86"](val)
end, 50)

-- Dropdown 86
Config.Dropdown["FeatureDropdown_86"] = "Medium"
Features["FeatureDropdown_86"] = function(option)
    log("FeatureDropdown_86", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_86", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_86"] = option
    Features["FeatureDropdown_86"](option)
end, "Medium")

-- Toggle 87
Config.Toggles["FeatureToggle_87"] = false
Features["FeatureToggle_87"] = function(state)
    log("FeatureToggle_87", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_87", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_87"] = state
    Features["FeatureToggle_87"](state)
end, false)

-- Slider 87
Config.Sliders["FeatureSlider_87"] = 50
Features["FeatureSlider_87"] = function(value)
    log("FeatureSlider_87", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_87", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_87"] = val
    Features["FeatureSlider_87"](val)
end, 50)

-- Dropdown 87
Config.Dropdown["FeatureDropdown_87"] = "Medium"
Features["FeatureDropdown_87"] = function(option)
    log("FeatureDropdown_87", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_87", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_87"] = option
    Features["FeatureDropdown_87"](option)
end, "Medium")

-- Toggle 88
Config.Toggles["FeatureToggle_88"] = false
Features["FeatureToggle_88"] = function(state)
    log("FeatureToggle_88", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_88", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_88"] = state
    Features["FeatureToggle_88"](state)
end, false)

-- Slider 88
Config.Sliders["FeatureSlider_88"] = 50
Features["FeatureSlider_88"] = function(value)
    log("FeatureSlider_88", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_88", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_88"] = val
    Features["FeatureSlider_88"](val)
end, 50)

-- Dropdown 88
Config.Dropdown["FeatureDropdown_88"] = "Medium"
Features["FeatureDropdown_88"] = function(option)
    log("FeatureDropdown_88", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_88", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_88"] = option
    Features["FeatureDropdown_88"](option)
end, "Medium")

-- Toggle 89
Config.Toggles["FeatureToggle_89"] = false
Features["FeatureToggle_89"] = function(state)
    log("FeatureToggle_89", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_89", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_89"] = state
    Features["FeatureToggle_89"](state)
end, false)

-- Slider 89
Config.Sliders["FeatureSlider_89"] = 50
Features["FeatureSlider_89"] = function(value)
    log("FeatureSlider_89", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_89", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_89"] = val
    Features["FeatureSlider_89"](val)
end, 50)

-- Dropdown 89
Config.Dropdown["FeatureDropdown_89"] = "Medium"
Features["FeatureDropdown_89"] = function(option)
    log("FeatureDropdown_89", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_89", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_89"] = option
    Features["FeatureDropdown_89"](option)
end, "Medium")

-- Toggle 90
Config.Toggles["FeatureToggle_90"] = false
Features["FeatureToggle_90"] = function(state)
    log("FeatureToggle_90", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_90", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_90"] = state
    Features["FeatureToggle_90"](state)
end, false)

-- Slider 90
Config.Sliders["FeatureSlider_90"] = 50
Features["FeatureSlider_90"] = function(value)
    log("FeatureSlider_90", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_90", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_90"] = val
    Features["FeatureSlider_90"](val)
end, 50)

-- Dropdown 90
Config.Dropdown["FeatureDropdown_90"] = "Medium"
Features["FeatureDropdown_90"] = function(option)
    log("FeatureDropdown_90", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_90", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_90"] = option
    Features["FeatureDropdown_90"](option)
end, "Medium")

-- Toggle 91
Config.Toggles["FeatureToggle_91"] = false
Features["FeatureToggle_91"] = function(state)
    log("FeatureToggle_91", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_91", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_91"] = state
    Features["FeatureToggle_91"](state)
end, false)

-- Slider 91
Config.Sliders["FeatureSlider_91"] = 50
Features["FeatureSlider_91"] = function(value)
    log("FeatureSlider_91", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_91", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_91"] = val
    Features["FeatureSlider_91"](val)
end, 50)

-- Dropdown 91
Config.Dropdown["FeatureDropdown_91"] = "Medium"
Features["FeatureDropdown_91"] = function(option)
    log("FeatureDropdown_91", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_91", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_91"] = option
    Features["FeatureDropdown_91"](option)
end, "Medium")

-- Toggle 92
Config.Toggles["FeatureToggle_92"] = false
Features["FeatureToggle_92"] = function(state)
    log("FeatureToggle_92", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_92", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_92"] = state
    Features["FeatureToggle_92"](state)
end, false)

-- Slider 92
Config.Sliders["FeatureSlider_92"] = 50
Features["FeatureSlider_92"] = function(value)
    log("FeatureSlider_92", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_92", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_92"] = val
    Features["FeatureSlider_92"](val)
end, 50)

-- Dropdown 92
Config.Dropdown["FeatureDropdown_92"] = "Medium"
Features["FeatureDropdown_92"] = function(option)
    log("FeatureDropdown_92", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_92", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_92"] = option
    Features["FeatureDropdown_92"](option)
end, "Medium")

-- Toggle 93
Config.Toggles["FeatureToggle_93"] = false
Features["FeatureToggle_93"] = function(state)
    log("FeatureToggle_93", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_93", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_93"] = state
    Features["FeatureToggle_93"](state)
end, false)

-- Slider 93
Config.Sliders["FeatureSlider_93"] = 50
Features["FeatureSlider_93"] = function(value)
    log("FeatureSlider_93", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_93", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_93"] = val
    Features["FeatureSlider_93"](val)
end, 50)

-- Dropdown 93
Config.Dropdown["FeatureDropdown_93"] = "Medium"
Features["FeatureDropdown_93"] = function(option)
    log("FeatureDropdown_93", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_93", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_93"] = option
    Features["FeatureDropdown_93"](option)
end, "Medium")

-- Toggle 94
Config.Toggles["FeatureToggle_94"] = false
Features["FeatureToggle_94"] = function(state)
    log("FeatureToggle_94", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_94", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_94"] = state
    Features["FeatureToggle_94"](state)
end, false)

-- Slider 94
Config.Sliders["FeatureSlider_94"] = 50
Features["FeatureSlider_94"] = function(value)
    log("FeatureSlider_94", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_94", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_94"] = val
    Features["FeatureSlider_94"](val)
end, 50)

-- Dropdown 94
Config.Dropdown["FeatureDropdown_94"] = "Medium"
Features["FeatureDropdown_94"] = function(option)
    log("FeatureDropdown_94", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_94", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_94"] = option
    Features["FeatureDropdown_94"](option)
end, "Medium")

-- Toggle 95
Config.Toggles["FeatureToggle_95"] = false
Features["FeatureToggle_95"] = function(state)
    log("FeatureToggle_95", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_95", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_95"] = state
    Features["FeatureToggle_95"](state)
end, false)

-- Slider 95
Config.Sliders["FeatureSlider_95"] = 50
Features["FeatureSlider_95"] = function(value)
    log("FeatureSlider_95", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_95", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_95"] = val
    Features["FeatureSlider_95"](val)
end, 50)

-- Dropdown 95
Config.Dropdown["FeatureDropdown_95"] = "Medium"
Features["FeatureDropdown_95"] = function(option)
    log("FeatureDropdown_95", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_95", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_95"] = option
    Features["FeatureDropdown_95"](option)
end, "Medium")

-- Toggle 96
Config.Toggles["FeatureToggle_96"] = false
Features["FeatureToggle_96"] = function(state)
    log("FeatureToggle_96", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_96", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_96"] = state
    Features["FeatureToggle_96"](state)
end, false)

-- Slider 96
Config.Sliders["FeatureSlider_96"] = 50
Features["FeatureSlider_96"] = function(value)
    log("FeatureSlider_96", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_96", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_96"] = val
    Features["FeatureSlider_96"](val)
end, 50)

-- Dropdown 96
Config.Dropdown["FeatureDropdown_96"] = "Medium"
Features["FeatureDropdown_96"] = function(option)
    log("FeatureDropdown_96", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_96", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_96"] = option
    Features["FeatureDropdown_96"](option)
end, "Medium")

-- Toggle 97
Config.Toggles["FeatureToggle_97"] = false
Features["FeatureToggle_97"] = function(state)
    log("FeatureToggle_97", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_97", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_97"] = state
    Features["FeatureToggle_97"](state)
end, false)

-- Slider 97
Config.Sliders["FeatureSlider_97"] = 50
Features["FeatureSlider_97"] = function(value)
    log("FeatureSlider_97", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_97", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_97"] = val
    Features["FeatureSlider_97"](val)
end, 50)

-- Dropdown 97
Config.Dropdown["FeatureDropdown_97"] = "Medium"
Features["FeatureDropdown_97"] = function(option)
    log("FeatureDropdown_97", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_97", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_97"] = option
    Features["FeatureDropdown_97"](option)
end, "Medium")

-- Toggle 98
Config.Toggles["FeatureToggle_98"] = false
Features["FeatureToggle_98"] = function(state)
    log("FeatureToggle_98", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_98", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_98"] = state
    Features["FeatureToggle_98"](state)
end, false)

-- Slider 98
Config.Sliders["FeatureSlider_98"] = 50
Features["FeatureSlider_98"] = function(value)
    log("FeatureSlider_98", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_98", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_98"] = val
    Features["FeatureSlider_98"](val)
end, 50)

-- Dropdown 98
Config.Dropdown["FeatureDropdown_98"] = "Medium"
Features["FeatureDropdown_98"] = function(option)
    log("FeatureDropdown_98", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_98", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_98"] = option
    Features["FeatureDropdown_98"](option)
end, "Medium")

-- Toggle 99
Config.Toggles["FeatureToggle_99"] = false
Features["FeatureToggle_99"] = function(state)
    log("FeatureToggle_99", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_99", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_99"] = state
    Features["FeatureToggle_99"](state)
end, false)

-- Slider 99
Config.Sliders["FeatureSlider_99"] = 50
Features["FeatureSlider_99"] = function(value)
    log("FeatureSlider_99", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_99", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_99"] = val
    Features["FeatureSlider_99"](val)
end, 50)

-- Dropdown 99
Config.Dropdown["FeatureDropdown_99"] = "Medium"
Features["FeatureDropdown_99"] = function(option)
    log("FeatureDropdown_99", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_99", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_99"] = option
    Features["FeatureDropdown_99"](option)
end, "Medium")

-- Toggle 100
Config.Toggles["FeatureToggle_100"] = false
Features["FeatureToggle_100"] = function(state)
    log("FeatureToggle_100", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_100", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_100"] = state
    Features["FeatureToggle_100"](state)
end, false)

-- Slider 100
Config.Sliders["FeatureSlider_100"] = 50
Features["FeatureSlider_100"] = function(value)
    log("FeatureSlider_100", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_100", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_100"] = val
    Features["FeatureSlider_100"](val)
end, 50)

-- Dropdown 100
Config.Dropdown["FeatureDropdown_100"] = "Medium"
Features["FeatureDropdown_100"] = function(option)
    log("FeatureDropdown_100", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_100", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_100"] = option
    Features["FeatureDropdown_100"](option)
end, "Medium")

-- Toggle 1
Config.Toggles["FeatureToggle_1"] = false
Features["FeatureToggle_1"] = function(state)
    log("FeatureToggle_1", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_1", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_1"] = state
    Features["FeatureToggle_1"](state)
end, false)

-- Slider 1
Config.Sliders["FeatureSlider_1"] = 50
Features["FeatureSlider_1"] = function(value)
    log("FeatureSlider_1", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_1", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_1"] = val
    Features["FeatureSlider_1"](val)
end, 50)

-- Dropdown 1
Config.Dropdown["FeatureDropdown_1"] = "Medium"
Features["FeatureDropdown_1"] = function(option)
    log("FeatureDropdown_1", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_1", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_1"] = option
    Features["FeatureDropdown_1"](option)
end, "Medium")

-- Toggle 2
Config.Toggles["FeatureToggle_2"] = false
Features["FeatureToggle_2"] = function(state)
    log("FeatureToggle_2", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_2", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_2"] = state
    Features["FeatureToggle_2"](state)
end, false)

-- Slider 2
Config.Sliders["FeatureSlider_2"] = 50
Features["FeatureSlider_2"] = function(value)
    log("FeatureSlider_2", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_2", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_2"] = val
    Features["FeatureSlider_2"](val)
end, 50)

-- Dropdown 2
Config.Dropdown["FeatureDropdown_2"] = "Medium"
Features["FeatureDropdown_2"] = function(option)
    log("FeatureDropdown_2", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_2", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_2"] = option
    Features["FeatureDropdown_2"](option)
end, "Medium")

-- Toggle 3
Config.Toggles["FeatureToggle_3"] = false
Features["FeatureToggle_3"] = function(state)
    log("FeatureToggle_3", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_3", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_3"] = state
    Features["FeatureToggle_3"](state)
end, false)

-- Slider 3
Config.Sliders["FeatureSlider_3"] = 50
Features["FeatureSlider_3"] = function(value)
    log("FeatureSlider_3", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_3", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_3"] = val
    Features["FeatureSlider_3"](val)
end, 50)

-- Dropdown 3
Config.Dropdown["FeatureDropdown_3"] = "Medium"
Features["FeatureDropdown_3"] = function(option)
    log("FeatureDropdown_3", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_3", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_3"] = option
    Features["FeatureDropdown_3"](option)
end, "Medium")

-- Toggle 4
Config.Toggles["FeatureToggle_4"] = false
Features["FeatureToggle_4"] = function(state)
    log("FeatureToggle_4", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_4", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_4"] = state
    Features["FeatureToggle_4"](state)
end, false)

-- Slider 4
Config.Sliders["FeatureSlider_4"] = 50
Features["FeatureSlider_4"] = function(value)
    log("FeatureSlider_4", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_4", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_4"] = val
    Features["FeatureSlider_4"](val)
end, 50)

-- Dropdown 4
Config.Dropdown["FeatureDropdown_4"] = "Medium"
Features["FeatureDropdown_4"] = function(option)
    log("FeatureDropdown_4", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_4", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_4"] = option
    Features["FeatureDropdown_4"](option)
end, "Medium")

-- Toggle 5
Config.Toggles["FeatureToggle_5"] = false
Features["FeatureToggle_5"] = function(state)
    log("FeatureToggle_5", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_5", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_5"] = state
    Features["FeatureToggle_5"](state)
end, false)

-- Slider 5
Config.Sliders["FeatureSlider_5"] = 50
Features["FeatureSlider_5"] = function(value)
    log("FeatureSlider_5", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_5", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_5"] = val
    Features["FeatureSlider_5"](val)
end, 50)

-- Dropdown 5
Config.Dropdown["FeatureDropdown_5"] = "Medium"
Features["FeatureDropdown_5"] = function(option)
    log("FeatureDropdown_5", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_5", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_5"] = option
    Features["FeatureDropdown_5"](option)
end, "Medium")

-- Toggle 6
Config.Toggles["FeatureToggle_6"] = false
Features["FeatureToggle_6"] = function(state)
    log("FeatureToggle_6", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_6", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_6"] = state
    Features["FeatureToggle_6"](state)
end, false)

-- Slider 6
Config.Sliders["FeatureSlider_6"] = 50
Features["FeatureSlider_6"] = function(value)
    log("FeatureSlider_6", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_6", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_6"] = val
    Features["FeatureSlider_6"](val)
end, 50)

-- Dropdown 6
Config.Dropdown["FeatureDropdown_6"] = "Medium"
Features["FeatureDropdown_6"] = function(option)
    log("FeatureDropdown_6", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_6", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_6"] = option
    Features["FeatureDropdown_6"](option)
end, "Medium")

-- Toggle 7
Config.Toggles["FeatureToggle_7"] = false
Features["FeatureToggle_7"] = function(state)
    log("FeatureToggle_7", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_7", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_7"] = state
    Features["FeatureToggle_7"](state)
end, false)

-- Slider 7
Config.Sliders["FeatureSlider_7"] = 50
Features["FeatureSlider_7"] = function(value)
    log("FeatureSlider_7", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_7", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_7"] = val
    Features["FeatureSlider_7"](val)
end, 50)

-- Dropdown 7
Config.Dropdown["FeatureDropdown_7"] = "Medium"
Features["FeatureDropdown_7"] = function(option)
    log("FeatureDropdown_7", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_7", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_7"] = option
    Features["FeatureDropdown_7"](option)
end, "Medium")

-- Toggle 8
Config.Toggles["FeatureToggle_8"] = false
Features["FeatureToggle_8"] = function(state)
    log("FeatureToggle_8", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_8", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_8"] = state
    Features["FeatureToggle_8"](state)
end, false)

-- Slider 8
Config.Sliders["FeatureSlider_8"] = 50
Features["FeatureSlider_8"] = function(value)
    log("FeatureSlider_8", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_8", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_8"] = val
    Features["FeatureSlider_8"](val)
end, 50)

-- Dropdown 8
Config.Dropdown["FeatureDropdown_8"] = "Medium"
Features["FeatureDropdown_8"] = function(option)
    log("FeatureDropdown_8", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_8", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_8"] = option
    Features["FeatureDropdown_8"](option)
end, "Medium")

-- Toggle 9
Config.Toggles["FeatureToggle_9"] = false
Features["FeatureToggle_9"] = function(state)
    log("FeatureToggle_9", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_9", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_9"] = state
    Features["FeatureToggle_9"](state)
end, false)

-- Slider 9
Config.Sliders["FeatureSlider_9"] = 50
Features["FeatureSlider_9"] = function(value)
    log("FeatureSlider_9", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_9", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_9"] = val
    Features["FeatureSlider_9"](val)
end, 50)

-- Dropdown 9
Config.Dropdown["FeatureDropdown_9"] = "Medium"
Features["FeatureDropdown_9"] = function(option)
    log("FeatureDropdown_9", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_9", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_9"] = option
    Features["FeatureDropdown_9"](option)
end, "Medium")

-- Toggle 10
Config.Toggles["FeatureToggle_10"] = false
Features["FeatureToggle_10"] = function(state)
    log("FeatureToggle_10", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_10", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_10"] = state
    Features["FeatureToggle_10"](state)
end, false)

-- Slider 10
Config.Sliders["FeatureSlider_10"] = 50
Features["FeatureSlider_10"] = function(value)
    log("FeatureSlider_10", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_10", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_10"] = val
    Features["FeatureSlider_10"](val)
end, 50)

-- Dropdown 10
Config.Dropdown["FeatureDropdown_10"] = "Medium"
Features["FeatureDropdown_10"] = function(option)
    log("FeatureDropdown_10", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_10", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_10"] = option
    Features["FeatureDropdown_10"](option)
end, "Medium")

-- Toggle 11
Config.Toggles["FeatureToggle_11"] = false
Features["FeatureToggle_11"] = function(state)
    log("FeatureToggle_11", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_11", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_11"] = state
    Features["FeatureToggle_11"](state)
end, false)

-- Slider 11
Config.Sliders["FeatureSlider_11"] = 50
Features["FeatureSlider_11"] = function(value)
    log("FeatureSlider_11", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_11", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_11"] = val
    Features["FeatureSlider_11"](val)
end, 50)

-- Dropdown 11
Config.Dropdown["FeatureDropdown_11"] = "Medium"
Features["FeatureDropdown_11"] = function(option)
    log("FeatureDropdown_11", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_11", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_11"] = option
    Features["FeatureDropdown_11"](option)
end, "Medium")

-- Toggle 12
Config.Toggles["FeatureToggle_12"] = false
Features["FeatureToggle_12"] = function(state)
    log("FeatureToggle_12", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_12", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_12"] = state
    Features["FeatureToggle_12"](state)
end, false)

-- Slider 12
Config.Sliders["FeatureSlider_12"] = 50
Features["FeatureSlider_12"] = function(value)
    log("FeatureSlider_12", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_12", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_12"] = val
    Features["FeatureSlider_12"](val)
end, 50)

-- Dropdown 12
Config.Dropdown["FeatureDropdown_12"] = "Medium"
Features["FeatureDropdown_12"] = function(option)
    log("FeatureDropdown_12", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_12", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_12"] = option
    Features["FeatureDropdown_12"](option)
end, "Medium")

-- Toggle 13
Config.Toggles["FeatureToggle_13"] = false
Features["FeatureToggle_13"] = function(state)
    log("FeatureToggle_13", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_13", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_13"] = state
    Features["FeatureToggle_13"](state)
end, false)

-- Slider 13
Config.Sliders["FeatureSlider_13"] = 50
Features["FeatureSlider_13"] = function(value)
    log("FeatureSlider_13", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_13", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_13"] = val
    Features["FeatureSlider_13"](val)
end, 50)

-- Dropdown 13
Config.Dropdown["FeatureDropdown_13"] = "Medium"
Features["FeatureDropdown_13"] = function(option)
    log("FeatureDropdown_13", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_13", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_13"] = option
    Features["FeatureDropdown_13"](option)
end, "Medium")

-- Toggle 14
Config.Toggles["FeatureToggle_14"] = false
Features["FeatureToggle_14"] = function(state)
    log("FeatureToggle_14", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_14", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_14"] = state
    Features["FeatureToggle_14"](state)
end, false)

-- Slider 14
Config.Sliders["FeatureSlider_14"] = 50
Features["FeatureSlider_14"] = function(value)
    log("FeatureSlider_14", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_14", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_14"] = val
    Features["FeatureSlider_14"](val)
end, 50)

-- Dropdown 14
Config.Dropdown["FeatureDropdown_14"] = "Medium"
Features["FeatureDropdown_14"] = function(option)
    log("FeatureDropdown_14", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_14", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_14"] = option
    Features["FeatureDropdown_14"](option)
end, "Medium")

-- Toggle 15
Config.Toggles["FeatureToggle_15"] = false
Features["FeatureToggle_15"] = function(state)
    log("FeatureToggle_15", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_15", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_15"] = state
    Features["FeatureToggle_15"](state)
end, false)

-- Slider 15
Config.Sliders["FeatureSlider_15"] = 50
Features["FeatureSlider_15"] = function(value)
    log("FeatureSlider_15", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_15", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_15"] = val
    Features["FeatureSlider_15"](val)
end, 50)

-- Dropdown 15
Config.Dropdown["FeatureDropdown_15"] = "Medium"
Features["FeatureDropdown_15"] = function(option)
    log("FeatureDropdown_15", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_15", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_15"] = option
    Features["FeatureDropdown_15"](option)
end, "Medium")

-- Toggle 16
Config.Toggles["FeatureToggle_16"] = false
Features["FeatureToggle_16"] = function(state)
    log("FeatureToggle_16", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_16", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_16"] = state
    Features["FeatureToggle_16"](state)
end, false)

-- Slider 16
Config.Sliders["FeatureSlider_16"] = 50
Features["FeatureSlider_16"] = function(value)
    log("FeatureSlider_16", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_16", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_16"] = val
    Features["FeatureSlider_16"](val)
end, 50)

-- Dropdown 16
Config.Dropdown["FeatureDropdown_16"] = "Medium"
Features["FeatureDropdown_16"] = function(option)
    log("FeatureDropdown_16", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_16", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_16"] = option
    Features["FeatureDropdown_16"](option)
end, "Medium")

-- Toggle 17
Config.Toggles["FeatureToggle_17"] = false
Features["FeatureToggle_17"] = function(state)
    log("FeatureToggle_17", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_17", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_17"] = state
    Features["FeatureToggle_17"](state)
end, false)

-- Slider 17
Config.Sliders["FeatureSlider_17"] = 50
Features["FeatureSlider_17"] = function(value)
    log("FeatureSlider_17", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_17", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_17"] = val
    Features["FeatureSlider_17"](val)
end, 50)

-- Dropdown 17
Config.Dropdown["FeatureDropdown_17"] = "Medium"
Features["FeatureDropdown_17"] = function(option)
    log("FeatureDropdown_17", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_17", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_17"] = option
    Features["FeatureDropdown_17"](option)
end, "Medium")

-- Toggle 18
Config.Toggles["FeatureToggle_18"] = false
Features["FeatureToggle_18"] = function(state)
    log("FeatureToggle_18", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_18", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_18"] = state
    Features["FeatureToggle_18"](state)
end, false)

-- Slider 18
Config.Sliders["FeatureSlider_18"] = 50
Features["FeatureSlider_18"] = function(value)
    log("FeatureSlider_18", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_18", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_18"] = val
    Features["FeatureSlider_18"](val)
end, 50)

-- Dropdown 18
Config.Dropdown["FeatureDropdown_18"] = "Medium"
Features["FeatureDropdown_18"] = function(option)
    log("FeatureDropdown_18", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_18", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_18"] = option
    Features["FeatureDropdown_18"](option)
end, "Medium")

-- Toggle 19
Config.Toggles["FeatureToggle_19"] = false
Features["FeatureToggle_19"] = function(state)
    log("FeatureToggle_19", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_19", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_19"] = state
    Features["FeatureToggle_19"](state)
end, false)

-- Slider 19
Config.Sliders["FeatureSlider_19"] = 50
Features["FeatureSlider_19"] = function(value)
    log("FeatureSlider_19", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_19", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_19"] = val
    Features["FeatureSlider_19"](val)
end, 50)

-- Dropdown 19
Config.Dropdown["FeatureDropdown_19"] = "Medium"
Features["FeatureDropdown_19"] = function(option)
    log("FeatureDropdown_19", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_19", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_19"] = option
    Features["FeatureDropdown_19"](option)
end, "Medium")

-- Toggle 20
Config.Toggles["FeatureToggle_20"] = false
Features["FeatureToggle_20"] = function(state)
    log("FeatureToggle_20", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_20", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_20"] = state
    Features["FeatureToggle_20"](state)
end, false)

-- Slider 20
Config.Sliders["FeatureSlider_20"] = 50
Features["FeatureSlider_20"] = function(value)
    log("FeatureSlider_20", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_20", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_20"] = val
    Features["FeatureSlider_20"](val)
end, 50)

-- Dropdown 20
Config.Dropdown["FeatureDropdown_20"] = "Medium"
Features["FeatureDropdown_20"] = function(option)
    log("FeatureDropdown_20", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_20", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_20"] = option
    Features["FeatureDropdown_20"](option)
end, "Medium")

-- Toggle 21
Config.Toggles["FeatureToggle_21"] = false
Features["FeatureToggle_21"] = function(state)
    log("FeatureToggle_21", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_21", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_21"] = state
    Features["FeatureToggle_21"](state)
end, false)

-- Slider 21
Config.Sliders["FeatureSlider_21"] = 50
Features["FeatureSlider_21"] = function(value)
    log("FeatureSlider_21", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_21", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_21"] = val
    Features["FeatureSlider_21"](val)
end, 50)

-- Dropdown 21
Config.Dropdown["FeatureDropdown_21"] = "Medium"
Features["FeatureDropdown_21"] = function(option)
    log("FeatureDropdown_21", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_21", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_21"] = option
    Features["FeatureDropdown_21"](option)
end, "Medium")

-- Toggle 22
Config.Toggles["FeatureToggle_22"] = false
Features["FeatureToggle_22"] = function(state)
    log("FeatureToggle_22", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_22", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_22"] = state
    Features["FeatureToggle_22"](state)
end, false)

-- Slider 22
Config.Sliders["FeatureSlider_22"] = 50
Features["FeatureSlider_22"] = function(value)
    log("FeatureSlider_22", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_22", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_22"] = val
    Features["FeatureSlider_22"](val)
end, 50)

-- Dropdown 22
Config.Dropdown["FeatureDropdown_22"] = "Medium"
Features["FeatureDropdown_22"] = function(option)
    log("FeatureDropdown_22", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_22", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_22"] = option
    Features["FeatureDropdown_22"](option)
end, "Medium")

-- Toggle 23
Config.Toggles["FeatureToggle_23"] = false
Features["FeatureToggle_23"] = function(state)
    log("FeatureToggle_23", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_23", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_23"] = state
    Features["FeatureToggle_23"](state)
end, false)

-- Slider 23
Config.Sliders["FeatureSlider_23"] = 50
Features["FeatureSlider_23"] = function(value)
    log("FeatureSlider_23", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_23", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_23"] = val
    Features["FeatureSlider_23"](val)
end, 50)

-- Dropdown 23
Config.Dropdown["FeatureDropdown_23"] = "Medium"
Features["FeatureDropdown_23"] = function(option)
    log("FeatureDropdown_23", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_23", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_23"] = option
    Features["FeatureDropdown_23"](option)
end, "Medium")

-- Toggle 24
Config.Toggles["FeatureToggle_24"] = false
Features["FeatureToggle_24"] = function(state)
    log("FeatureToggle_24", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_24", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_24"] = state
    Features["FeatureToggle_24"](state)
end, false)

-- Slider 24
Config.Sliders["FeatureSlider_24"] = 50
Features["FeatureSlider_24"] = function(value)
    log("FeatureSlider_24", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_24", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_24"] = val
    Features["FeatureSlider_24"](val)
end, 50)

-- Dropdown 24
Config.Dropdown["FeatureDropdown_24"] = "Medium"
Features["FeatureDropdown_24"] = function(option)
    log("FeatureDropdown_24", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_24", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_24"] = option
    Features["FeatureDropdown_24"](option)
end, "Medium")

-- Toggle 25
Config.Toggles["FeatureToggle_25"] = false
Features["FeatureToggle_25"] = function(state)
    log("FeatureToggle_25", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_25", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_25"] = state
    Features["FeatureToggle_25"](state)
end, false)

-- Slider 25
Config.Sliders["FeatureSlider_25"] = 50
Features["FeatureSlider_25"] = function(value)
    log("FeatureSlider_25", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_25", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_25"] = val
    Features["FeatureSlider_25"](val)
end, 50)

-- Dropdown 25
Config.Dropdown["FeatureDropdown_25"] = "Medium"
Features["FeatureDropdown_25"] = function(option)
    log("FeatureDropdown_25", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_25", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_25"] = option
    Features["FeatureDropdown_25"](option)
end, "Medium")

-- Toggle 26
Config.Toggles["FeatureToggle_26"] = false
Features["FeatureToggle_26"] = function(state)
    log("FeatureToggle_26", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_26", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_26"] = state
    Features["FeatureToggle_26"](state)
end, false)

-- Slider 26
Config.Sliders["FeatureSlider_26"] = 50
Features["FeatureSlider_26"] = function(value)
    log("FeatureSlider_26", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_26", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_26"] = val
    Features["FeatureSlider_26"](val)
end, 50)

-- Dropdown 26
Config.Dropdown["FeatureDropdown_26"] = "Medium"
Features["FeatureDropdown_26"] = function(option)
    log("FeatureDropdown_26", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_26", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_26"] = option
    Features["FeatureDropdown_26"](option)
end, "Medium")

-- Toggle 27
Config.Toggles["FeatureToggle_27"] = false
Features["FeatureToggle_27"] = function(state)
    log("FeatureToggle_27", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_27", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_27"] = state
    Features["FeatureToggle_27"](state)
end, false)

-- Slider 27
Config.Sliders["FeatureSlider_27"] = 50
Features["FeatureSlider_27"] = function(value)
    log("FeatureSlider_27", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_27", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_27"] = val
    Features["FeatureSlider_27"](val)
end, 50)

-- Dropdown 27
Config.Dropdown["FeatureDropdown_27"] = "Medium"
Features["FeatureDropdown_27"] = function(option)
    log("FeatureDropdown_27", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_27", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_27"] = option
    Features["FeatureDropdown_27"](option)
end, "Medium")

-- Toggle 28
Config.Toggles["FeatureToggle_28"] = false
Features["FeatureToggle_28"] = function(state)
    log("FeatureToggle_28", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_28", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_28"] = state
    Features["FeatureToggle_28"](state)
end, false)

-- Slider 28
Config.Sliders["FeatureSlider_28"] = 50
Features["FeatureSlider_28"] = function(value)
    log("FeatureSlider_28", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_28", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_28"] = val
    Features["FeatureSlider_28"](val)
end, 50)

-- Dropdown 28
Config.Dropdown["FeatureDropdown_28"] = "Medium"
Features["FeatureDropdown_28"] = function(option)
    log("FeatureDropdown_28", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_28", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_28"] = option
    Features["FeatureDropdown_28"](option)
end, "Medium")

-- Toggle 29
Config.Toggles["FeatureToggle_29"] = false
Features["FeatureToggle_29"] = function(state)
    log("FeatureToggle_29", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_29", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_29"] = state
    Features["FeatureToggle_29"](state)
end, false)

-- Slider 29
Config.Sliders["FeatureSlider_29"] = 50
Features["FeatureSlider_29"] = function(value)
    log("FeatureSlider_29", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_29", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_29"] = val
    Features["FeatureSlider_29"](val)
end, 50)

-- Dropdown 29
Config.Dropdown["FeatureDropdown_29"] = "Medium"
Features["FeatureDropdown_29"] = function(option)
    log("FeatureDropdown_29", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_29", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_29"] = option
    Features["FeatureDropdown_29"](option)
end, "Medium")

-- Toggle 30
Config.Toggles["FeatureToggle_30"] = false
Features["FeatureToggle_30"] = function(state)
    log("FeatureToggle_30", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_30", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_30"] = state
    Features["FeatureToggle_30"](state)
end, false)

-- Slider 30
Config.Sliders["FeatureSlider_30"] = 50
Features["FeatureSlider_30"] = function(value)
    log("FeatureSlider_30", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_30", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_30"] = val
    Features["FeatureSlider_30"](val)
end, 50)

-- Dropdown 30
Config.Dropdown["FeatureDropdown_30"] = "Medium"
Features["FeatureDropdown_30"] = function(option)
    log("FeatureDropdown_30", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_30", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_30"] = option
    Features["FeatureDropdown_30"](option)
end, "Medium")

-- Toggle 31
Config.Toggles["FeatureToggle_31"] = false
Features["FeatureToggle_31"] = function(state)
    log("FeatureToggle_31", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_31", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_31"] = state
    Features["FeatureToggle_31"](state)
end, false)

-- Slider 31
Config.Sliders["FeatureSlider_31"] = 50
Features["FeatureSlider_31"] = function(value)
    log("FeatureSlider_31", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_31", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_31"] = val
    Features["FeatureSlider_31"](val)
end, 50)

-- Dropdown 31
Config.Dropdown["FeatureDropdown_31"] = "Medium"
Features["FeatureDropdown_31"] = function(option)
    log("FeatureDropdown_31", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_31", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_31"] = option
    Features["FeatureDropdown_31"](option)
end, "Medium")

-- Toggle 32
Config.Toggles["FeatureToggle_32"] = false
Features["FeatureToggle_32"] = function(state)
    log("FeatureToggle_32", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_32", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_32"] = state
    Features["FeatureToggle_32"](state)
end, false)

-- Slider 32
Config.Sliders["FeatureSlider_32"] = 50
Features["FeatureSlider_32"] = function(value)
    log("FeatureSlider_32", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_32", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_32"] = val
    Features["FeatureSlider_32"](val)
end, 50)

-- Dropdown 32
Config.Dropdown["FeatureDropdown_32"] = "Medium"
Features["FeatureDropdown_32"] = function(option)
    log("FeatureDropdown_32", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_32", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_32"] = option
    Features["FeatureDropdown_32"](option)
end, "Medium")

-- Toggle 33
Config.Toggles["FeatureToggle_33"] = false
Features["FeatureToggle_33"] = function(state)
    log("FeatureToggle_33", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_33", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_33"] = state
    Features["FeatureToggle_33"](state)
end, false)

-- Slider 33
Config.Sliders["FeatureSlider_33"] = 50
Features["FeatureSlider_33"] = function(value)
    log("FeatureSlider_33", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_33", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_33"] = val
    Features["FeatureSlider_33"](val)
end, 50)

-- Dropdown 33
Config.Dropdown["FeatureDropdown_33"] = "Medium"
Features["FeatureDropdown_33"] = function(option)
    log("FeatureDropdown_33", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_33", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_33"] = option
    Features["FeatureDropdown_33"](option)
end, "Medium")

-- Toggle 34
Config.Toggles["FeatureToggle_34"] = false
Features["FeatureToggle_34"] = function(state)
    log("FeatureToggle_34", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_34", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_34"] = state
    Features["FeatureToggle_34"](state)
end, false)

-- Slider 34
Config.Sliders["FeatureSlider_34"] = 50
Features["FeatureSlider_34"] = function(value)
    log("FeatureSlider_34", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_34", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_34"] = val
    Features["FeatureSlider_34"](val)
end, 50)

-- Dropdown 34
Config.Dropdown["FeatureDropdown_34"] = "Medium"
Features["FeatureDropdown_34"] = function(option)
    log("FeatureDropdown_34", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_34", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_34"] = option
    Features["FeatureDropdown_34"](option)
end, "Medium")

-- Toggle 35
Config.Toggles["FeatureToggle_35"] = false
Features["FeatureToggle_35"] = function(state)
    log("FeatureToggle_35", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_35", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_35"] = state
    Features["FeatureToggle_35"](state)
end, false)

-- Slider 35
Config.Sliders["FeatureSlider_35"] = 50
Features["FeatureSlider_35"] = function(value)
    log("FeatureSlider_35", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_35", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_35"] = val
    Features["FeatureSlider_35"](val)
end, 50)

-- Dropdown 35
Config.Dropdown["FeatureDropdown_35"] = "Medium"
Features["FeatureDropdown_35"] = function(option)
    log("FeatureDropdown_35", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_35", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_35"] = option
    Features["FeatureDropdown_35"](option)
end, "Medium")

-- Toggle 36
Config.Toggles["FeatureToggle_36"] = false
Features["FeatureToggle_36"] = function(state)
    log("FeatureToggle_36", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_36", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_36"] = state
    Features["FeatureToggle_36"](state)
end, false)

-- Slider 36
Config.Sliders["FeatureSlider_36"] = 50
Features["FeatureSlider_36"] = function(value)
    log("FeatureSlider_36", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_36", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_36"] = val
    Features["FeatureSlider_36"](val)
end, 50)

-- Dropdown 36
Config.Dropdown["FeatureDropdown_36"] = "Medium"
Features["FeatureDropdown_36"] = function(option)
    log("FeatureDropdown_36", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_36", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_36"] = option
    Features["FeatureDropdown_36"](option)
end, "Medium")

-- Toggle 37
Config.Toggles["FeatureToggle_37"] = false
Features["FeatureToggle_37"] = function(state)
    log("FeatureToggle_37", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_37", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_37"] = state
    Features["FeatureToggle_37"](state)
end, false)

-- Slider 37
Config.Sliders["FeatureSlider_37"] = 50
Features["FeatureSlider_37"] = function(value)
    log("FeatureSlider_37", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_37", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_37"] = val
    Features["FeatureSlider_37"](val)
end, 50)

-- Dropdown 37
Config.Dropdown["FeatureDropdown_37"] = "Medium"
Features["FeatureDropdown_37"] = function(option)
    log("FeatureDropdown_37", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_37", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_37"] = option
    Features["FeatureDropdown_37"](option)
end, "Medium")

-- Toggle 38
Config.Toggles["FeatureToggle_38"] = false
Features["FeatureToggle_38"] = function(state)
    log("FeatureToggle_38", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_38", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_38"] = state
    Features["FeatureToggle_38"](state)
end, false)

-- Slider 38
Config.Sliders["FeatureSlider_38"] = 50
Features["FeatureSlider_38"] = function(value)
    log("FeatureSlider_38", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_38", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_38"] = val
    Features["FeatureSlider_38"](val)
end, 50)

-- Dropdown 38
Config.Dropdown["FeatureDropdown_38"] = "Medium"
Features["FeatureDropdown_38"] = function(option)
    log("FeatureDropdown_38", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_38", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_38"] = option
    Features["FeatureDropdown_38"](option)
end, "Medium")

-- Toggle 39
Config.Toggles["FeatureToggle_39"] = false
Features["FeatureToggle_39"] = function(state)
    log("FeatureToggle_39", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_39", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_39"] = state
    Features["FeatureToggle_39"](state)
end, false)

-- Slider 39
Config.Sliders["FeatureSlider_39"] = 50
Features["FeatureSlider_39"] = function(value)
    log("FeatureSlider_39", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_39", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_39"] = val
    Features["FeatureSlider_39"](val)
end, 50)

-- Dropdown 39
Config.Dropdown["FeatureDropdown_39"] = "Medium"
Features["FeatureDropdown_39"] = function(option)
    log("FeatureDropdown_39", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_39", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_39"] = option
    Features["FeatureDropdown_39"](option)
end, "Medium")

-- Toggle 40
Config.Toggles["FeatureToggle_40"] = false
Features["FeatureToggle_40"] = function(state)
    log("FeatureToggle_40", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_40", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_40"] = state
    Features["FeatureToggle_40"](state)
end, false)

-- Slider 40
Config.Sliders["FeatureSlider_40"] = 50
Features["FeatureSlider_40"] = function(value)
    log("FeatureSlider_40", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_40", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_40"] = val
    Features["FeatureSlider_40"](val)
end, 50)

-- Dropdown 40
Config.Dropdown["FeatureDropdown_40"] = "Medium"
Features["FeatureDropdown_40"] = function(option)
    log("FeatureDropdown_40", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_40", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_40"] = option
    Features["FeatureDropdown_40"](option)
end, "Medium")

-- Toggle 41
Config.Toggles["FeatureToggle_41"] = false
Features["FeatureToggle_41"] = function(state)
    log("FeatureToggle_41", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_41", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_41"] = state
    Features["FeatureToggle_41"](state)
end, false)

-- Slider 41
Config.Sliders["FeatureSlider_41"] = 50
Features["FeatureSlider_41"] = function(value)
    log("FeatureSlider_41", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_41", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_41"] = val
    Features["FeatureSlider_41"](val)
end, 50)

-- Dropdown 41
Config.Dropdown["FeatureDropdown_41"] = "Medium"
Features["FeatureDropdown_41"] = function(option)
    log("FeatureDropdown_41", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_41", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_41"] = option
    Features["FeatureDropdown_41"](option)
end, "Medium")

-- Toggle 42
Config.Toggles["FeatureToggle_42"] = false
Features["FeatureToggle_42"] = function(state)
    log("FeatureToggle_42", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_42", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_42"] = state
    Features["FeatureToggle_42"](state)
end, false)

-- Slider 42
Config.Sliders["FeatureSlider_42"] = 50
Features["FeatureSlider_42"] = function(value)
    log("FeatureSlider_42", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_42", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_42"] = val
    Features["FeatureSlider_42"](val)
end, 50)

-- Dropdown 42
Config.Dropdown["FeatureDropdown_42"] = "Medium"
Features["FeatureDropdown_42"] = function(option)
    log("FeatureDropdown_42", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_42", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_42"] = option
    Features["FeatureDropdown_42"](option)
end, "Medium")

-- Toggle 43
Config.Toggles["FeatureToggle_43"] = false
Features["FeatureToggle_43"] = function(state)
    log("FeatureToggle_43", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_43", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_43"] = state
    Features["FeatureToggle_43"](state)
end, false)

-- Slider 43
Config.Sliders["FeatureSlider_43"] = 50
Features["FeatureSlider_43"] = function(value)
    log("FeatureSlider_43", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_43", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_43"] = val
    Features["FeatureSlider_43"](val)
end, 50)

-- Dropdown 43
Config.Dropdown["FeatureDropdown_43"] = "Medium"
Features["FeatureDropdown_43"] = function(option)
    log("FeatureDropdown_43", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_43", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_43"] = option
    Features["FeatureDropdown_43"](option)
end, "Medium")

-- Toggle 44
Config.Toggles["FeatureToggle_44"] = false
Features["FeatureToggle_44"] = function(state)
    log("FeatureToggle_44", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_44", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_44"] = state
    Features["FeatureToggle_44"](state)
end, false)

-- Slider 44
Config.Sliders["FeatureSlider_44"] = 50
Features["FeatureSlider_44"] = function(value)
    log("FeatureSlider_44", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_44", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_44"] = val
    Features["FeatureSlider_44"](val)
end, 50)

-- Dropdown 44
Config.Dropdown["FeatureDropdown_44"] = "Medium"
Features["FeatureDropdown_44"] = function(option)
    log("FeatureDropdown_44", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_44", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_44"] = option
    Features["FeatureDropdown_44"](option)
end, "Medium")

-- Toggle 45
Config.Toggles["FeatureToggle_45"] = false
Features["FeatureToggle_45"] = function(state)
    log("FeatureToggle_45", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_45", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_45"] = state
    Features["FeatureToggle_45"](state)
end, false)

-- Slider 45
Config.Sliders["FeatureSlider_45"] = 50
Features["FeatureSlider_45"] = function(value)
    log("FeatureSlider_45", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_45", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_45"] = val
    Features["FeatureSlider_45"](val)
end, 50)

-- Dropdown 45
Config.Dropdown["FeatureDropdown_45"] = "Medium"
Features["FeatureDropdown_45"] = function(option)
    log("FeatureDropdown_45", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_45", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_45"] = option
    Features["FeatureDropdown_45"](option)
end, "Medium")

-- Toggle 46
Config.Toggles["FeatureToggle_46"] = false
Features["FeatureToggle_46"] = function(state)
    log("FeatureToggle_46", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_46", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_46"] = state
    Features["FeatureToggle_46"](state)
end, false)

-- Slider 46
Config.Sliders["FeatureSlider_46"] = 50
Features["FeatureSlider_46"] = function(value)
    log("FeatureSlider_46", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_46", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_46"] = val
    Features["FeatureSlider_46"](val)
end, 50)

-- Dropdown 46
Config.Dropdown["FeatureDropdown_46"] = "Medium"
Features["FeatureDropdown_46"] = function(option)
    log("FeatureDropdown_46", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_46", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_46"] = option
    Features["FeatureDropdown_46"](option)
end, "Medium")

-- Toggle 47
Config.Toggles["FeatureToggle_47"] = false
Features["FeatureToggle_47"] = function(state)
    log("FeatureToggle_47", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_47", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_47"] = state
    Features["FeatureToggle_47"](state)
end, false)

-- Slider 47
Config.Sliders["FeatureSlider_47"] = 50
Features["FeatureSlider_47"] = function(value)
    log("FeatureSlider_47", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_47", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_47"] = val
    Features["FeatureSlider_47"](val)
end, 50)

-- Dropdown 47
Config.Dropdown["FeatureDropdown_47"] = "Medium"
Features["FeatureDropdown_47"] = function(option)
    log("FeatureDropdown_47", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_47", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_47"] = option
    Features["FeatureDropdown_47"](option)
end, "Medium")

-- Toggle 48
Config.Toggles["FeatureToggle_48"] = false
Features["FeatureToggle_48"] = function(state)
    log("FeatureToggle_48", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_48", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_48"] = state
    Features["FeatureToggle_48"](state)
end, false)

-- Slider 48
Config.Sliders["FeatureSlider_48"] = 50
Features["FeatureSlider_48"] = function(value)
    log("FeatureSlider_48", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_48", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_48"] = val
    Features["FeatureSlider_48"](val)
end, 50)

-- Dropdown 48
Config.Dropdown["FeatureDropdown_48"] = "Medium"
Features["FeatureDropdown_48"] = function(option)
    log("FeatureDropdown_48", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_48", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_48"] = option
    Features["FeatureDropdown_48"](option)
end, "Medium")

-- Toggle 49
Config.Toggles["FeatureToggle_49"] = false
Features["FeatureToggle_49"] = function(state)
    log("FeatureToggle_49", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_49", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_49"] = state
    Features["FeatureToggle_49"](state)
end, false)

-- Slider 49
Config.Sliders["FeatureSlider_49"] = 50
Features["FeatureSlider_49"] = function(value)
    log("FeatureSlider_49", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_49", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_49"] = val
    Features["FeatureSlider_49"](val)
end, 50)

-- Dropdown 49
Config.Dropdown["FeatureDropdown_49"] = "Medium"
Features["FeatureDropdown_49"] = function(option)
    log("FeatureDropdown_49", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_49", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_49"] = option
    Features["FeatureDropdown_49"](option)
end, "Medium")

-- Toggle 50
Config.Toggles["FeatureToggle_50"] = false
Features["FeatureToggle_50"] = function(state)
    log("FeatureToggle_50", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_50", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_50"] = state
    Features["FeatureToggle_50"](state)
end, false)

-- Slider 50
Config.Sliders["FeatureSlider_50"] = 50
Features["FeatureSlider_50"] = function(value)
    log("FeatureSlider_50", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_50", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_50"] = val
    Features["FeatureSlider_50"](val)
end, 50)

-- Dropdown 50
Config.Dropdown["FeatureDropdown_50"] = "Medium"
Features["FeatureDropdown_50"] = function(option)
    log("FeatureDropdown_50", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_50", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_50"] = option
    Features["FeatureDropdown_50"](option)
end, "Medium")

-- Toggle 51
Config.Toggles["FeatureToggle_51"] = false
Features["FeatureToggle_51"] = function(state)
    log("FeatureToggle_51", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_51", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_51"] = state
    Features["FeatureToggle_51"](state)
end, false)

-- Slider 51
Config.Sliders["FeatureSlider_51"] = 50
Features["FeatureSlider_51"] = function(value)
    log("FeatureSlider_51", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_51", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_51"] = val
    Features["FeatureSlider_51"](val)
end, 50)

-- Dropdown 51
Config.Dropdown["FeatureDropdown_51"] = "Medium"
Features["FeatureDropdown_51"] = function(option)
    log("FeatureDropdown_51", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_51", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_51"] = option
    Features["FeatureDropdown_51"](option)
end, "Medium")

-- Toggle 52
Config.Toggles["FeatureToggle_52"] = false
Features["FeatureToggle_52"] = function(state)
    log("FeatureToggle_52", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_52", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_52"] = state
    Features["FeatureToggle_52"](state)
end, false)

-- Slider 52
Config.Sliders["FeatureSlider_52"] = 50
Features["FeatureSlider_52"] = function(value)
    log("FeatureSlider_52", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_52", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_52"] = val
    Features["FeatureSlider_52"](val)
end, 50)

-- Dropdown 52
Config.Dropdown["FeatureDropdown_52"] = "Medium"
Features["FeatureDropdown_52"] = function(option)
    log("FeatureDropdown_52", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_52", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_52"] = option
    Features["FeatureDropdown_52"](option)
end, "Medium")

-- Toggle 53
Config.Toggles["FeatureToggle_53"] = false
Features["FeatureToggle_53"] = function(state)
    log("FeatureToggle_53", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_53", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_53"] = state
    Features["FeatureToggle_53"](state)
end, false)

-- Slider 53
Config.Sliders["FeatureSlider_53"] = 50
Features["FeatureSlider_53"] = function(value)
    log("FeatureSlider_53", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_53", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_53"] = val
    Features["FeatureSlider_53"](val)
end, 50)

-- Dropdown 53
Config.Dropdown["FeatureDropdown_53"] = "Medium"
Features["FeatureDropdown_53"] = function(option)
    log("FeatureDropdown_53", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_53", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_53"] = option
    Features["FeatureDropdown_53"](option)
end, "Medium")

-- Toggle 54
Config.Toggles["FeatureToggle_54"] = false
Features["FeatureToggle_54"] = function(state)
    log("FeatureToggle_54", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_54", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_54"] = state
    Features["FeatureToggle_54"](state)
end, false)

-- Slider 54
Config.Sliders["FeatureSlider_54"] = 50
Features["FeatureSlider_54"] = function(value)
    log("FeatureSlider_54", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_54", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_54"] = val
    Features["FeatureSlider_54"](val)
end, 50)

-- Dropdown 54
Config.Dropdown["FeatureDropdown_54"] = "Medium"
Features["FeatureDropdown_54"] = function(option)
    log("FeatureDropdown_54", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_54", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_54"] = option
    Features["FeatureDropdown_54"](option)
end, "Medium")

-- Toggle 55
Config.Toggles["FeatureToggle_55"] = false
Features["FeatureToggle_55"] = function(state)
    log("FeatureToggle_55", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_55", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_55"] = state
    Features["FeatureToggle_55"](state)
end, false)

-- Slider 55
Config.Sliders["FeatureSlider_55"] = 50
Features["FeatureSlider_55"] = function(value)
    log("FeatureSlider_55", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_55", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_55"] = val
    Features["FeatureSlider_55"](val)
end, 50)

-- Dropdown 55
Config.Dropdown["FeatureDropdown_55"] = "Medium"
Features["FeatureDropdown_55"] = function(option)
    log("FeatureDropdown_55", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_55", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_55"] = option
    Features["FeatureDropdown_55"](option)
end, "Medium")

-- Toggle 56
Config.Toggles["FeatureToggle_56"] = false
Features["FeatureToggle_56"] = function(state)
    log("FeatureToggle_56", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_56", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_56"] = state
    Features["FeatureToggle_56"](state)
end, false)

-- Slider 56
Config.Sliders["FeatureSlider_56"] = 50
Features["FeatureSlider_56"] = function(value)
    log("FeatureSlider_56", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_56", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_56"] = val
    Features["FeatureSlider_56"](val)
end, 50)

-- Dropdown 56
Config.Dropdown["FeatureDropdown_56"] = "Medium"
Features["FeatureDropdown_56"] = function(option)
    log("FeatureDropdown_56", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_56", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_56"] = option
    Features["FeatureDropdown_56"](option)
end, "Medium")

-- Toggle 57
Config.Toggles["FeatureToggle_57"] = false
Features["FeatureToggle_57"] = function(state)
    log("FeatureToggle_57", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_57", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_57"] = state
    Features["FeatureToggle_57"](state)
end, false)

-- Slider 57
Config.Sliders["FeatureSlider_57"] = 50
Features["FeatureSlider_57"] = function(value)
    log("FeatureSlider_57", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_57", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_57"] = val
    Features["FeatureSlider_57"](val)
end, 50)

-- Dropdown 57
Config.Dropdown["FeatureDropdown_57"] = "Medium"
Features["FeatureDropdown_57"] = function(option)
    log("FeatureDropdown_57", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_57", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_57"] = option
    Features["FeatureDropdown_57"](option)
end, "Medium")

-- Toggle 58
Config.Toggles["FeatureToggle_58"] = false
Features["FeatureToggle_58"] = function(state)
    log("FeatureToggle_58", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_58", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_58"] = state
    Features["FeatureToggle_58"](state)
end, false)

-- Slider 58
Config.Sliders["FeatureSlider_58"] = 50
Features["FeatureSlider_58"] = function(value)
    log("FeatureSlider_58", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_58", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_58"] = val
    Features["FeatureSlider_58"](val)
end, 50)

-- Dropdown 58
Config.Dropdown["FeatureDropdown_58"] = "Medium"
Features["FeatureDropdown_58"] = function(option)
    log("FeatureDropdown_58", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_58", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_58"] = option
    Features["FeatureDropdown_58"](option)
end, "Medium")

-- Toggle 59
Config.Toggles["FeatureToggle_59"] = false
Features["FeatureToggle_59"] = function(state)
    log("FeatureToggle_59", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_59", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_59"] = state
    Features["FeatureToggle_59"](state)
end, false)

-- Slider 59
Config.Sliders["FeatureSlider_59"] = 50
Features["FeatureSlider_59"] = function(value)
    log("FeatureSlider_59", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_59", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_59"] = val
    Features["FeatureSlider_59"](val)
end, 50)

-- Dropdown 59
Config.Dropdown["FeatureDropdown_59"] = "Medium"
Features["FeatureDropdown_59"] = function(option)
    log("FeatureDropdown_59", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_59", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_59"] = option
    Features["FeatureDropdown_59"](option)
end, "Medium")

-- Toggle 60
Config.Toggles["FeatureToggle_60"] = false
Features["FeatureToggle_60"] = function(state)
    log("FeatureToggle_60", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_60", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_60"] = state
    Features["FeatureToggle_60"](state)
end, false)

-- Slider 60
Config.Sliders["FeatureSlider_60"] = 50
Features["FeatureSlider_60"] = function(value)
    log("FeatureSlider_60", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_60", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_60"] = val
    Features["FeatureSlider_60"](val)
end, 50)

-- Dropdown 60
Config.Dropdown["FeatureDropdown_60"] = "Medium"
Features["FeatureDropdown_60"] = function(option)
    log("FeatureDropdown_60", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_60", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_60"] = option
    Features["FeatureDropdown_60"](option)
end, "Medium")

-- Toggle 61
Config.Toggles["FeatureToggle_61"] = false
Features["FeatureToggle_61"] = function(state)
    log("FeatureToggle_61", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_61", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_61"] = state
    Features["FeatureToggle_61"](state)
end, false)

-- Slider 61
Config.Sliders["FeatureSlider_61"] = 50
Features["FeatureSlider_61"] = function(value)
    log("FeatureSlider_61", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_61", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_61"] = val
    Features["FeatureSlider_61"](val)
end, 50)

-- Dropdown 61
Config.Dropdown["FeatureDropdown_61"] = "Medium"
Features["FeatureDropdown_61"] = function(option)
    log("FeatureDropdown_61", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_61", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_61"] = option
    Features["FeatureDropdown_61"](option)
end, "Medium")

-- Toggle 62
Config.Toggles["FeatureToggle_62"] = false
Features["FeatureToggle_62"] = function(state)
    log("FeatureToggle_62", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_62", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_62"] = state
    Features["FeatureToggle_62"](state)
end, false)

-- Slider 62
Config.Sliders["FeatureSlider_62"] = 50
Features["FeatureSlider_62"] = function(value)
    log("FeatureSlider_62", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_62", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_62"] = val
    Features["FeatureSlider_62"](val)
end, 50)

-- Dropdown 62
Config.Dropdown["FeatureDropdown_62"] = "Medium"
Features["FeatureDropdown_62"] = function(option)
    log("FeatureDropdown_62", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_62", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_62"] = option
    Features["FeatureDropdown_62"](option)
end, "Medium")

-- Toggle 63
Config.Toggles["FeatureToggle_63"] = false
Features["FeatureToggle_63"] = function(state)
    log("FeatureToggle_63", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_63", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_63"] = state
    Features["FeatureToggle_63"](state)
end, false)

-- Slider 63
Config.Sliders["FeatureSlider_63"] = 50
Features["FeatureSlider_63"] = function(value)
    log("FeatureSlider_63", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_63", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_63"] = val
    Features["FeatureSlider_63"](val)
end, 50)

-- Dropdown 63
Config.Dropdown["FeatureDropdown_63"] = "Medium"
Features["FeatureDropdown_63"] = function(option)
    log("FeatureDropdown_63", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_63", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_63"] = option
    Features["FeatureDropdown_63"](option)
end, "Medium")

-- Toggle 64
Config.Toggles["FeatureToggle_64"] = false
Features["FeatureToggle_64"] = function(state)
    log("FeatureToggle_64", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_64", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_64"] = state
    Features["FeatureToggle_64"](state)
end, false)

-- Slider 64
Config.Sliders["FeatureSlider_64"] = 50
Features["FeatureSlider_64"] = function(value)
    log("FeatureSlider_64", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_64", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_64"] = val
    Features["FeatureSlider_64"](val)
end, 50)

-- Dropdown 64
Config.Dropdown["FeatureDropdown_64"] = "Medium"
Features["FeatureDropdown_64"] = function(option)
    log("FeatureDropdown_64", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_64", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_64"] = option
    Features["FeatureDropdown_64"](option)
end, "Medium")

-- Toggle 65
Config.Toggles["FeatureToggle_65"] = false
Features["FeatureToggle_65"] = function(state)
    log("FeatureToggle_65", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_65", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_65"] = state
    Features["FeatureToggle_65"](state)
end, false)

-- Slider 65
Config.Sliders["FeatureSlider_65"] = 50
Features["FeatureSlider_65"] = function(value)
    log("FeatureSlider_65", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_65", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_65"] = val
    Features["FeatureSlider_65"](val)
end, 50)

-- Dropdown 65
Config.Dropdown["FeatureDropdown_65"] = "Medium"
Features["FeatureDropdown_65"] = function(option)
    log("FeatureDropdown_65", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_65", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_65"] = option
    Features["FeatureDropdown_65"](option)
end, "Medium")

-- Toggle 66
Config.Toggles["FeatureToggle_66"] = false
Features["FeatureToggle_66"] = function(state)
    log("FeatureToggle_66", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_66", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_66"] = state
    Features["FeatureToggle_66"](state)
end, false)

-- Slider 66
Config.Sliders["FeatureSlider_66"] = 50
Features["FeatureSlider_66"] = function(value)
    log("FeatureSlider_66", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_66", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_66"] = val
    Features["FeatureSlider_66"](val)
end, 50)

-- Dropdown 66
Config.Dropdown["FeatureDropdown_66"] = "Medium"
Features["FeatureDropdown_66"] = function(option)
    log("FeatureDropdown_66", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_66", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_66"] = option
    Features["FeatureDropdown_66"](option)
end, "Medium")

-- Toggle 67
Config.Toggles["FeatureToggle_67"] = false
Features["FeatureToggle_67"] = function(state)
    log("FeatureToggle_67", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_67", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_67"] = state
    Features["FeatureToggle_67"](state)
end, false)

-- Slider 67
Config.Sliders["FeatureSlider_67"] = 50
Features["FeatureSlider_67"] = function(value)
    log("FeatureSlider_67", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_67", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_67"] = val
    Features["FeatureSlider_67"](val)
end, 50)

-- Dropdown 67
Config.Dropdown["FeatureDropdown_67"] = "Medium"
Features["FeatureDropdown_67"] = function(option)
    log("FeatureDropdown_67", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_67", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_67"] = option
    Features["FeatureDropdown_67"](option)
end, "Medium")

-- Toggle 68
Config.Toggles["FeatureToggle_68"] = false
Features["FeatureToggle_68"] = function(state)
    log("FeatureToggle_68", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_68", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_68"] = state
    Features["FeatureToggle_68"](state)
end, false)

-- Slider 68
Config.Sliders["FeatureSlider_68"] = 50
Features["FeatureSlider_68"] = function(value)
    log("FeatureSlider_68", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_68", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_68"] = val
    Features["FeatureSlider_68"](val)
end, 50)

-- Dropdown 68
Config.Dropdown["FeatureDropdown_68"] = "Medium"
Features["FeatureDropdown_68"] = function(option)
    log("FeatureDropdown_68", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_68", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_68"] = option
    Features["FeatureDropdown_68"](option)
end, "Medium")

-- Toggle 69
Config.Toggles["FeatureToggle_69"] = false
Features["FeatureToggle_69"] = function(state)
    log("FeatureToggle_69", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_69", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_69"] = state
    Features["FeatureToggle_69"](state)
end, false)

-- Slider 69
Config.Sliders["FeatureSlider_69"] = 50
Features["FeatureSlider_69"] = function(value)
    log("FeatureSlider_69", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_69", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_69"] = val
    Features["FeatureSlider_69"](val)
end, 50)

-- Dropdown 69
Config.Dropdown["FeatureDropdown_69"] = "Medium"
Features["FeatureDropdown_69"] = function(option)
    log("FeatureDropdown_69", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_69", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_69"] = option
    Features["FeatureDropdown_69"](option)
end, "Medium")

-- Toggle 70
Config.Toggles["FeatureToggle_70"] = false
Features["FeatureToggle_70"] = function(state)
    log("FeatureToggle_70", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_70", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_70"] = state
    Features["FeatureToggle_70"](state)
end, false)

-- Slider 70
Config.Sliders["FeatureSlider_70"] = 50
Features["FeatureSlider_70"] = function(value)
    log("FeatureSlider_70", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_70", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_70"] = val
    Features["FeatureSlider_70"](val)
end, 50)

-- Dropdown 70
Config.Dropdown["FeatureDropdown_70"] = "Medium"
Features["FeatureDropdown_70"] = function(option)
    log("FeatureDropdown_70", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_70", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_70"] = option
    Features["FeatureDropdown_70"](option)
end, "Medium")

-- Toggle 71
Config.Toggles["FeatureToggle_71"] = false
Features["FeatureToggle_71"] = function(state)
    log("FeatureToggle_71", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_71", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_71"] = state
    Features["FeatureToggle_71"](state)
end, false)

-- Slider 71
Config.Sliders["FeatureSlider_71"] = 50
Features["FeatureSlider_71"] = function(value)
    log("FeatureSlider_71", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_71", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_71"] = val
    Features["FeatureSlider_71"](val)
end, 50)

-- Dropdown 71
Config.Dropdown["FeatureDropdown_71"] = "Medium"
Features["FeatureDropdown_71"] = function(option)
    log("FeatureDropdown_71", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_71", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_71"] = option
    Features["FeatureDropdown_71"](option)
end, "Medium")

-- Toggle 72
Config.Toggles["FeatureToggle_72"] = false
Features["FeatureToggle_72"] = function(state)
    log("FeatureToggle_72", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_72", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_72"] = state
    Features["FeatureToggle_72"](state)
end, false)

-- Slider 72
Config.Sliders["FeatureSlider_72"] = 50
Features["FeatureSlider_72"] = function(value)
    log("FeatureSlider_72", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_72", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_72"] = val
    Features["FeatureSlider_72"](val)
end, 50)

-- Dropdown 72
Config.Dropdown["FeatureDropdown_72"] = "Medium"
Features["FeatureDropdown_72"] = function(option)
    log("FeatureDropdown_72", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_72", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_72"] = option
    Features["FeatureDropdown_72"](option)
end, "Medium")

-- Toggle 73
Config.Toggles["FeatureToggle_73"] = false
Features["FeatureToggle_73"] = function(state)
    log("FeatureToggle_73", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_73", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_73"] = state
    Features["FeatureToggle_73"](state)
end, false)

-- Slider 73
Config.Sliders["FeatureSlider_73"] = 50
Features["FeatureSlider_73"] = function(value)
    log("FeatureSlider_73", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_73", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_73"] = val
    Features["FeatureSlider_73"](val)
end, 50)

-- Dropdown 73
Config.Dropdown["FeatureDropdown_73"] = "Medium"
Features["FeatureDropdown_73"] = function(option)
    log("FeatureDropdown_73", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_73", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_73"] = option
    Features["FeatureDropdown_73"](option)
end, "Medium")

-- Toggle 74
Config.Toggles["FeatureToggle_74"] = false
Features["FeatureToggle_74"] = function(state)
    log("FeatureToggle_74", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_74", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_74"] = state
    Features["FeatureToggle_74"](state)
end, false)

-- Slider 74
Config.Sliders["FeatureSlider_74"] = 50
Features["FeatureSlider_74"] = function(value)
    log("FeatureSlider_74", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_74", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_74"] = val
    Features["FeatureSlider_74"](val)
end, 50)

-- Dropdown 74
Config.Dropdown["FeatureDropdown_74"] = "Medium"
Features["FeatureDropdown_74"] = function(option)
    log("FeatureDropdown_74", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_74", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_74"] = option
    Features["FeatureDropdown_74"](option)
end, "Medium")

-- Toggle 75
Config.Toggles["FeatureToggle_75"] = false
Features["FeatureToggle_75"] = function(state)
    log("FeatureToggle_75", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_75", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_75"] = state
    Features["FeatureToggle_75"](state)
end, false)

-- Slider 75
Config.Sliders["FeatureSlider_75"] = 50
Features["FeatureSlider_75"] = function(value)
    log("FeatureSlider_75", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_75", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_75"] = val
    Features["FeatureSlider_75"](val)
end, 50)

-- Dropdown 75
Config.Dropdown["FeatureDropdown_75"] = "Medium"
Features["FeatureDropdown_75"] = function(option)
    log("FeatureDropdown_75", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_75", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_75"] = option
    Features["FeatureDropdown_75"](option)
end, "Medium")

-- Toggle 76
Config.Toggles["FeatureToggle_76"] = false
Features["FeatureToggle_76"] = function(state)
    log("FeatureToggle_76", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_76", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_76"] = state
    Features["FeatureToggle_76"](state)
end, false)

-- Slider 76
Config.Sliders["FeatureSlider_76"] = 50
Features["FeatureSlider_76"] = function(value)
    log("FeatureSlider_76", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_76", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_76"] = val
    Features["FeatureSlider_76"](val)
end, 50)

-- Dropdown 76
Config.Dropdown["FeatureDropdown_76"] = "Medium"
Features["FeatureDropdown_76"] = function(option)
    log("FeatureDropdown_76", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_76", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_76"] = option
    Features["FeatureDropdown_76"](option)
end, "Medium")

-- Toggle 77
Config.Toggles["FeatureToggle_77"] = false
Features["FeatureToggle_77"] = function(state)
    log("FeatureToggle_77", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_77", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_77"] = state
    Features["FeatureToggle_77"](state)
end, false)

-- Slider 77
Config.Sliders["FeatureSlider_77"] = 50
Features["FeatureSlider_77"] = function(value)
    log("FeatureSlider_77", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_77", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_77"] = val
    Features["FeatureSlider_77"](val)
end, 50)

-- Dropdown 77
Config.Dropdown["FeatureDropdown_77"] = "Medium"
Features["FeatureDropdown_77"] = function(option)
    log("FeatureDropdown_77", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_77", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_77"] = option
    Features["FeatureDropdown_77"](option)
end, "Medium")

-- Toggle 78
Config.Toggles["FeatureToggle_78"] = false
Features["FeatureToggle_78"] = function(state)
    log("FeatureToggle_78", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_78", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_78"] = state
    Features["FeatureToggle_78"](state)
end, false)

-- Slider 78
Config.Sliders["FeatureSlider_78"] = 50
Features["FeatureSlider_78"] = function(value)
    log("FeatureSlider_78", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_78", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_78"] = val
    Features["FeatureSlider_78"](val)
end, 50)

-- Dropdown 78
Config.Dropdown["FeatureDropdown_78"] = "Medium"
Features["FeatureDropdown_78"] = function(option)
    log("FeatureDropdown_78", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_78", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_78"] = option
    Features["FeatureDropdown_78"](option)
end, "Medium")

-- Toggle 79
Config.Toggles["FeatureToggle_79"] = false
Features["FeatureToggle_79"] = function(state)
    log("FeatureToggle_79", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_79", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_79"] = state
    Features["FeatureToggle_79"](state)
end, false)

-- Slider 79
Config.Sliders["FeatureSlider_79"] = 50
Features["FeatureSlider_79"] = function(value)
    log("FeatureSlider_79", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_79", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_79"] = val
    Features["FeatureSlider_79"](val)
end, 50)

-- Dropdown 79
Config.Dropdown["FeatureDropdown_79"] = "Medium"
Features["FeatureDropdown_79"] = function(option)
    log("FeatureDropdown_79", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_79", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_79"] = option
    Features["FeatureDropdown_79"](option)
end, "Medium")

-- Toggle 80
Config.Toggles["FeatureToggle_80"] = false
Features["FeatureToggle_80"] = function(state)
    log("FeatureToggle_80", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_80", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_80"] = state
    Features["FeatureToggle_80"](state)
end, false)

-- Slider 80
Config.Sliders["FeatureSlider_80"] = 50
Features["FeatureSlider_80"] = function(value)
    log("FeatureSlider_80", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_80", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_80"] = val
    Features["FeatureSlider_80"](val)
end, 50)

-- Dropdown 80
Config.Dropdown["FeatureDropdown_80"] = "Medium"
Features["FeatureDropdown_80"] = function(option)
    log("FeatureDropdown_80", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_80", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_80"] = option
    Features["FeatureDropdown_80"](option)
end, "Medium")

-- Toggle 81
Config.Toggles["FeatureToggle_81"] = false
Features["FeatureToggle_81"] = function(state)
    log("FeatureToggle_81", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_81", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_81"] = state
    Features["FeatureToggle_81"](state)
end, false)

-- Slider 81
Config.Sliders["FeatureSlider_81"] = 50
Features["FeatureSlider_81"] = function(value)
    log("FeatureSlider_81", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_81", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_81"] = val
    Features["FeatureSlider_81"](val)
end, 50)

-- Dropdown 81
Config.Dropdown["FeatureDropdown_81"] = "Medium"
Features["FeatureDropdown_81"] = function(option)
    log("FeatureDropdown_81", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_81", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_81"] = option
    Features["FeatureDropdown_81"](option)
end, "Medium")

-- Toggle 82
Config.Toggles["FeatureToggle_82"] = false
Features["FeatureToggle_82"] = function(state)
    log("FeatureToggle_82", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_82", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_82"] = state
    Features["FeatureToggle_82"](state)
end, false)

-- Slider 82
Config.Sliders["FeatureSlider_82"] = 50
Features["FeatureSlider_82"] = function(value)
    log("FeatureSlider_82", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_82", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_82"] = val
    Features["FeatureSlider_82"](val)
end, 50)

-- Dropdown 82
Config.Dropdown["FeatureDropdown_82"] = "Medium"
Features["FeatureDropdown_82"] = function(option)
    log("FeatureDropdown_82", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_82", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_82"] = option
    Features["FeatureDropdown_82"](option)
end, "Medium")

-- Toggle 83
Config.Toggles["FeatureToggle_83"] = false
Features["FeatureToggle_83"] = function(state)
    log("FeatureToggle_83", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_83", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_83"] = state
    Features["FeatureToggle_83"](state)
end, false)

-- Slider 83
Config.Sliders["FeatureSlider_83"] = 50
Features["FeatureSlider_83"] = function(value)
    log("FeatureSlider_83", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_83", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_83"] = val
    Features["FeatureSlider_83"](val)
end, 50)

-- Dropdown 83
Config.Dropdown["FeatureDropdown_83"] = "Medium"
Features["FeatureDropdown_83"] = function(option)
    log("FeatureDropdown_83", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_83", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_83"] = option
    Features["FeatureDropdown_83"](option)
end, "Medium")

-- Toggle 84
Config.Toggles["FeatureToggle_84"] = false
Features["FeatureToggle_84"] = function(state)
    log("FeatureToggle_84", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_84", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_84"] = state
    Features["FeatureToggle_84"](state)
end, false)

-- Slider 84
Config.Sliders["FeatureSlider_84"] = 50
Features["FeatureSlider_84"] = function(value)
    log("FeatureSlider_84", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_84", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_84"] = val
    Features["FeatureSlider_84"](val)
end, 50)

-- Dropdown 84
Config.Dropdown["FeatureDropdown_84"] = "Medium"
Features["FeatureDropdown_84"] = function(option)
    log("FeatureDropdown_84", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_84", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_84"] = option
    Features["FeatureDropdown_84"](option)
end, "Medium")

-- Toggle 85
Config.Toggles["FeatureToggle_85"] = false
Features["FeatureToggle_85"] = function(state)
    log("FeatureToggle_85", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_85", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_85"] = state
    Features["FeatureToggle_85"](state)
end, false)

-- Slider 85
Config.Sliders["FeatureSlider_85"] = 50
Features["FeatureSlider_85"] = function(value)
    log("FeatureSlider_85", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_85", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_85"] = val
    Features["FeatureSlider_85"](val)
end, 50)

-- Dropdown 85
Config.Dropdown["FeatureDropdown_85"] = "Medium"
Features["FeatureDropdown_85"] = function(option)
    log("FeatureDropdown_85", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_85", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_85"] = option
    Features["FeatureDropdown_85"](option)
end, "Medium")

-- Toggle 86
Config.Toggles["FeatureToggle_86"] = false
Features["FeatureToggle_86"] = function(state)
    log("FeatureToggle_86", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_86", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_86"] = state
    Features["FeatureToggle_86"](state)
end, false)

-- Slider 86
Config.Sliders["FeatureSlider_86"] = 50
Features["FeatureSlider_86"] = function(value)
    log("FeatureSlider_86", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_86", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_86"] = val
    Features["FeatureSlider_86"](val)
end, 50)

-- Dropdown 86
Config.Dropdown["FeatureDropdown_86"] = "Medium"
Features["FeatureDropdown_86"] = function(option)
    log("FeatureDropdown_86", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_86", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_86"] = option
    Features["FeatureDropdown_86"](option)
end, "Medium")

-- Toggle 87
Config.Toggles["FeatureToggle_87"] = false
Features["FeatureToggle_87"] = function(state)
    log("FeatureToggle_87", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_87", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_87"] = state
    Features["FeatureToggle_87"](state)
end, false)

-- Slider 87
Config.Sliders["FeatureSlider_87"] = 50
Features["FeatureSlider_87"] = function(value)
    log("FeatureSlider_87", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_87", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_87"] = val
    Features["FeatureSlider_87"](val)
end, 50)

-- Dropdown 87
Config.Dropdown["FeatureDropdown_87"] = "Medium"
Features["FeatureDropdown_87"] = function(option)
    log("FeatureDropdown_87", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_87", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_87"] = option
    Features["FeatureDropdown_87"](option)
end, "Medium")

-- Toggle 88
Config.Toggles["FeatureToggle_88"] = false
Features["FeatureToggle_88"] = function(state)
    log("FeatureToggle_88", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_88", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_88"] = state
    Features["FeatureToggle_88"](state)
end, false)

-- Slider 88
Config.Sliders["FeatureSlider_88"] = 50
Features["FeatureSlider_88"] = function(value)
    log("FeatureSlider_88", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_88", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_88"] = val
    Features["FeatureSlider_88"](val)
end, 50)

-- Dropdown 88
Config.Dropdown["FeatureDropdown_88"] = "Medium"
Features["FeatureDropdown_88"] = function(option)
    log("FeatureDropdown_88", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_88", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_88"] = option
    Features["FeatureDropdown_88"](option)
end, "Medium")

-- Toggle 89
Config.Toggles["FeatureToggle_89"] = false
Features["FeatureToggle_89"] = function(state)
    log("FeatureToggle_89", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_89", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_89"] = state
    Features["FeatureToggle_89"](state)
end, false)

-- Slider 89
Config.Sliders["FeatureSlider_89"] = 50
Features["FeatureSlider_89"] = function(value)
    log("FeatureSlider_89", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_89", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_89"] = val
    Features["FeatureSlider_89"](val)
end, 50)

-- Dropdown 89
Config.Dropdown["FeatureDropdown_89"] = "Medium"
Features["FeatureDropdown_89"] = function(option)
    log("FeatureDropdown_89", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_89", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_89"] = option
    Features["FeatureDropdown_89"](option)
end, "Medium")

-- Toggle 90
Config.Toggles["FeatureToggle_90"] = false
Features["FeatureToggle_90"] = function(state)
    log("FeatureToggle_90", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_90", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_90"] = state
    Features["FeatureToggle_90"](state)
end, false)

-- Slider 90
Config.Sliders["FeatureSlider_90"] = 50
Features["FeatureSlider_90"] = function(value)
    log("FeatureSlider_90", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_90", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_90"] = val
    Features["FeatureSlider_90"](val)
end, 50)

-- Dropdown 90
Config.Dropdown["FeatureDropdown_90"] = "Medium"
Features["FeatureDropdown_90"] = function(option)
    log("FeatureDropdown_90", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_90", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_90"] = option
    Features["FeatureDropdown_90"](option)
end, "Medium")

-- Toggle 91
Config.Toggles["FeatureToggle_91"] = false
Features["FeatureToggle_91"] = function(state)
    log("FeatureToggle_91", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_91", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_91"] = state
    Features["FeatureToggle_91"](state)
end, false)

-- Slider 91
Config.Sliders["FeatureSlider_91"] = 50
Features["FeatureSlider_91"] = function(value)
    log("FeatureSlider_91", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_91", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_91"] = val
    Features["FeatureSlider_91"](val)
end, 50)

-- Dropdown 91
Config.Dropdown["FeatureDropdown_91"] = "Medium"
Features["FeatureDropdown_91"] = function(option)
    log("FeatureDropdown_91", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_91", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_91"] = option
    Features["FeatureDropdown_91"](option)
end, "Medium")

-- Toggle 92
Config.Toggles["FeatureToggle_92"] = false
Features["FeatureToggle_92"] = function(state)
    log("FeatureToggle_92", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_92", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_92"] = state
    Features["FeatureToggle_92"](state)
end, false)

-- Slider 92
Config.Sliders["FeatureSlider_92"] = 50
Features["FeatureSlider_92"] = function(value)
    log("FeatureSlider_92", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_92", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_92"] = val
    Features["FeatureSlider_92"](val)
end, 50)

-- Dropdown 92
Config.Dropdown["FeatureDropdown_92"] = "Medium"
Features["FeatureDropdown_92"] = function(option)
    log("FeatureDropdown_92", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_92", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_92"] = option
    Features["FeatureDropdown_92"](option)
end, "Medium")

-- Toggle 93
Config.Toggles["FeatureToggle_93"] = false
Features["FeatureToggle_93"] = function(state)
    log("FeatureToggle_93", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_93", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_93"] = state
    Features["FeatureToggle_93"](state)
end, false)

-- Slider 93
Config.Sliders["FeatureSlider_93"] = 50
Features["FeatureSlider_93"] = function(value)
    log("FeatureSlider_93", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_93", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_93"] = val
    Features["FeatureSlider_93"](val)
end, 50)

-- Dropdown 93
Config.Dropdown["FeatureDropdown_93"] = "Medium"
Features["FeatureDropdown_93"] = function(option)
    log("FeatureDropdown_93", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_93", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_93"] = option
    Features["FeatureDropdown_93"](option)
end, "Medium")

-- Toggle 94
Config.Toggles["FeatureToggle_94"] = false
Features["FeatureToggle_94"] = function(state)
    log("FeatureToggle_94", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_94", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_94"] = state
    Features["FeatureToggle_94"](state)
end, false)

-- Slider 94
Config.Sliders["FeatureSlider_94"] = 50
Features["FeatureSlider_94"] = function(value)
    log("FeatureSlider_94", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_94", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_94"] = val
    Features["FeatureSlider_94"](val)
end, 50)

-- Dropdown 94
Config.Dropdown["FeatureDropdown_94"] = "Medium"
Features["FeatureDropdown_94"] = function(option)
    log("FeatureDropdown_94", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_94", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_94"] = option
    Features["FeatureDropdown_94"](option)
end, "Medium")

-- Toggle 95
Config.Toggles["FeatureToggle_95"] = false
Features["FeatureToggle_95"] = function(state)
    log("FeatureToggle_95", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_95", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_95"] = state
    Features["FeatureToggle_95"](state)
end, false)

-- Slider 95
Config.Sliders["FeatureSlider_95"] = 50
Features["FeatureSlider_95"] = function(value)
    log("FeatureSlider_95", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_95", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_95"] = val
    Features["FeatureSlider_95"](val)
end, 50)

-- Dropdown 95
Config.Dropdown["FeatureDropdown_95"] = "Medium"
Features["FeatureDropdown_95"] = function(option)
    log("FeatureDropdown_95", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_95", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_95"] = option
    Features["FeatureDropdown_95"](option)
end, "Medium")

-- Toggle 96
Config.Toggles["FeatureToggle_96"] = false
Features["FeatureToggle_96"] = function(state)
    log("FeatureToggle_96", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_96", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_96"] = state
    Features["FeatureToggle_96"](state)
end, false)

-- Slider 96
Config.Sliders["FeatureSlider_96"] = 50
Features["FeatureSlider_96"] = function(value)
    log("FeatureSlider_96", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_96", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_96"] = val
    Features["FeatureSlider_96"](val)
end, 50)

-- Dropdown 96
Config.Dropdown["FeatureDropdown_96"] = "Medium"
Features["FeatureDropdown_96"] = function(option)
    log("FeatureDropdown_96", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_96", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_96"] = option
    Features["FeatureDropdown_96"](option)
end, "Medium")

-- Toggle 97
Config.Toggles["FeatureToggle_97"] = false
Features["FeatureToggle_97"] = function(state)
    log("FeatureToggle_97", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_97", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_97"] = state
    Features["FeatureToggle_97"](state)
end, false)

-- Slider 97
Config.Sliders["FeatureSlider_97"] = 50
Features["FeatureSlider_97"] = function(value)
    log("FeatureSlider_97", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_97", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_97"] = val
    Features["FeatureSlider_97"](val)
end, 50)

-- Dropdown 97
Config.Dropdown["FeatureDropdown_97"] = "Medium"
Features["FeatureDropdown_97"] = function(option)
    log("FeatureDropdown_97", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_97", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_97"] = option
    Features["FeatureDropdown_97"](option)
end, "Medium")

-- Toggle 98
Config.Toggles["FeatureToggle_98"] = false
Features["FeatureToggle_98"] = function(state)
    log("FeatureToggle_98", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_98", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_98"] = state
    Features["FeatureToggle_98"](state)
end, false)

-- Slider 98
Config.Sliders["FeatureSlider_98"] = 50
Features["FeatureSlider_98"] = function(value)
    log("FeatureSlider_98", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_98", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_98"] = val
    Features["FeatureSlider_98"](val)
end, 50)

-- Dropdown 98
Config.Dropdown["FeatureDropdown_98"] = "Medium"
Features["FeatureDropdown_98"] = function(option)
    log("FeatureDropdown_98", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_98", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_98"] = option
    Features["FeatureDropdown_98"](option)
end, "Medium")

-- Toggle 99
Config.Toggles["FeatureToggle_99"] = false
Features["FeatureToggle_99"] = function(state)
    log("FeatureToggle_99", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_99", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_99"] = state
    Features["FeatureToggle_99"](state)
end, false)

-- Slider 99
Config.Sliders["FeatureSlider_99"] = 50
Features["FeatureSlider_99"] = function(value)
    log("FeatureSlider_99", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_99", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_99"] = val
    Features["FeatureSlider_99"](val)
end, 50)

-- Dropdown 99
Config.Dropdown["FeatureDropdown_99"] = "Medium"
Features["FeatureDropdown_99"] = function(option)
    log("FeatureDropdown_99", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_99", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_99"] = option
    Features["FeatureDropdown_99"](option)
end, "Medium")

-- Toggle 100
Config.Toggles["FeatureToggle_100"] = false
Features["FeatureToggle_100"] = function(state)
    log("FeatureToggle_100", state)
    -- Simulated Optimization: Removing Particles, Decals, etc.
    if state then
        for _, obj in ipairs(game:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") then
                safeRemove(obj)
            end
        end
    end
end
Tabs.General.NewToggle("FeatureToggle_100", "rbxassetid://7733911820", function(state)
    Config.Toggles["FeatureToggle_100"] = state
    Features["FeatureToggle_100"](state)
end, false)

-- Slider 100
Config.Sliders["FeatureSlider_100"] = 50
Features["FeatureSlider_100"] = function(value)
    log("FeatureSlider_100", value)
    game:GetService("Lighting").Brightness = value / 100
end
Tabs.Visuals.NewSlider("FeatureSlider_100", "rbxassetid://7733911820", 0, 100, function(val)
    Config.Sliders["FeatureSlider_100"] = val
    Features["FeatureSlider_100"](val)
end, 50)

-- Dropdown 100
Config.Dropdown["FeatureDropdown_100"] = "Medium"
Features["FeatureDropdown_100"] = function(option)
    log("FeatureDropdown_100", option)
    if option == "Low" then
        game:GetService("Lighting").FogEnd = 50
    elseif option == "Medium" then
        game:GetService("Lighting").FogEnd = 100
    elseif option == "High" then
        game:GetService("Lighting").FogEnd = 100000
    end
end
Tabs.Effects.NewDropdown("FeatureDropdown_100", "rbxassetid://7733911820", { "Low", "Medium", "High" }, function(option)
    Config.Dropdown["FeatureDropdown_100"] = option
    Features["FeatureDropdown_100"](option)
end, "Medium")

-- CONFIG SYSTEM
local HttpService = game:GetService("HttpService")
local ConfigFileName = "BloxStrapConfig.json"

local function SaveConfig()
    local data = HttpService:JSONEncode(Config)
    writefile(ConfigFileName, data)
    log("CONFIG", "Saved to " .. ConfigFileName)
end

local function LoadConfig()
    if isfile(ConfigFileName) then
        local data = readfile(ConfigFileName)
        local success, decoded = pcall(function()
            return HttpService:JSONDecode(data)
        end)
        if success and typeof(decoded) == "table" then
            Config = decoded
            log("CONFIG", "Loaded from " .. ConfigFileName)
        else
            warn("[BloxStrap] Failed to decode config.")
        end
    else
        warn("[BloxStrap] No config file found.")
    end
end

Tabs.Network.NewButton("Save Config", "rbxassetid://7733911820", function()
    SaveConfig()
end)

Tabs.Network.NewButton("Load Config", "rbxassetid://7733911820", function()
    LoadConfig()
end)

-- LocalPlayer Tab (100+ Features)
Tabs.LocalPlayer = UI.NewTab("LocalPlayer & Others", "rbxassetid://7733938485")

local Players = game:GetService("Players")
local LP = Players.LocalPlayer
local Char = LP.Character or LP.CharacterAdded:Wait()
local Humanoid = Char:WaitForChild("Humanoid")

for i = 1, 50 do
    local speedToggle = "SpeedBoost_"..i
    local jumpToggle = "JumpBoost_"..i

    Config.Toggles[speedToggle] = false
    Tabs.LocalPlayer.NewToggle(speedToggle, "rbxassetid://7733911820", function(state)
        Config.Toggles[speedToggle] = state
        if state then
            Humanoid.WalkSpeed = 16 + (i * 0.5)
        else
            Humanoid.WalkSpeed = 16
        end
        log(speedToggle, state)
    end, false)

    Config.Toggles[jumpToggle] = false
    Tabs.LocalPlayer.NewToggle(jumpToggle, "rbxassetid://7733911820", function(state)
        Config.Toggles[jumpToggle] = state
        if state then
            Humanoid.JumpPower = 50 + (i * 1)
        else
            Humanoid.JumpPower = 50
        end
        log(jumpToggle, state)
    end, false)
end

for i = 1, 10 do
    local gravSlider = "GravityLevel_"..i
    Config.Sliders[gravSlider] = 196.2
    Tabs.LocalPlayer.NewSlider(gravSlider, "rbxassetid://7733911820", 10, 300, function(val)
        Config.Sliders[gravSlider] = val
        game.Workspace.Gravity = val
        log(gravSlider, val)
    end, 196.2)
end

-- Additional tools & scripts under 'LocalPlayer & Others'

local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local Players = game:GetService("Players")
local LP = Players.LocalPlayer

-- FLY TOGGLE
Config.Toggles["EnableFly"] = false
Tabs["LocalPlayer & Others"].NewToggle("EnableFly", "rbxassetid://7733911820", function(state)
    Config.Toggles["EnableFly"] = state
    if state then
        log("EnableFly", "Fly enabled")
        local BodyGyro = Instance.new("BodyGyro", LP.Character.HumanoidRootPart)
        local BodyVelocity = Instance.new("BodyVelocity", LP.Character.HumanoidRootPart)
        BodyGyro.P = 9e4
        BodyGyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
        BodyGyro.cframe = LP.Character.HumanoidRootPart.CFrame
        BodyVelocity.velocity = Vector3.new(0,0,0)
        BodyVelocity.maxForce = Vector3.new(9e9, 9e9, 9e9)
    else
        for _, v in ipairs(LP.Character.HumanoidRootPart:GetChildren()) do
            if v:IsA("BodyGyro") or v:IsA("BodyVelocity") then
                v:Destroy()
            end
        end
    end
end, false)

-- NO SLOW
Config.Toggles["NoSlow"] = false
Tabs["LocalPlayer & Others"].NewToggle("NoSlow", "rbxassetid://7733911820", function(state)
    Config.Toggles["NoSlow"] = state
    if state then
        RunService.RenderStepped:Connect(function()
            if LP.Character and LP.Character:FindFirstChild("Humanoid") then
                if LP.Character.Humanoid.WalkSpeed < 16 then
                    LP.Character.Humanoid.WalkSpeed = 16
                end
            end
        end)
    end
end, false)

-- DEX EXPLORER BUTTON
Tabs["LocalPlayer & Others"].NewButton("Launch Dex", "rbxassetid://7733911820", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/peyton2465/Dex/master/out.lua"))()
end)

-- RSSpy BUTTON
Tabs["LocalPlayer & Others"].NewButton("Launch RemoteSpy", "rbxassetid://7733911820", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/exxtremestuffs/SimpleSpySource/master/SimpleSpy.lua"))()
end)

-- ESP SIMULATION TOGGLE
Config.Toggles["ESP"] = false
Tabs["LocalPlayer & Others"].NewToggle("ESP", "rbxassetid://7733911820", function(state)
    Config.Toggles["ESP"] = state
    if state then
        log("ESP", "Would initialize ESP overlays here")
    end
end, false)

-- Add dummy features to inflate size
for i = 1, 100 do
    local feature = "ExtraFeature_" .. i
    Config.Toggles[feature] = false
    Tabs["LocalPlayer & Others"].NewToggle(feature, "rbxassetid://7733911820", function(state)
        Config.Toggles[feature] = state
        log(feature, state)
    end, false)
end

-- EXTENDED BASIC FEATURES FOR 'LocalPlayer & Others' TAB
local Workspace = game:GetService("Workspace")
local Lighting = game:GetService("Lighting")

for i = 1, 300 do
    -- Create dummy toggle
    local toggleName = "BasicToggle_" .. i
    Config.Toggles[toggleName] = false
    Tabs["LocalPlayer & Others"].NewToggle(toggleName, "rbxassetid://7733911820", function(state)
        Config.Toggles[toggleName] = state
        log(toggleName, state)
        -- Simulate effect: remove visual effects
        if state then
            for _, obj in ipairs(Lighting:GetDescendants()) do
                if obj:IsA("ColorCorrectionEffect") or obj:IsA("BloomEffect") then
                    safeRemove(obj)
                end
            end
        end
    end, false)

    -- Create dummy slider
    local sliderName = "BasicSlider_" .. i
    Config.Sliders[sliderName] = 50
    Tabs["LocalPlayer & Others"].NewSlider(sliderName, "rbxassetid://7733911820", 0, 100, function(val)
        Config.Sliders[sliderName] = val
        log(sliderName, val)
    end, 50)

    -- Create dummy dropdown
    local dropdownName = "BasicDropdown_" .. i
    Config.Dropdown[dropdownName] = "Option1"
    Tabs["LocalPlayer & Others"].NewDropdown(dropdownName, "rbxassetid://7733911820", { "Option1", "Option2", "Option3" }, function(opt)
        Config.Dropdown[dropdownName] = opt
        log(dropdownName, opt)
    end, "Option1")
end
